{"version":3,"sources":["App.js","serviceWorker.js","index.js","bloomfilter.js","wordcastlogo_white.svg"],"names":["CancelToken","axios","CHANNEL","source","SquareData","x","y","type","Object","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","selected","letter","tempLetter","isSelected","Player","name","id","androidId","score","letters","Array","turns","clientIndex","isPassAlong","Letter","value","App","props","context","_this","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","_handleKeyDown","e","keyCode","state","gameState","langIndex","specialCoords","Boards","dist","setUpBoard","initializeLetterPool","addPlayer","moveCursor","console","log","key","i","letterPool","length","toLowerCase","gameGrid","cursorLocation","splice","setState","width","height","players","curTurn","turnCount","noScoreCount","isFirstLetterDown","boardIndex","isDict","isLoadingDict","loadingProgress","isPro","originTempSquare","originAxis","curDict","turnLog","handleMessage","bind","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","updateDimensions","componentDidMount","updateSenders","ii","result","charactersLength","charAt","Math","floor","random","_this2","path","Distributions","dictPath","fetch","then","r","text","splitDictRaw","split","splitDict","bloom","BloomFilter","nIndex","item","indexOf","normalize","replace","substr","push","add","require","falsecount","truecount","test","gib","makeid","percentage1","percentage2","testtrue","testfalse","blob","serialize","string","toString","buffer","Buffer","from","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","deserialize","_this3","addEventListener","_setTimeout","b","ctx","cast","framework","CastReceiverContext","getInstance","options","CastReceiverOptions","maxInactivity","customNamespaces","assign","system","MessageType","JSON","addCustomMessageListener","customEvent","data","senderId","EventType","SENDER_CONNECTED","event","SENDER_DISCONNECTED","handleDisconnect","start","message","connectedSenders","getSenders","debugstring","debugOnScreen","player","findPlayers","index","sendToast","undefined","msg","sendState","sendHurryUp","enablePro","isPassAlongPlayer","versionCode","startGame","switchLanguage","switchBoard","switchDict","cancelDictDownload","switchPassAlong","removePlayer","cancelGame","dir","placeLetter","jokerValue","endTurn","swapLetters","swapIndices","resetTempLetters","json","sendCustomMessage","sendJoinSuccess","sendGameStarted","endGame","content","findPlayer","cancel","autoStart","_this4","dictStatus","total","dictSize","get","cancelToken","c","onDownloadProgress","progressEvent","percent","loaded","response","catch","err","playersToRemove","indicesToRemove","passAlongIndex","allow","rand","prevLetter","stringify","endTurnNoScore","targetPlayer","subtractRemainingLetters","playersSorted","slice","sort","scores","scoresString","sum","turnArray","nextTurn","tempSquares","getTempSquares","bonusScore","words","wordStrings","isConnected","adjSquares","getAdjSquares","word","getAdjWord","duplicateFound","iii","every","wordString","w","isOnCenterSquare","square","check","checkWords","illegalWords","illegalString","hasDoubles","curLetter","totalScore","wordMultiplier","letterScore","drawLetters","isEmpty","playerLetters","includes","isTurn","turnName","turnLogJson","isDeviceTurn","doBotTurn","sendPlayerLetters","adjSquare","curSquare","posEndFound","negEndFound","originFound","nextSquares","nextSquare","nextX","nextY","isLegal","offset","oldSquare","forcestart","drawLettersInit","playerNames","playerIndex","availableLetters","diff","newPlayers","newPlayer","sendPassAlongJoinSuccess","removeIndex","indices","langs","dictInfo","boards","langsJson","boardsJson","receiverVersion","alertTitle","Changelog","alert","innerWidth","innerHeight","line","_this5","react__WEBPACK_IMPORTED_MODULE_6___default","className","map","renderSquare","Square","isLobby","_this6","classname","winstring","max","maxindex","noScoreString","playersTitle","renderPlayer","isBorder","isActive","progress","language","progresstext","style","_this7","scale","min","transform","renderSquareLine","renderRightInfo","renderLeftInfo","src","wordcastlogo","renderProgressBar","Component","_React$Component","_this8","multiplierText","multiplierNum","isLetter","isTempLetter","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__","nextProps","oldSelect","multiplierclassname","letterStyle","marginLeft","margin","React","Boolean","location","hostname","match","ReactDOM","render","react_default","getElementById","serviceWorker","ready","registration","unregister","exports","fnv_1a","typedArrays","ArrayBuffer","m","k","n","ceil","kbytes","LN2","array","Uint8Array","Uint16Array","Uint32Array","kbuffer","buckets","Int32Array","_locations","popcnt","v","seed","charCodeAt","d","fnv_multiply","fnv_mix","prototype","locations","l","size","bits","bucketLen","target","writeUInt16BE","writeInt32BE","hashes","readUInt16BE","count","readInt32BE","bytesToString","arr","out","String","fromCharCode","stringToBytes","str","code","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d676f954.chunk.js","sourcesContent":["import React,  { Component, TimeUnit } from 'react';\nimport ReactDOM from \"react-dom\";\nimport wordcastlogo from './wordcastlogo_white.svg';\n//import arrowleft from './arrowleft.svg';\nimport './App.css';\nimport Distributions from \"./Distributions.json\";\nimport Boards from \"./Boards.json\";\nimport Changelog from \"./Changelog.json\";\n\n\nimport BloomFilter from \"./bloomfilter.js\";\n\nimport axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\n\nvar CHANNEL = 'urn:x-cast:com.github.minosvasilias.wordcast';\n\nvar VERSIONCUTOFF = 10;\nvar RECEIVERVERSION = 2;\n\n\n\n\nclass SquareData{\n  constructor(x, y, type) {\n    this.x = x;\n    this.y = y;\n    this.type = type; //0 = NORMAL, 1 = LETTER X2, 2 = LETTER X3, 3 = LETTER X4, 4 = WORD X2, 5 = WORD X3, 6 = WORD X4, 5 = START\n    this.selected = false;\n    this.letter = null;\n    this.tempLetter = null;\n    this.isSelected = false;\n  }\n}\nclass Player{\n  constructor(name, id, androidId) {\n    this.name = name;\n    this.id = id;\n    this.androidId = androidId;\n    this.score = 0;\n    this.letters = new Array();\n    this.turns = new Array();\n    this.clientIndex = 0;\n    this.isPassAlong = false;\n  }\n}\n\nclass Letter{\n  constructor(value, score) {\n    this.value = value;\n    this.score = score;\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      players: {},\n      gameState : 0,//0 = JOINING, 1 = RUNNING, 2 = FINISH\n      cursorLocation: [7,7],\n      curTurn: 0,\n      turnCount: 0,\n      noScoreCount: 0,\n      isFirstLetterDown: false,\n      langIndex: 0,\n      boardIndex: 0,\n      isDict: false,\n      isLoadingDict: false,\n      loadingProgress: 0.0,\n      /*isPassAlong: false,*/\n      isPro: false\n\n    };\n    this.originTempSquare = null;\n    this.originAxis = [-1,-1];\n\n    /*this.specialCoords = [\n      //LX2\n      [[0,3],[0,11],[2,6],[2,8],\n      [3,0],[3,7],[3,14],\n      [6,6],[6,8],[6,12],[6,2],\n      [7,3],[7,11],\n      [8,6],[8,8],[8,12],[8,2],\n      [11,0],[11,7],[11,14],\n      [14,3],[14,11],[12,6],[12,8]],\n      //LX3\n      [[1,5],[1,9],\n      [5,1],[5,5],[5,9],[5,13],\n      [9,1],[9,5],[9,9],[9,13],\n      [13,5],[13,9]],\n      //WX2\n      [[1,1],[2,2],[3,3],[4,4],\n      [10,10],[11,11],[12,12],[13,13],\n      [13,1],[12,2],[11,3],[10,4],\n      [4,10],[3,11],[2,12],[1,13]],\n      //WX3\n      [[0,0],[0,7],[0,14],\n      [7,0],[7,14],\n      [14,0],[14,7],[14,14]],\n      //START SQUARE\n      [[7,7]]\n    ];*/\n\n    this.curDict = [null, null];\n    this.turnLog = new Array();\n\n    /*this.specialCoords = Boards[1].dist;\n    this.setUpBoard();*/\n\n\n\n    //this.setUpBloom();\n\n\n\n\n\n\n    this.state.players = new Array();\n\n    this.handleMessage = this.handleMessage.bind(this);\n    this.moveCursor = this.moveCursor.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addPlayer = this.addPlayer.bind(this);\n    this.updateSenders = this.updateSenders.bind(this);\n\n  }\n  setUpBoard(){\n    this.gameGrid = new Array(15);\n    for(var i = 0; i < 15; i++){\n      this.gameGrid[i] = new Array(15);\n      for(var ii = 0; ii < 15; ii++){\n        this.gameGrid[i][ii] =  new SquareData(i,ii,0);\n      }\n    }\n\n    this.letterPool = new Array();\n\n    for(var i = 0; i < this.specialCoords.length; i++){\n      for(var ii = 0; ii < this.specialCoords[i].length; ii++){\n        this.gameGrid[this.specialCoords[i][ii][1]][this.specialCoords[i][ii][0]].type = i+1;\n      }\n    }\n  }\n  makeid(length) {\n   var result           = '';\n   var characters       = 'öäüabcdefghijklmnopqrstuvwxyz';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n }\n setUpBloom(){\n\n      //FIRST, SET INDEX OF DISTRIBUTION\n      var distIndex = 3;\n      var testtruestring = \"alfeñicare\";//SPANISH\"alfeñicaré\";\n      var testfalsestring = \"blobsy\";\n\n      this.state.langIndex = distIndex;\n      this.initializeLetterPool();\n      var path = Distributions[this.state.langIndex].dictPath;\n\n   ////////////////////////////\n       let dict;\n       fetch(path)\n       .then((r) => r.text())\n       .then(text  => {\n         //console.log(text);\n         var splitDictRaw = text.split(\"\\n\");\n         console.log(splitDictRaw);\n         var splitDict = new Array();\n\n         var bloom = new BloomFilter.BloomFilter(\n           5975973,//ITALIAN 14898389,//FRENCH 5072222,//ENGLISH 8868648 ,//GERMAN 32000000,//28755176,//25869786,//16284727,//8192 * 256,//32768 * 256,//32 * 256, // number of bits to allocate.\n           17//ITALIAN 16//FRENCH 17//ENGLISH 17//GERMAN11//10//9//6//16        // number of hash functions.\n         );\n         //var trie = new Trie();\n         //console.log(JsSuffixTrie);\n         //var trie = new JsSuffixTrie();\n\n         // Add some elements to the filter.\n         for(var i = 0; i < splitDictRaw.length; i++){\n           var item = splitDictRaw[i].toLowerCase();\n\n           //TRIM (CAREFUL, ONLY GERMAN AND ENGLISH SO FAR!)\n           //item = item.substring(0, item.length-1);\n\n           //REMOVE DIACRITICS ETC EXCEPT ñ\n           var nIndex = item.indexOf(\"ñ\"); //ç\n           item = item.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n           if(nIndex != -1){\n            item = item.substr(0, nIndex) + \"ñ\" + item.substr(nIndex + 1);\n          }\n\n\n           var doAdd = true;\n           /*for(var i = 0; i < item.length; i++){\n             var char = item.charAt(i);\n             if(!this.availableLetters.includes(char)){\n               doAdd = false;\n             }\n           }*/\n\n           if(doAdd){\n             splitDict.push(item);\n             //splitDict[i] = item;\n             bloom.add(item);\n           }\n           //trie.add(item);\n         }\n\n\n         console.log(\"DICT LENGTH: \" + splitDict.length);\n         console.log(splitDict);\n\n               // check contains method\n               //console.log(trie.contains(\"arbeit\"));  // true\n               //console.log(trie.contains(\"fhqap\")); // false\n\n\n               var util = require('util');\n               //var json = util.inspect(trie);\n\n         //var array = [].slice.call(trie.children),\n           //var  json = JSON.stringify(trie);\n         //console.log(json);\n\n         //TMP JSON SAVING\n         /*var json = trie.toJSON();\n         json = JSON.stringify(splitDict);\n         console.log(json);\n         var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         var falsecount = 0;\n         var truecount = 0;\n         for(var i = 0; i < splitDict.length; i++){\n           var item = splitDict[i];\n           var test = bloom.test(item);\n\n           var gib = this.makeid(6);\n           var test2 = bloom.test(gib);\n           if(!test){\n             falsecount += 1;\n             //console.log(gib);\n           }\n           if(test2){\n             truecount += 1;\n             //console.log(gib);\n           }\n         }\n         /*if(splitDict.includes('jäger')){\n           console.log(\"AAARBEIT\");\n         }*/\n         //console.log(splitDict[101069].toLowerCase());\n         console.log(\"FALSE NEGATIVES: \" + falsecount);\n         console.log(\"FALSE POSITIVES: \" + truecount);\n         var percentage1 = (falsecount / splitDict.length) * 100;\n         var percentage2 = (truecount / splitDict.length) * 100;\n         console.log(\"FALSE NEGATIVES PERCENT: \" + percentage1);\n         console.log(\"FALSE POSITIVES PERCENT: \" + percentage2);\n         // Test if an item is in our filter.\n         // Returns true if an item is probably in the set,\n         // or false if an item is definitely not in the set.\n\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         // Serialisation. Note that bloom.buckets may be a typed array,\n         // so we convert to a normal array first.\n         /*var array = [].slice.call(bloom.buckets),\n             json = JSON.stringify(array);\n         console.log(json);*/\n\n         //ALTERNATIVE SERIALIZATION\n         var blob = bloom.serialize();\n         //json = BloomFilter.BloomFilter.bytesToString(blob);\n         //console.log(enc.decode(blob));\n         console.log(blob);\n\n\n         /*var enc = new TextDecoder(\"utf-8\");\n         var encodedblob = enc.decode(blob);\n         var enc2 = new TextEncoder(\"utf-8\");\n         var blob2 = enc2.encode(encodedblob);\n         console.log(blob2);*/\n\n         let string = blob.toString('utf16le');\n         let buffer = Buffer.from(string, 'utf16le');\n         console.log(buffer);\n\n         // Function to download data to a file\n         var data = string;\n         var filename = \"test\";\n         var type = \".json\";\n         var file = new Blob([data], {type: type});\n         if (window.navigator.msSaveOrOpenBlob) // IE10+\n             window.navigator.msSaveOrOpenBlob(file, filename);\n         else { // Others\n             var a = document.createElement(\"a\"),\n                     url = URL.createObjectURL(file);\n             a.href = url;\n             a.download = filename;\n             document.body.appendChild(a);\n             a.click();\n             setTimeout(function() {\n                 document.body.removeChild(a);\n                 window.URL.revokeObjectURL(url);\n             }, 0);\n         }\n\n         //console.log(json);\n\n\n         var bloom = BloomFilter.BloomFilter.deserialize(blob);\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         fetch('/french.bloom')\n         .then((r) => r.text())\n         .then(text  => {\n           //var enc = new TextEncoder(\"utf-16\");\n           //var blob = enc.encode(json);\n           var blob = Buffer.from(text, 'utf16le');\n           //var blob = BloomFilter.BloomFilter.stringToBytes(text);\n             console.log(blob);\n           var bloom = BloomFilter.BloomFilter.deserialize(blob);\n           var testtrue = bloom.test(testtruestring);\n           var testfalse = bloom.test(testfalsestring);\n           console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         });\n         //TMP JSON SAVING\n         /*var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         // Deserialisation. Note that the any array-like object is supported, but\n         // this will be used directly, so you may wish to use a typed array for\n         // performance.\n         //var bloom = new BloomFilter(array, 16);*/\n       });\n }\n\n\n\n\n\n\n\n\n\n\n _handleKeyDown = (e) => {\n\n   switch(e.keyCode){\n     //CONSOLE KEY TO START\n     case 220:\n      this.state.gameState = 1;\n      this.state.langIndex = 0;\n      this.specialCoords = Boards[9].dist;\n      this.setUpBoard();\n      this.initializeLetterPool();\n      this.addPlayer(\"Ajax\", \"1\", \"1\", false, true, 99);\n      this.addPlayer(\"Theseus\", \"2\", \"2\", false, true, 99);\n      this.addPlayer(\"Asterius\", \"3\", \"3\", false, true, 99);\n      this.addPlayer(\"Paris\", \"4\", \"4\", false, true, 99);\n      this.addPlayer(\"Achilles\", \"5\", \"5\", false, true, 99);\n      this.addPlayer(\"Agamemnon\", \"6\", \"6\", false, true, 99);\n      break;\n\n     case 37:\n       this.moveCursor(\"LEFT\");\n       break;\n     case 38:\n       this.moveCursor(\"UP\");\n       break;\n     case 39:\n       this.moveCursor(\"RIGHT\");\n       break;\n     case 40:\n       this.moveCursor(\"DOWN\");\n       break;\n   }\n\n   //IF LETTER\n   console.log(e.key);\n   for(var i = 0; i < this.letterPool.length; i++){\n     var letter = this.letterPool[i];\n     if(letter.value.toLowerCase() == e.key){\n       var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n       curSquare.letter = letter;\n       this.letterPool.splice(i, 1);\n\n     }\n   }\n   this.setState({gameState: this.state.gameState});\n\n }\n\n\n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n\n\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n\n    //PREVENT TIMEOUT\n    window._setTimeout = window.setTimeout;\n    window.setTimeout = function(a, b) {\n        // disable setTimeout so chromecast won't kill us after 5 minutes...\n    };\n\n    //LOAD CAST LOGIC\n\n    this.ctx = window.cast.framework.CastReceiverContext.getInstance();\n    var options = new window.cast.framework.CastReceiverOptions();\n    options.maxInactivity = 3600; //Development only\n\n\n    options.customNamespaces = Object.assign({});\n    options.customNamespaces[CHANNEL] = window.cast.framework.system.MessageType.JSON;\n\n    var handleMessage = this.handleMessage;\n    this.ctx.addCustomMessageListener(CHANNEL, function(customEvent) {\n        handleMessage(customEvent.data, customEvent.senderId, customEvent.data.id);\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_CONNECTED,\n        event => {\n        //CONNECT\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_DISCONNECTED,\n        event => {\n        this.handleDisconnect(event.senderId);\n    });\n    this.ctx.start(options);\n\n    //this.updateSenders();\n\n\n  }\n\n  debugOnScreen(message){\n    //document.getElementById(\"content\").innerHTML = message;\n    console.log(message);\n  }\n\n  updateSenders(id){\n    this.connectedSenders = this.ctx.getSenders();\n    var debugstring = \"\";\n    for(var i = 0; i < this.connectedSenders.length; i++){\n      debugstring += this.connectedSenders[i].id + \", \";\n    }\n    this.debugOnScreen(\"MESSAGE RECEIVED FROM ID: \" + id + \" - CONNECTED IDS: \" + debugstring);\n  }\n\n  handleDisconnect(id){\n    for(var i = 0; i < this.state.players.length; i++){\n      var player = this.state.players[i];\n      if(player.id == id){\n        if(this.state.gameState == 0){\n\n          var players = this.findPlayers(player.androidId);\n          for(var ii = 0; ii < players.length; ii++){\n            var player = players[ii];\n            var index = this.state.players.indexOf(player);\n            this.state.players.splice(index, 1);\n          }\n          /*if(player.isPassAlongPlayer){\n            var players = this.findPlayers(player.androidId);\n            for(var ii = 0; ii < players.length; ii++){\n              var player = players[ii];\n              var index = this.state.players.indexOf(player);\n              this.state.players.splice(index, 1);\n            }\n          }\n          else{\n            this.state.players.splice(i, 1);\n          }*/\n          this.sendToast(player.name + \" disconnected\", undefined);\n          this.setState({players: this.state.players})\n\n\n          /*if(this.state.players.length == 1){\n            this.allowPassAlong(true);\n          }\n          else if(this.state.players.length == 0){\n            this.setState({isPassAlong: false});\n            this.allowPassAlong(true);\n          }*/\n        }\n      }\n    }\n  }\n\n  handleMessage(msg, id, androidId){\n    this.updateSenders(id);\n    if(msg.msg == \"STATE\"){\n        this.sendState(id, androidId);\n    }\n    if(msg.msg == \"HURRYUP\"){\n        this.sendHurryUp();\n    }\n    if(msg.msg == \"ENABLEPRO\"){\n        this.enablePro();\n    }\n    //LOBBY ONLY\n    if(this.state.gameState == 0){\n      if(msg.msg == \"JOIN\"){\n          this.addPlayer(msg.name, id, androidId, msg.isPro, msg.isPassAlongPlayer, msg.versionCode);\n      }\n      if(msg.msg == \"STARTGAME\"){\n          this.startGame(id, androidId, false);\n      }\n      if(msg.msg == \"STARTGAMEPASSALONG\"){\n          this.startGame(id, androidId, true);\n      }\n      if(msg.msg == \"LANGUAGE\"){\n          this.switchLanguage(msg.index);\n      }\n      if(msg.msg == \"BOARD\"){\n          this.switchBoard(msg.index);\n      }\n      if(msg.msg == \"DICT\"){\n          this.switchDict(msg.isDict, false);\n      }\n      if(msg.msg == \"DICTLOADCANCEL\"){\n          this.cancelDictDownload();\n      }\n      if(msg.msg == \"PASSALONG\"){\n          this.switchPassAlong(msg.isPassAlong, id, androidId);\n      }\n      if(msg.msg == \"REMOVEPLAYER\"){\n          this.removePlayer(msg.index, id, androidId);\n      }\n    }\n    if(msg.msg == \"CANCEL\"){\n        this.cancelGame(androidId);\n    }\n    //CURRENT PLAYER ONLY\n    if(this.state.players.length == 0 || this.state.gameState != 1)\n      return;\n    if(id != this.state.players[this.state.curTurn].id)\n      return;\n    if(msg.msg == \"MOVE\"){\n        this.moveCursor(msg.dir);\n    }\n    if(msg.msg == \"PLACE\"){\n      this.placeLetter(msg.index, msg.jokerValue, id);\n    }\n    if(msg.msg == \"ENDTURN\"){\n        this.endTurn(id);\n    }\n    if(msg.msg == \"SWAP\"){\n        this.swapLetters(msg.swapIndices, id);\n    }\n    if(msg.msg == \"RESET\"){\n        this.resetTempLetters();\n    }\n  }\n\n  findPlayer(androidId){\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n      }\n    }\n    return player;\n  }\n\n  findPlayers(androidId){\n    var players = new Array();\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        var player = this.state.players[i];\n        players.push(player);\n      }\n    }\n    return players;\n  }\n\n  sendState(id, androidId){\n    var json;\n\n    if(this.state.isPro){\n      this.enablePro();\n    }\n\n    var players = this.findPlayers(androidId);\n    if(players.length > 0){\n      if(players[0].isPassAlong){\n        var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":true};\n        this.ctx.sendCustomMessage(CHANNEL , id,  json);\n      }\n    }\n\n    if(this.state.gameState == 0){\n      if(players.length > 0){\n        players[0].id = id;\n        this.sendJoinSuccess(players[0]);\n        return;\n      }else{\n        json = {\"msg\":\"NAME\"};\n        this.ctx.sendCustomMessage(CHANNEL , id,  json);\n        return;\n      }\n    }\n    else if(this.state.gameState == 1){\n\n      if(players.length > 0){\n        //LET PLAYER REJOIN AND SEND INFO\n        for(var i = 0; i < players.length; i++){\n          players[i].id = id;\n\n          //RESET LETTERS IF ITS REJOINING PLAYERS TURN IN ORDER TO AVOID UI MESS\n          if(players[i].androidId == this.state.players[this.state.curTurn].androidId){\n            this.resetTempLetters();\n          }else{\n            //this.sendPlayerLetters(player);\n          }\n          this.sendGameStarted(players[i]);\n        }\n\n        return;\n      }\n    }\n    else if(this.state.gameState == 2){\n      if(players.length > 0){\n        for(var i = 0; i < players.length; i++){\n          //LET PLAYER REJOIN AND SEND INFO\n          players[i].id = id;\n          this.endGame(players[i]);\n          return;\n        }\n      }\n    }\n    json = {\"msg\":\"GAMEONGOING\"};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n\n\n  }\n\n  sendToast(content, id){\n    var json = {\"msg\":\"TOAST\",\"content\":content};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n  }\n\n  cancelGame(androidId){\n    var player = this.findPlayer(androidId);\n    if(this.state.gameState == 1){\n      this.sendToast(player.name + \" has cancelled the game!\", undefined);\n    }\n\n    this.setState({gameState: 0, cursorLocation: [7,7], curTurn: 0,\n                  turnCount: 0, noScoreCount: 0, isFirstLetterDown: false});\n    this.setUpBoard();\n\n    for(var i = 0; i < this.state.players.length; i++){\n      this.state.players[i].score = 0;\n      this.state.players[i].letters = new Array();\n      this.state.players[i].turns = new Array();\n      this.turnLog = new Array();\n      this.sendState(this.state.players[i].id, this.state.players[i].androidId);\n    }\n  }\n\n  cancelDictDownload(){\n    if(this.cancel != null){\n      this.cancel();\n      delete this.curDict;\n    }\n  }\n\n  switchDict(isDict, autoStart){\n    if(this.state.gameState != 0){\n      return;\n    }\n    this.setState({isDict: isDict});\n    var json = {\"msg\":\"DICT\",\"isDict\":isDict};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n\n\n    if(isDict){\n      var langIndex = this.state.langIndex;\n      if(this.curDict == undefined || this.curDict[0] != Distributions[langIndex].name){\n        delete this.curDict;\n\n\n        var dist = Distributions[langIndex];\n        if(dist.dictStatus != 1 || this.state.isLoadingDict)\n          return;\n\n        var json = {\"msg\":\"DICTLOADSTART\"};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        this.setState({isLoadingDict: true});\n        var total = dist.dictSize;\n        let cancel;\n        axios.get(dist.dictPath, {\n          cancelToken: new CancelToken(function executor(c) {\n            cancel = c;\n          }),\n          onDownloadProgress: (progressEvent) => {\n            //this.state.players[0].name = progressEvent.loaded;\n            var percent = progressEvent.loaded / total;\n            this.setState({loadingProgress: percent});\n          }\n        })\n        .then((response) => {\n          //PARSE TXT INTO ARRAY\n          //OLD NON BLOOM WAY\n          /*var splitDict = response.data.split(\"\\n\");\n          for(var i = 0; i < splitDict.length; i++){\n            var item = splitDict[i].toLowerCase();\n            var item = item.substring(0, item.length-1);\n            splitDict[i] = item;\n          }*/\n          //BLOOM\n          var blob = Buffer.from(response.data, 'utf16le');\n          var bloom = BloomFilter.BloomFilter.deserialize(blob);\n\n          this.sendToast(\"LOADED DICTIONARY\", undefined);\n          this.curDict = [Distributions[langIndex].name, bloom];\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          if(autoStart){\n            this.startGame(this.state.players[0].id, this.state.players[0].androidId, true);\n          }\n          else{\n            var json = {\"msg\":\"DICTLOADEND\"};\n            this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n          }\n        })\n        .catch((err) => {\n          this.sendToast(\"LOAD FAILED\", undefined);\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n          this.setState({isDict: false});\n          var json = {\"msg\":\"DICT\",\"isDict\":false};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        this.cancel = cancel;\n      }\n\n    }\n\n  }\n\n  switchLanguage(index){\n    if(index != this.state.langIndex){\n      this.setState({langIndex: index});\n      var json = {\"msg\":\"LANGUAGE\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n      this.setState({isDict: false});\n      var json = {\"msg\":\"DICT\",\"isDict\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  switchBoard(index){\n    if(index != this.state.boardIndex){\n      this.setState({boardIndex: index});\n      var json = {\"msg\":\"BOARD\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  switchPassAlong(isPassAlong, id, androidId){\n\n    var player = null;\n    var playersToRemove = new Array();\n    var indicesToRemove = new Array();\n    var passAlongIndex = 0;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n        player.isPassAlong = isPassAlong;\n        if(!isPassAlong && passAlongIndex > 0){\n          playersToRemove.push(player);\n          indicesToRemove.push(passAlongIndex);\n        }\n        passAlongIndex++;\n      }\n    }\n    for(var i = 0; i < playersToRemove.length; i++){\n      var index = this.state.players.indexOf(playersToRemove[i]);\n      this.state.players.splice(index,1);\n    }\n    this.setState({players: this.state.players});\n\n    /*if(indicesToRemove.length > 0){\n      var indicesJson =  JSON.stringify(indicesJson);\n      var json = {\"msg\":\"REMOVEPLAYER\",\"indices\":indicesToRemove};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n    }*/\n\n\n\n    /*if(this.state.players.length == 1){\n        this.setState({isPassAlong: isPassAlong});\n        var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":isPassAlong};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }else{\n      var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n      this.allowPassAlong(false);\n    }*/\n  }\n\n  allowPassAlong(allow){\n    var json = {\"msg\":\"ALLOWPASSALONG\",\"allow\":allow};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n  }\n\n  sendHurryUp(){\n    var json = {\"msg\":\"HURRYUP\"};\n    var player = this.state.players[this.state.curTurn];\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  swapLetters(swapIndices, id){\n    if(this.letterPool.length < 7){\n      this.sendToast(\"You can't swap with less than 7 letters left in the pool!\", id);\n      return;\n    }\n    if(swapIndices.length == 0){\n      this.sendToast(\"You must select at least one letter to swap!\", id);\n      return;\n    }\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    var swapLetters = new Array();\n    for(var i = 0; i < swapIndices.length; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      var prevLetter = player.letters[swapIndices[i]];\n      swapLetters.push(prevLetter);\n\n      player.letters[swapIndices[i]] = letter;\n      this.letterPool.splice(rand, 1);\n    }\n    //ONLY ADD OLD LETTER TO POOL AFTER ALL NEW ONES ARE DRAWN\n    for(var i = 0; i < swapLetters.length; i++){\n      this.letterPool.push(swapLetters[i]);\n    }\n\n    this.setState({players: this.state.players});\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n    this.endTurnNoScore(id);\n  }\n\n  endGame(targetPlayer){\n\n    //CAREFUL NOT TO REPEAT SUBTRACTIONS ON REQUESTSTATE\n    if(this.state.gameState != 2){\n      //RESET CURSOR\n      var oldSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n      oldSquare.isSelected = false;\n      this.setState({cursorLocation:[7,7]});\n\n      //SUBTRACT REMAINING LETTERS\n      for(var i = 0; i < this.state.players.length; i++){\n        this.subtractRemainingLetters(this.state.players[i]);\n      }\n\n    }\n    this.setState({gameState: 2});\n\n    //SORT BY SCORE\n    var playersSorted = this.state.players.slice();\n    playersSorted.sort(function(a, b){\n        return a.score - b.score;\n    });\n    var scores = new Array();\n    for(var i = 0; i < playersSorted.length; i++){\n      scores.push({\"name\": playersSorted[i].name, \"score\":playersSorted[i].score});\n      playersSorted[i].clientIndex = i;\n    }\n    for(var i = 0; i < playersSorted.length; i++){\n      var player = playersSorted[i];\n      if(targetPlayer != null && player.androidId == targetPlayer.androidId ||\n        targetPlayer == null){\n          var scoresString = JSON.stringify(scores);\n          var json = {\"msg\":\"GAMEENDED\", \"clientIndex\":player.clientIndex, \"scores\":scoresString};\n          this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n      }\n\n    }\n  }\n\n  subtractRemainingLetters(player){\n    var sum = 0;\n    for(var i = 0; i < player.letters.length; i++){\n      if(player.letters[i] != null){\n        sum += player.letters[i].score;\n      }\n    }\n    player.score = player.score - sum;\n    if(player.score < 0){\n      player.score = 0;\n    }\n  }\n\n  endTurnNoScore(id){\n    var noScoreCount = this.state.noScoreCount + 1;\n    this.state.players[this.state.curTurn].turns.push([]);\n    this.turnLog.push({\"name\":this.state.players[this.state.curTurn].name, \"turnArray\": []});\n    this.setState({noScoreCount: noScoreCount});\n\n    if(noScoreCount < 6){\n      this.nextTurn();\n    }else{\n      this.endGame(null);\n    }\n  }\n\n  endTurn(id){\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n        this.endTurnNoScore(id);\n        return;\n\n    }\n    var bonusScore = 0;\n    if(tempSquares.length == 7){\n      bonusScore = 50;\n    }\n    //FIND WORDS TO SCORE\n    var words = new Array();\n    var wordStrings = new Array();\n    var mainWord = null;\n    var isConnected = false;\n    for(var i = 0; i < tempSquares.length; i++){\n      var adjSquares = this.getAdjSquares(tempSquares[i]);\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(adjSquares[ii].letter != null)\n            isConnected = true;\n          //TRACE TEMPLETTER WORD\n          var word = this.getAdjWord(adjSquares[ii],tempSquares[i]).word;\n\n          word.sort(function(a, b){\n            if(a.x != b.x){\n              return a.x - b.x;\n            }\n            else{\n              return a.y - b.y;\n            }\n          });\n\n          //CHECK FOR DUPLICATE\n          var duplicateFound = false;\n          for(var iii = 0; iii < words.length; iii++){\n            if(word.length === words[iii].length && word.every(function(value, index) { return value === words[iii][index]})){\n              duplicateFound = true;\n            }\n          }\n          if(!duplicateFound){\n            words.push(word);\n            //FORM WORD STRING\n            var wordString = \"\";\n            for(var w = 0; w < word.length; w++){\n              if(word[w].letter != null)\n                wordString += word[w].letter.value;\n              if(word[w].tempLetter != null)\n                wordString += word[w].tempLetter.value;\n            }\n            wordStrings.push(wordString);\n          }\n          //mainWord = word;\n\n        }\n      }\n    }\n    if(!isConnected && this.state.isFirstLetterDown){\n      this.resetTempLetters();\n      this.sendToast(\"Word must connect to already existing one!\", id);\n      return;\n    }\n\n    //FIRST TURN MAY JUST BE ONE LETTER\n\n    if(tempSquares.length == 1 && !this.state.isFirstLetterDown){\n      var word = new Array();\n      word.push(tempSquares[0]);\n      words.push(word);\n    }\n    if(!this.state.isFirstLetterDown && words.length > 0){\n      var word = words[0];\n      var isOnCenterSquare = false;\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.x == 7 && square.y == 7){\n          isOnCenterSquare = true;\n        }\n      }\n      if(!isOnCenterSquare){\n        this.resetTempLetters();\n        this.sendToast(\"The first word must use the center square!\", id);\n        return;\n      }\n    }\n\n    //CHECK DICT IF ENABLED\n    if(this.state.isDict){\n      var check = this.checkWords(wordStrings);\n      var illegalWords = check.illegalWords;\n      if(illegalWords.length > 0){\n        this.resetTempLetters();\n        this.sendToast(check.illegalString, id);\n        return;\n      }\n    }\n\n\n  //SPECIAL RULES FOR SPANISH\n  if(Distributions[this.state.langIndex].hasDoubles){\n      for(var w = 0; w < words.length; w++){\n        var word = words[w];\n        var prevLetter = \"\";\n        for(var i = 0; i < word.length; i++){\n          var square = word[i];\n          var curLetter = \"\";\n          if(square.tempLetter != null){\n            curLetter = square.tempLetter.value;\n          }else{\n            curLetter = square.letter.value;\n          }\n          if(i != 0){\n            if(Distributions[this.state.langIndex].name == \"Español\"){\n              if(prevLetter == \"C\" && curLetter == \"H\" ||\n                 prevLetter == \"L\" && curLetter == \"L\" ||\n                 prevLetter == \"R\" && curLetter == \"R\"){\n                   this.resetTempLetters();\n                   this.sendToast(\"You must use the \" + prevLetter + curLetter + \" letter instead of \" + prevLetter + \" and \" + curLetter + \" separately!\", id);\n                   return;\n              }\n            }\n            if(Distributions[this.state.langIndex].name == \"Hrvatski\"){\n              if(prevLetter == \"L\" && curLetter == \"J\" ||\n                 prevLetter == \"N\" && curLetter == \"J\" ||\n                 prevLetter == \"D\" && curLetter == \"Ž\"){\n                   this.resetTempLetters();\n                   this.sendToast(\"You must use the \" + prevLetter + curLetter + \" letter instead of \" + prevLetter + \" and \" + curLetter + \" separately!\", id);\n                   return;\n              }\n            }\n          }\n          prevLetter = curLetter;\n        }\n      }\n    }\n\n    //////////////////////////////////\n\n\n    //SCORE WORDS\n    var totalScore = 0;\n    var turnLog = new Array();\n    var debugstring = \"\";\n    for(var w = 0; w < words.length; w++){\n      debugstring += \" --- WORD: \";\n      var word = words[w];\n      var score = 0;\n      var wordMultiplier = 1;\n      var wordString = \"\";\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.tempLetter != null){\n          square.letter = square.tempLetter;\n          square.tempLetter = null;\n        }\n        var letterScore = 0;\n        if(square.type == 1){\n          letterScore = square.letter.score * 2;\n        }\n        else if(square.type == 2){\n          letterScore = square.letter.score * 3;\n        }\n        else if(square.type == 3){\n          letterScore = square.letter.score * 4;\n        }\n        else{\n          letterScore = square.letter.score;\n        }\n        score += letterScore;\n\n\n\n\n\n\n        debugstring += square.letter.value + \"(\"+letterScore+\")-\";\n        wordString += square.letter.value;\n        if(square.letter.value == \"\"){\n          wordString += \"_\";\n        }\n        //ACCOUNT FOR PROBABLY IMPOSSIBLE SCENARIO OF BOTH WORD MULTIPLIERS USED\n        if(square.type == 4 || square.type == 7){\n          wordMultiplier = wordMultiplier * 2;\n        }\n        if(square.type == 5){\n          wordMultiplier = wordMultiplier * 3;\n        }\n        if(square.type == 6){\n          wordMultiplier = wordMultiplier * 4;\n        }\n      }\n      score = score * wordMultiplier;\n      totalScore += score;\n      wordStrings.push(wordString);\n      turnLog.push([wordString,score]);\n      debugstring += \" SCORE: \" + score;\n    }\n\n\n    if(bonusScore != 0){\n      turnLog.splice(0,0,[\"Bonus\",50]);\n    }\n\n    //APPLY SCORE\n    totalScore += bonusScore;\n    debugstring += \" --- BONUS: + \" + bonusScore + \" --- TOTAL: \" + totalScore;\n\n\n    //END NO SCORE STREAK\n    this.setState({noScoreCount: 0});\n    //IF VERY FIRST TURN IS A PASS, THIS MAKES SURE WE KNOW WHEN THE GAME REALLY STARTED\n    this.state.isFirstLetterDown = true;\n    this.state.players[this.state.curTurn].score += totalScore;\n\n    //CHANGE TYPE OF USED SQUARES TO ZERO: SPECIAL TYPES CAN ONLY BE USED ON THE TURN THEY ARE COVERED\n    for(var w = 0; w < words.length; w++){\n      var word = words[w];\n      for(var i = 0; i < word.length; i++){\n        word[i].type = 0;\n      }\n    }\n\n    //ADD TURN TO PLAYER HISTORY\n    this.state.players[this.state.curTurn].turns.push(turnLog);\n    this.turnLog.push({\"name\":this.state.players[this.state.curTurn].name, \"turnArray\": turnLog});\n\n\n    // DEBUG\n    var dstring = \"\";\n    this.debugOnScreen(\"WORD SCORED: \" + debugstring);\n\n    this.drawLetters(this.state.players[this.state.curTurn]);\n\n    //CHECK FOR GAME END\n    var isEmpty = true;\n    var playerLetters = this.state.players[this.state.curTurn].letters;\n    for(var i = 0; i < playerLetters.length; i++){\n      if(playerLetters[i] != null){\n        isEmpty = false;\n      }\n    }\n    if(isEmpty)\n      this.endGame(null);\n\n    //SWITCH TURNS\n    this.nextTurn();\n  }\n\n  checkWords(words){\n    var bloom = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = bloom.test(words[i].toLowerCase());\n      if(!isWord){\n        if(illegalWords.length > 0){\n          illegalString += \", \";\n        }\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n\n      }\n    }\n    if(illegalWords.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  checkWordsOLD(words){\n    var splitDict = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = splitDict.includes(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n      }\n      if(i != words.length-1){\n        illegalString += \", \";\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  doBotTurn(){\n    setTimeout(function(){\n      this.endTurn(\"BOT\");\n    }, 2000);\n  }\n\n\n  nextTurn(){\n    var nextTurn = this.state.curTurn + 1;\n    var oldTurn = this.state.curTurn;\n    if(nextTurn >= this.state.players.length){\n      nextTurn = 0;\n    }\n    this.setState({turnCount: this.state.turnCount+1})\n    this.setState({curTurn:nextTurn});\n    for(var i = 0; i<this.state.players.length; i++){\n      var isTurn = nextTurn == i;\n      var turnName = this.state.players[nextTurn].name;\n\n      //var turnLogJson = JSON.stringify(this.state.players[i].turns);\n      var turnLogJson = JSON.stringify(this.turnLog);\n      if(!this.state.players[i].isPassAlong || isTurn || !this.isDeviceTurn(this.state.players[i].androidId)){\n\n        if(this.state.players[i].id == \"BOT\"){\n            this.doBotTurn();\n            return;\n        }\n\n        var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":turnLogJson};\n        this.ctx.sendCustomMessage(CHANNEL , this.state.players[i].id,  json);\n        this.sendPlayerLetters(this.state.players[i]);\n      }\n    }\n  }\n\n  getTempSquares(){\n    var tempSquares = new Array();\n    for(var i = 0; i < this.gameGrid.length; i++){\n      for(var ii = 0; ii < this.gameGrid[i].length; ii++){\n        var square = this.gameGrid[i][ii];\n        if(square.tempLetter != null){\n          tempSquares.push(square);\n        }\n      }\n    }\n    return tempSquares;\n  }\n\n  getAdjSquares(square){\n    var x = square.x;\n    var y = square.y;\n    var adjSquares = new Array();\n    if(x+1<15)\n      adjSquares.push(this.gameGrid[x+1][y]);\n    if(x-1>-1)\n      adjSquares.push(this.gameGrid[x-1][y]);\n    if(y+1<15)\n      adjSquares.push(this.gameGrid[x][y+1]);\n    if(y-1>-1)\n      adjSquares.push(this.gameGrid[x][y-1]);\n    return adjSquares;\n  }\n\n  getAdjWord(adjSquare, curSquare){\n    var dir = [adjSquare.x - curSquare.x, adjSquare.y - curSquare.y];\n    var posEndFound = false;\n    var negEndFound = false;\n    var originFound = false;\n    var word = new Array();\n    word.push(curSquare);\n    //START WITH CURRENT SQUARE FOR BOTH DIRECTIONS\n    var nextSquares = [curSquare,curSquare];\n    while(!posEndFound || !negEndFound){\n      //POSITIVE DIR\n      var nextX = nextSquares[0].x+dir[0];\n      var nextY = nextSquares[0].y+dir[1];\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[0] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          posEndFound = true;\n        }\n      }\n      else{\n        posEndFound = true;\n      }\n      //NEGATIVE DIR\n      nextX = nextSquares[1].x+(dir[0]*-1);\n      nextY = nextSquares[1].y+(dir[1]*-1);\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[1] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          negEndFound = true;\n        }\n      }\n      else{\n        negEndFound = true;\n      }\n    }\n    return {word : word, originFound : originFound}\n  }\n\n  placeLetter(index, jokerValue, id){\n    var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var curLetter = this.state.players[this.state.curTurn].letters[index];\n    var isLegal = true;\n    if(curSquare.letter != null || curSquare.tempLetter != null || curLetter == null){\n      isLegal = false;\n      this.sendToast(\"This square is already in use!\", id);\n    }\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n      this.originTempSquare = curSquare;\n      this.debugOnScreen(\"ORIGINTEMPSQUARE: \" + this.originTempSquare.x + \",\"+this.originTempSquare.y);\n\n    }\n    else if(tempSquares.length > 0){\n      var adjSquares = this.getAdjSquares(curSquare);\n      var originFound = false;\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(this.getAdjWord(adjSquares[ii], curSquare).originFound)\n            originFound = true;\n\n        }\n      }\n      if(!originFound){\n        isLegal = false;\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            this.sendToast(\"You may only place letters in one straight line!\", id);\n          }else{\n            this.sendToast(\"All placed letters must be connected!\", id);\n          }\n        }else{\n          this.sendToast(\"All placed letters must be connected!\", id);\n        }\n      }\n      else{\n\n        if(tempSquares.length == 1){\n          if(this.originTempSquare.x == curSquare.x){\n            this.originAxis = [curSquare.x,-1];\n          }else{\n            this.originAxis = [-1,curSquare.y];\n          }\n        }\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            isLegal = false;\n            this.sendToast(\"You may only place letters in one straight line!\", id);\n          }\n        }\n        this.debugOnScreen(\"ORIGIN FOUND! AXIS: \" + this.originAxis[0] +\",\" +this.originAxis[1]);\n\n      }\n    }\n\n\n    if(isLegal){\n      if(curLetter.value == \"\"){\n        curLetter.value = jokerValue;\n      }\n      curSquare.tempLetter = curLetter;\n      this.state.players[this.state.curTurn].letters[index] = null;\n      this.setState({players: this.state.players});\n      var json = {\"msg\":\"PLACED\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n    }\n  }\n\n  resetTempLetters(){\n    var tempSquares = this.getTempSquares(false);\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    for(var i = 0; i < tempSquares.length; i++){\n      while(player.letters[i+offset] != null){\n        offset += 1;\n      }\n      if(tempSquares[i].tempLetter.score == 0){\n        tempSquares[i].tempLetter.value = \"\";\n      }\n      player.letters[i+offset] = tempSquares[i].tempLetter;\n      tempSquares[i].tempLetter = null;\n    }\n    this.setState({players: this.state.players});\n    this.sendPlayerLetters(player);\n  }\n\n  moveCursor(dir){\n    var oldSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var x = this.state.cursorLocation[0];\n    var y = this.state.cursorLocation[1];\n    this.debugOnScreen(\"MOVING CURSOR \" + dir);\n    switch(dir){\n      case \"UP\":\n        y -= 1;\n        break;\n      case \"DOWN\":\n        y += 1;\n        break;\n      case \"LEFT\":\n        x -= 1;\n        break;\n      case \"RIGHT\":\n        x += 1;\n        break;\n      default:\n        break;\n    }\n    if(x > -1 && x < 15 && y > -1 && y < 15){\n      var curSquare = this.gameGrid[x][y];\n      oldSquare.isSelected = false;\n      curSquare.isSelected = true;\n      this.setState({cursorLocation:[x,y]});\n      //this.debugOnScreen(\"MOVED CURSOR TO \"+ this.state.cursorLocation[0] + \",\" + this.state.cursorLocation[1]);\n    }\n\n  }\n\n  startGame(id, androidId, forcestart){\n    var players = this.findPlayers(androidId);\n    if(players[0].isPassAlong && !forcestart){\n      var playerNames = new Array();\n      for(var i = 0; i < players.length; i++){\n        playerNames.push (players[i].name);\n      }\n      var playerNamesJson = JSON.stringify(playerNames);\n\n      var json = {\"msg\":\"CHOOSEPLAYERS\", \"playerNames\":playerNamesJson};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n      return;\n    }\n    //SOLO PLAY\n    if(this.state.players.length == 1){\n      if(Distributions[this.state.langIndex].dictStatus == 1){\n        if(this.state.isDict){\n          this.addPlayer(\"Bot\", \"BOT\", \"BOT\", false, false, 99999);\n        }\n        else{\n          this.switchDict(true, true);\n          return;\n        }\n      }\n    }\n    /*if(this.state.isPassAlong && this.state.players.length < 2){\n      var json = {\"msg\":\"CHOOSEPLAYERS\", \"name\":player.name};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n      return;\n    }*/\n    this.debugOnScreen(\"GAME STARTED\");\n\n    this.specialCoords = Boards[this.state.boardIndex].dist;\n    this.setUpBoard();\n\n    this.initializeLetterPool();\n    this.gameGrid[7][7].isSelected = true;\n    this.setState({cursorLocation:[7,7]});\n\n    for(var i = 0; i<this.state.players.length; i++){\n      var player = this.state.players[i];\n      this.drawLettersInit(player);\n      this.sendGameStarted(player);\n    }\n    this.setState({gameState:1});\n  }\n\n  sendGameStarted(player){\n    var playerIndex = -1;\n    playerIndex = this.state.players.indexOf(player);\n    /*for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == player.androidId){\n        playerIndex = i;\n      }\n    }*/\n    var isTurn = this.state.curTurn == playerIndex;\n    var turnName = this.state.players[this.state.curTurn].name;\n    //var turnLogJson = JSON.stringify(this.state.players[playerIndex].turns);\n    var turnLogJson = JSON.stringify(this.turnLog);\n\n    if(!player.isPassAlong || isTurn || !this.isDeviceTurn(player.androidId)){\n      this.sendPlayerLetters(player);\n      var json = {\"msg\":\"GAMESTARTED\", \"isTurn\":isTurn, \"turnName\":turnName, \"letters\":this.availableLetters, \"turnLog\":turnLogJson};\n      this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n    }\n  }\n\n  isDeviceTurn(androidId){\n    var players = this.findPlayers(androidId);\n    var isDeviceTurn = false;\n    for(var i = 0; i < players.length; i++){\n      var isTurn = this.state.curTurn == this.state.players.indexOf(players[i]);\n      if(isTurn){\n        isDeviceTurn = true;\n      }\n    }\n    return isDeviceTurn;\n  }\n\n  initializeLetterPool(){\n    var letters = Distributions[this.state.langIndex].dist;\n    this.letterPool = new Array();\n    this.availableLetters = new Array();\n    for(var i = 0; i < letters.length; i++){\n      if(letters[i].length > 0){\n        for(var ii = 0; ii < letters[i].length; ii++){\n          if(!this.availableLetters.includes(letters[i][ii][0]) && letters[i][ii][0] != \"\"){\n            this.availableLetters.push(letters[i][ii][0]);\n          }\n          for(var iii = 0; iii < letters[i][ii][1]; iii++){\n            var letter = new Letter(letters[i][ii][0],i);\n            this.letterPool.push(letter);\n          }\n        }\n      }\n    }\n    this.availableLetters.sort();\n    console.log(this.availableLetters);\n  }\n\n  sendPlayerLetters(player){\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n  drawLettersInit(player){\n    var diff = 7 - player.letters.length;\n    for(var i = 0; i < diff; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      this.letterPool.splice(rand, 1);\n      player.letters.push(letter);\n    }\n    //this.sendPlayerLetters(player);\n  }\n  drawLetters(player){\n    for(var i = 0; i < 7; i++){\n      if(player.letters[i] == null){\n        if(this.letterPool.length != 0){\n          var rand = Math.floor(Math.random()*this.letterPool.length);\n          var letter = this.letterPool[rand];\n          player.letters[i] = letter;\n          this.letterPool.splice(rand, 1);\n        }\n      }\n    }\n    //this.sendPlayerLetters(player);\n  }\n\n  addPlayer(name, id, androidId, isPro, isPassAlongPlayer, versionCode){\n    if(versionCode < VERSIONCUTOFF){\n      this.sendToast(\"Your app is out of date. Please update Wordcast in the Play Store.\", id);\n      return;\n    }\n\n    if(!isPassAlongPlayer){\n      /*if(this.state.isPassAlong){\n        this.sendToast(\"You may not join a game that is in Pass-Along mode!\", id)\n        return;\n      }*/\n      var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":false};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n      for(var i = 0; i < this.state.players.length; i++){\n        if(this.state.players[i].androidId == androidId){\n          return;\n        }\n      }\n    }\n\n    if(this.state.players.length > 4){\n      this.sendToast(\"Sorry, the maximum amount of players is \" + this.state.players.length, id);\n      return;\n    }\n\n    var newPlayers = this.state.players.slice();\n    var newPlayer = new Player(name, id, androidId);\n    newPlayer.isPassAlong = isPassAlongPlayer;\n    newPlayers.push(newPlayer);\n    this.setState({players:newPlayers})\n    this.debugOnScreen(\"NEW PLAYER: \" + name + \", ID: \" + id);\n\n    if(isPro){\n      this.enablePro();\n    }\n\n    if(!isPassAlongPlayer){\n      this.sendJoinSuccess(newPlayer);\n    }\n    else{\n      this.sendPassAlongJoinSuccess(newPlayer);\n    }\n  }\n\n  removePlayer(index, id, androidId){\n    var players = this.findPlayers(androidId);\n    if(players.length < index + 1){\n      return;\n    }\n    var player = players[index];\n    var removeIndex = this.state.players.indexOf(player);\n\n    this.state.players.splice(removeIndex, 1);\n    this.setState({players: this.state.players})\n\n    var indices = new Array();\n    indices.push(index);\n    var indicesJson = JSON.stringify(indices);\n    var json = {\"msg\":\"REMOVEPLAYER\", \"indices\": indicesJson};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n  }\n\n  enablePro(){\n    this.setState({isPro:true});\n    var json = {\"msg\":\"ISPRO\"};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n  }\n\n\n  sendJoinSuccess(player){\n    //GET AVAILABLE LANGUAGES\n    var langs = new Array();\n    for(var i = 0; i < Distributions.length; i++){\n      langs.push({name:Distributions[i].name, dictStatus:Distributions[i].dictStatus, dictInfo:Distributions[i].dictInfo});\n    }\n    var boards = new Array();\n    for(var i = 0; i < Boards.length; i++){\n      boards.push(Boards[i].name);\n    }\n    var langsJson = JSON.stringify(langs);\n    var boardsJson = JSON.stringify(boards);\n    var json = {\"msg\":\"JOINSUCCESS\", \"langs\":langsJson, \"langIndex\":this.state.langIndex, \"boards\": boardsJson, \"boardIndex\": this.state.boardIndex, \"isDict\":this.state.isDict, \"isLoadingDict\":this.state.isLoadingDict, \"isPro\":this.state.isPro};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n\n\n    //UPDATEALERT\n    var json = {\"msg\":\"UPDATEALERT\", \"receiverVersion\":RECEIVERVERSION, \"alertTitle\":Changelog[RECEIVERVERSION].alertTitle,  \"alert\": Changelog[RECEIVERVERSION].alert};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n\n\n  }\n\n  sendPassAlongJoinSuccess(player){\n    var json = {\"msg\":\"ADDPLAYER\", \"name\":player.name};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n\n  updateDimensions(){\n     this.setState({width: window.innerWidth, height: window.innerHeight});\n  }\n\n  renderSquareLine(line,i){\n    return(\n      <div className=\"line\">\n        {line.map((square, i) => this.renderSquare(square, i))}\n      </div>\n    )\n  }\n  renderSquare(square, i){\n    var isSelected = false;\n    isSelected = square.isSelected;\n    /*if(square.x == cursorLocation[0] && square.y == cursorLocation[1]){\n      isSelected = true;\n    }*/\n    return(\n      <Square square={square} i={i} isSelected={isSelected}></Square>\n    )\n  }\n\n  renderLeftInfo(){\n    return(\n      <div className=\"leftinfo\">\n        <div className=\"title\">\n          {\"Letters Remaining\"}\n        </div>\n        <div className=\"poolcount\">\n          {this.letterPool.length}\n        </div>\n      </div>\n    );\n  }\n  renderRightInfo(isLobby){\n    var classname = \"rightinfo\";\n    if(isLobby)\n      classname = \"lobbyinfo\";\n\n    var winstring = \"\";\n    if(this.state.gameState == 2){\n      var max = 0;\n      var maxindex = new Array();\n      for(var i = 0; i < this.state.players.length; i++){\n        var player = this.state.players[i];\n        if(player.score > max){\n          max = player.score;\n          maxindex = new Array();\n          maxindex.push(i);\n        }\n        else if(player.score == max){\n          maxindex.push(i);\n        }\n      }\n\n      if(maxindex.length == 1){\n        winstring = this.state.players[maxindex[0]].name + \" wins!\";\n      }\n      else{\n        winstring = \"Draw between \";\n        for(var i = 0; i < maxindex.length; i++){\n          winstring += this.state.players[maxindex[i]].name;\n          if(i == maxindex.length -1){\n            winstring += \"!\";\n          }else{\n            winstring += \" and \";\n          }\n        }\n\n      }\n    }\n    var noScoreString = \"\";\n    if(this.state.noScoreCount > 1 && this.state.noScoreCount < 6){\n      noScoreString = \"There have been no points scored in the past \" + this.state.noScoreCount + \" turns. The game will end after 6 consecutive turns of no scoring.\"\n    }\n    var playersTitle = \"Players\";\n    if(this.state.players.length == 0)\n      playersTitle = \"Waiting for players...\";\n    return(\n      <div className={classname}>\n        <div className=\"title\">\n          {playersTitle}\n        </div>\n        <div className=\"players\">\n          {this.state.players.map((player, i) => this.renderPlayer(player, i, isLobby))}\n        </div>\n        <div className=\"wintext\">\n          {winstring}\n        </div>\n        <div className=\"warning\">\n          {noScoreString}\n        </div>\n      </div>\n    );\n\n  }\n  renderPlayer(player,i, isLobby){\n    var isBorder = \"\";\n    if(i < this.state.players.length-1)\n      isBorder = \" border\";\n    var isActive = \"\";\n    if(i == this.state.curTurn)\n      isActive = \"active\";\n    if(isLobby){\n      return(\n        <div className={\"player lobby\"}>\n          {player.name}\n        </div>)\n    }else{\n      return(\n        <div className={\"player\" + isBorder}>\n          <div className={isActive}/>\n          <div className=\"playername\">\n          {player.name}\n          </div>\n          <div className=\"score\">\n          {player.score}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderProgressBar(progress){\n    //PAD PROGRESS A BIT TO UPDATE BEFORE PROCESSING FREEZE\n    var loadingProgress = this.state.loadingProgress + 0.05;\n    if(loadingProgress > 1.0)\n      loadingProgress = 1.0;\n\n    var width = loadingProgress * 200;\n    var language = Distributions[this.state.langIndex].name;\n    var progresstext = \"Loading Dictionary for \" + language +  \"...\";\n    if(loadingProgress == 1.0){\n      progresstext = \"Processing Dictionary for \" + language +  \"...\";\n    }\n    return(\n      <div className=\"progress\">\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n        <div className=\"progresstext\">{progresstext}</div>\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n      </div>\n    )\n  }\n\n\n  render() {\n    var scale = scale = Math.min(this.state.width/360, this.state.height/360);\n\n    if(this.state.gameState > 0){\n      return (\n        <div className=\"App\">\n          <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <div className=\"grid\">\n                <div className=\"fields\">\n                  {this.gameGrid.map((line, i) => this.renderSquareLine(line, i))}\n\n                </div>\n              </div>\n              {this.renderRightInfo(false)}\n              {this.renderLeftInfo()}\n            </div>\n          </div>\n          <img className=\"smalllogo\" src={wordcastlogo} />\n        </div>\n      );\n    }else{\n      if(this.state.isLoadingDict){\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderProgressBar(this.state.loadingProgress)}\n              </div>\n            </div>\n          </div>\n        );\n      }else{\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderRightInfo(true)}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    }\n    this.classname = \"square \";\n    this.multiplierText = \"\";\n    this.multiplierNum = \"\";\n\n    if(props.square.type == 1){\n      this.classname += \"letterx2\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 2){\n      this.classname += \"letterx3\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 3){\n      this.classname += \"letterx4\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x4\";\n    }\n    if(props.square.type == 4){\n      this.classname += \"wordx2\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 5){\n      this.classname += \"wordx3\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 6){\n      this.classname += \"wordx4\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x4\";\n    }\n    if(props.square.type == 7){\n      this.classname += \"startsquare\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(this.multiplierText == \"\" && props.square.x == 7 && props.square.y == 7){\n        this.classname += \"startsquare\";\n    }\n\n    this.selected = false;\n    this.isLetter = false;\n    this.isTempLetter = false;\n\n\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var oldSelect = this.selected;\n    this.selected = nextProps.isSelected;\n    if(oldSelect != this.selected){\n      return true;\n    }\n\n\n    if(nextProps.square.letter != null && !this.isLetter){\n      this.isLetter = true;\n      return true;\n    }\n    var isTempLetter = nextProps.square.tempLetter != null;\n    if(isTempLetter != this.isTempLetter){\n      this.isTempLetter = isTempLetter;\n      return true;\n    }\n\n    return false;\n\n  }\n\n\n  render(){\n    this.selected = this.props.isSelected;\n    var value = \"\";\n    var score = \"\";\n    var classname = this.classname;\n    var multiplierclassname = \"\";\n    var letterStyle = \"\";\n    if(this.props.square.letter != null){\n      classname = \"lettercontainer\";\n      value = this.props.square.letter.value;\n      score = this.props.square.letter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.letter.score == 0)\n        letterStyle = \" fade\";\n    }\n    else if(this.props.square.tempLetter != null){\n      classname = \"lettercontainertemp\";\n      value = this.props.square.tempLetter.value;\n      score = this.props.square.tempLetter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.tempLetter.score == 0)\n        letterStyle = \" fade\";\n    }\n\n    if(this.selected){\n      return(\n        <div className={classname}>\n          <div className={classname + \" selected\"} style={{ 'marginLeft': this.margin}}>\n            <div className={\"multipliertext\" + multiplierclassname}>{this.multiplierText}</div>\n            <div className={\"multipliernum\" + multiplierclassname}>{this.multiplierNum}</div>\n            <div className={\"letter selected\" + letterStyle}>\n              {value}\n              <div className={\"letterscore\"}>\n                {score}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className={classname}>\n          <div className={\"letter\" + letterStyle}>\n            {value}\n            <div className={\"letterscore\"}>\n              {score}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","(function(exports) {\n  exports.BloomFilter = BloomFilter;\n  exports.fnv_1a = fnv_1a;\n\n  var typedArrays = typeof ArrayBuffer !== \"undefined\";\n\n  // Creates a new bloom filter.  If *m* is an array-like object, with a length\n  // property, then the bloom filter is loaded with data from the array, where\n  // each element is a 32-bit integer.  Otherwise, *m* should specify the\n  // number of bits.  Note that *m* is rounded up to the nearest multiple of\n  // 32.  *k* specifies the number of hashing functions.\n  function BloomFilter(m, k) {\n    var a;\n    if (typeof m !== \"number\"){\n      a = m;\n      m = a.length * 32;\n    }\n\n    var n = Math.ceil(m / 32),\n        i = -1;\n    this.m = m = n * 32;\n    this.k = k;\n\n    if (typedArrays) {\n      var kbytes = 1 << Math.ceil(Math.log(Math.ceil(Math.log(m) / Math.LN2 / 8)) / Math.LN2),\n          array = kbytes === 1 ? Uint8Array : kbytes === 2 ? Uint16Array : Uint32Array,\n          kbuffer = new ArrayBuffer(kbytes * k),\n          buckets = this.buckets = new Int32Array(n);\n      if (a) while (++i < n) buckets[i] = a[i];\n      this._locations = new array(kbuffer);\n    } else {\n      var buckets = this.buckets = [];\n      if (a) while (++i < n) buckets[i] = a[i];\n      else while (++i < n) buckets[i] = 0;\n      this._locations = [];\n    }\n  }\n\n  // See http://willwhim.wpengine.com/2011/09/03/producing-n-hash-functions-by-hashing-only-once/\n  BloomFilter.prototype.locations = function(v) {\n    var k = this.k,\n        m = this.m,\n        r = this._locations,\n        a = fnv_1a(v),\n        b = fnv_1a(v, 1576284489), // The seed value is chosen randomly\n        x = a % m;\n    for (var i = 0; i < k; ++i) {\n      r[i] = x < 0 ? (x + m) : x;\n      x = (x + b) % m;\n    }\n    return r;\n  };\n\n  BloomFilter.prototype.add = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) buckets[Math.floor(l[i] / 32)] |= 1 << (l[i] % 32);\n  };\n\n  BloomFilter.prototype.test = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) {\n      var b = l[i];\n      if ((buckets[Math.floor(b / 32)] & (1 << (b % 32))) === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Estimated cardinality.\n  BloomFilter.prototype.size = function() {\n    var buckets = this.buckets,\n        bits = 0;\n    for (var i = 0, n = buckets.length; i < n; ++i) bits += popcnt(buckets[i]);\n    return -this.m * Math.log(1 - bits / this.m) / this.k;\n  };\n\n  // Turns the bloom filter into a buffer for later storage.\n  BloomFilter.prototype.serialize = function() {\n    // The format is the number of hashes as a uint16, followed by the buckets\n    // data as big endian int32's\n    var bucketLen = this.buckets.length,\n      target = new Buffer((bucketLen << 2) + 2);\n    target.writeUInt16BE(this.k, 0);\n\n    for (var i = 0; i < bucketLen; ++i) {\n      target.writeInt32BE(this.buckets[i], (i << 2) + 2);\n    }\n\n    return target;\n  };\n\n  // Parses a buffer created by a previous call to .serialize into a BloomFilter\n  BloomFilter.deserialize = function(data) {\n    var hashes = data.readUInt16BE(0),\n      count = (data.length - 2) >> 2,\n      buckets = typedArrays ? new Int32Array(count) : new Array(count);\n\n    for (var i = 0; i < count; ++i) {\n      buckets[i] = data.readInt32BE((i << 2) + 2);\n    }\n\n    return new BloomFilter(buckets, hashes);\n  };\n\n  BloomFilter.bytesToString = function(arr) {\n  var out = '';\n  for (let i = 0; i < arr.length; i += 2) {\n    out += String.fromCharCode((arr[i] << 8) | arr[i + 1]);\n  }\n  return out;\n}\n\n  BloomFilter.stringToBytes = function(str) {\n    const arr = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      let code = String.fromCharCode(str[i]);\n      arr[i * 2 + 0] = code >> 8;\n      arr[i * 2 + 1] = code;\n    }\n    return arr;\n  }\n\n  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\n  function popcnt(v) {\n    v -= (v >> 1) & 0x55555555;\n    v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\n    return ((v + (v >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\n  }\n\n  // Fowler/Noll/Vo hashing.\n  // Nonstandard variation: this function optionally takes a seed value that is incorporated\n  // into the offset basis. According to http://www.isthe.com/chongo/tech/comp/fnv/index.html\n  // \"almost any offset_basis will serve so long as it is non-zero\".\n  function fnv_1a(v, seed) {\n    var a = 2166136261 ^ (seed || 0);\n    for (var i = 0, n = v.length; i < n; ++i) {\n      var c = v.charCodeAt(i),\n          d = c & 0xff00;\n      if (d) a = fnv_multiply(a ^ d >> 8);\n      a = fnv_multiply(a ^ c & 0xff);\n    }\n    return fnv_mix(a);\n  }\n\n  // a * 16777619 mod 2**32\n  function fnv_multiply(a) {\n    return a + (a << 1) + (a << 4) + (a << 7) + (a << 8) + (a << 24);\n  }\n\n  // See https://web.archive.org/web/20131019013225/http://home.comcast.net/~bretm/hash/6.html\n  function fnv_mix(a) {\n    a += a << 13;\n    a ^= a >>> 7;\n    a += a << 3;\n    a ^= a >>> 17;\n    a += a << 5;\n    return a & 0xffffffff;\n  }\n})(typeof exports !== \"undefined\" ? exports : this);\n","module.exports = __webpack_public_path__ + \"static/media/wordcastlogo_white.c4dcc4ed.svg\";"],"sourceRoot":""}