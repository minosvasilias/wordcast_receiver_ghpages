{"version":3,"sources":["App.js","bloomfilter.js","serviceWorker.js","index.js","wordcastlogo_white.svg"],"names":["CancelToken","axios","CHANNEL","source","SquareData","x","y","type","Object","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","selected","letter","tempLetter","isSelected","Player","name","id","androidId","score","letters","Array","turns","clientIndex","Letter","value","App","props","context","_this","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","_handleKeyDown","e","keyCode","state","gameState","langIndex","specialCoords","Boards","dist","setUpBoard","initializeLetterPool","addPlayer","moveCursor","console","log","key","i","letterPool","length","toLowerCase","gameGrid","cursorLocation","splice","setState","width","height","players","curTurn","turnCount","noScoreCount","isFirstLetterDown","boardIndex","isDict","isLoadingDict","loadingProgress","isPassAlong","isPro","originTempSquare","originAxis","curDict","handleMessage","bind","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","updateDimensions","componentDidMount","updateSenders","ii","result","charactersLength","charAt","Math","floor","random","_this2","path","Distributions","dictPath","fetch","then","r","text","splitDictRaw","split","splitDict","bloom","BloomFilter","nIndex","item","indexOf","normalize","replace","substr","push","add","require","falsecount","truecount","test","gib","makeid","percentage1","percentage2","testtrue","testfalse","blob","serialize","string","toString","buffer","Buffer","from","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","deserialize","_this3","addEventListener","_setTimeout","b","ctx","cast","framework","CastReceiverContext","getInstance","options","CastReceiverOptions","maxInactivity","customNamespaces","assign","system","MessageType","JSON","addCustomMessageListener","customEvent","data","senderId","EventType","SENDER_CONNECTED","event","SENDER_DISCONNECTED","handleDisconnect","start","message","connectedSenders","getSenders","debugstring","debugOnScreen","sendToast","undefined","msg","sendState","sendHurryUp","startGame","switchLanguage","index","switchBoard","switchDict","cancelDictDownload","switchPassAlong","cancelGame","dir","placeLetter","jokerValue","endTurn","swapLetters","swapIndices","resetTempLetters","json","player","sendJoinSuccess","sendCustomMessage","sendPlayerLetters","sendGameStarted","endGame","content","cancel","_this4","dictStatus","total","dictSize","get","cancelToken","c","onDownloadProgress","progressEvent","percent","loaded","response","catch","err","rand","prevLetter","stringify","endTurnNoScore","targetPlayer","playersSorted","slice","sort","scores","scoresString","nextTurn","tempSquares","getTempSquares","bonusScore","words","wordStrings","isConnected","adjSquares","getAdjSquares","word","getAdjWord","duplicateFound","iii","every","wordString","w","isOnCenterSquare","square","check","checkWords","illegalWords","illegalString","curLetter","totalScore","turnLog","wordMultiplier","letterScore","drawLetters","isEmpty","playerLetters","includes","isTurn","turnName","adjSquare","curSquare","posEndFound","negEndFound","originFound","nextSquares","nextSquare","nextX","nextY","isLegal","offset","oldSquare","drawLettersInit","playerIndex","turnLogJson","availableLetters","diff","newPlayers","newPlayer","langs","dictInfo","boards","boardsJson","innerWidth","innerHeight","line","_this5","react__WEBPACK_IMPORTED_MODULE_6___default","className","map","renderSquare","Square","isLobby","_this6","classname","winstring","max","maxindex","noScoreString","playersTitle","renderPlayer","isBorder","progress","language","progresstext","style","_this7","scale","min","transform","renderSquareLine","renderRightInfo","renderLeftInfo","src","wordcastlogo","renderProgressBar","Component","_React$Component","_this8","multiplierText","multiplierNum","isLetter","isTempLetter","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__","nextProps","oldSelect","multiplierclassname","letterStyle","marginLeft","margin","React","exports","fnv_1a","typedArrays","ArrayBuffer","m","k","n","ceil","kbytes","LN2","array","Uint8Array","Uint16Array","Uint32Array","kbuffer","buckets","Int32Array","_locations","popcnt","v","seed","charCodeAt","d","fnv_multiply","fnv_mix","prototype","locations","l","size","bits","bucketLen","target","writeUInt16BE","writeInt32BE","hashes","readUInt16BE","count","readInt32BE","bytesToString","arr","out","String","fromCharCode","stringToBytes","str","code","Boolean","location","hostname","match","ReactDOM","render","react_default","getElementById","serviceWorker","ready","registration","unregister","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.aef2de9f.chunk.js","sourcesContent":["import React,  { Component, TimeUnit } from 'react';\nimport ReactDOM from \"react-dom\";\nimport wordcastlogo from './wordcastlogo_white.svg';\nimport './App.css';\nimport Distributions from \"./Distributions.json\";\nimport Boards from \"./Boards.json\";\n\n\nimport BloomFilter from \"./bloomfilter.js\";\n\nimport axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\n\nvar CHANNEL = 'urn:x-cast:com.github.minosvasilias.wordcast';\n\nclass SquareData{\n  constructor(x, y, type) {\n    this.x = x;\n    this.y = y;\n    this.type = type; //0 = NORMAL, 1 = LETTER X2, 2 = LETTER X3, 3 = WORD X2, 4 = WORD X3, 5 = START\n    this.selected = false;\n    this.letter = null;\n    this.tempLetter = null;\n    this.isSelected = false;\n  }\n}\nclass Player{\n  constructor(name, id, androidId) {\n    this.name = name;\n    this.id = id;\n    this.androidId = androidId;\n    this.score = 0;\n    this.letters = new Array();\n    this.turns = new Array();\n    this.clientIndex = 0;\n  }\n}\n\nclass Letter{\n  constructor(value, score) {\n    this.value = value;\n    this.score = score;\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      players: {},\n      gameState : 0,//0 = JOINING, 1 = RUNNING, 2 = FINISH\n      cursorLocation: [7,7],\n      curTurn: 0,\n      turnCount: 0,\n      noScoreCount: 0,\n      isFirstLetterDown: false,\n      langIndex: 0,\n      boardIndex: 0,\n      isDict: false,\n      isLoadingDict: false,\n      loadingProgress: 0.0,\n      isPassAlong: false,\n      isPro: false\n\n    };\n    this.originTempSquare = null;\n    this.originAxis = [-1,-1];\n\n    /*this.specialCoords = [\n      //LX2\n      [[0,3],[0,11],[2,6],[2,8],\n      [3,0],[3,7],[3,14],\n      [6,6],[6,8],[6,12],[6,2],\n      [7,3],[7,11],\n      [8,6],[8,8],[8,12],[8,2],\n      [11,0],[11,7],[11,14],\n      [14,3],[14,11],[12,6],[12,8]],\n      //LX3\n      [[1,5],[1,9],\n      [5,1],[5,5],[5,9],[5,13],\n      [9,1],[9,5],[9,9],[9,13],\n      [13,5],[13,9]],\n      //WX2\n      [[1,1],[2,2],[3,3],[4,4],\n      [10,10],[11,11],[12,12],[13,13],\n      [13,1],[12,2],[11,3],[10,4],\n      [4,10],[3,11],[2,12],[1,13]],\n      //WX3\n      [[0,0],[0,7],[0,14],\n      [7,0],[7,14],\n      [14,0],[14,7],[14,14]],\n      //START SQUARE\n      [[7,7]]\n    ];*/\n\n    this.curDict = [null, null];\n\n    /*this.specialCoords = Boards[1].dist;\n    this.setUpBoard();*/\n\n\n\n    //this.setUpBloom();\n\n\n\n\n\n\n    this.state.players = new Array();\n\n    this.handleMessage = this.handleMessage.bind(this);\n    this.moveCursor = this.moveCursor.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addPlayer = this.addPlayer.bind(this);\n    this.updateSenders = this.updateSenders.bind(this);\n\n  }\n  setUpBoard(){\n    this.gameGrid = new Array(15);\n    for(var i = 0; i < 15; i++){\n      this.gameGrid[i] = new Array(15);\n      for(var ii = 0; ii < 15; ii++){\n        this.gameGrid[i][ii] =  new SquareData(i,ii,0);\n      }\n    }\n\n    this.letterPool = new Array();\n\n    for(var i = 0; i < this.specialCoords.length; i++){\n      for(var ii = 0; ii < this.specialCoords[i].length; ii++){\n        this.gameGrid[this.specialCoords[i][ii][0]][this.specialCoords[i][ii][1]].type = i+1;\n      }\n    }\n  }\n  makeid(length) {\n   var result           = '';\n   var characters       = 'öäüabcdefghijklmnopqrstuvwxyz';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n }\n setUpBloom(){\n\n      //FIRST, SET INDEX OF DISTRIBUTION\n      var distIndex = 3;\n      var testtruestring = \"alfeñicare\";//SPANISH\"alfeñicaré\";\n      var testfalsestring = \"blobsy\";\n\n      this.state.langIndex = distIndex;\n      this.initializeLetterPool();\n      var path = Distributions[this.state.langIndex].dictPath;\n\n   ////////////////////////////\n       let dict;\n       fetch(path)\n       .then((r) => r.text())\n       .then(text  => {\n         //console.log(text);\n         var splitDictRaw = text.split(\"\\n\");\n         console.log(splitDictRaw);\n         var splitDict = new Array();\n\n         var bloom = new BloomFilter.BloomFilter(\n           5975973,//ITALIAN 14898389,//FRENCH 5072222,//ENGLISH 8868648 ,//GERMAN 32000000,//28755176,//25869786,//16284727,//8192 * 256,//32768 * 256,//32 * 256, // number of bits to allocate.\n           17//ITALIAN 16//FRENCH 17//ENGLISH 17//GERMAN11//10//9//6//16        // number of hash functions.\n         );\n         //var trie = new Trie();\n         //console.log(JsSuffixTrie);\n         //var trie = new JsSuffixTrie();\n\n         // Add some elements to the filter.\n         for(var i = 0; i < splitDictRaw.length; i++){\n           var item = splitDictRaw[i].toLowerCase();\n\n           //TRIM (CAREFUL, ONLY GERMAN AND ENGLISH SO FAR!)\n           //item = item.substring(0, item.length-1);\n\n           //REMOVE DIACRITICS ETC EXCEPT ñ\n           var nIndex = item.indexOf(\"ñ\");\n           item = item.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n           if(nIndex != -1){\n            item = item.substr(0, nIndex) + \"ñ\" + item.substr(nIndex + 1);\n          }\n\n\n           var doAdd = true;\n           /*for(var i = 0; i < item.length; i++){\n             var char = item.charAt(i);\n             if(!this.availableLetters.includes(char)){\n               doAdd = false;\n             }\n           }*/\n\n           if(doAdd){\n             splitDict.push(item);\n             //splitDict[i] = item;\n             bloom.add(item);\n           }\n           //trie.add(item);\n         }\n\n\n         console.log(\"DICT LENGTH: \" + splitDict.length);\n         console.log(splitDict);\n\n               // check contains method\n               //console.log(trie.contains(\"arbeit\"));  // true\n               //console.log(trie.contains(\"fhqap\")); // false\n\n\n               var util = require('util');\n               //var json = util.inspect(trie);\n\n         //var array = [].slice.call(trie.children),\n           //var  json = JSON.stringify(trie);\n         //console.log(json);\n\n         //TMP JSON SAVING\n         /*var json = trie.toJSON();\n         json = JSON.stringify(splitDict);\n         console.log(json);\n         var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         var falsecount = 0;\n         var truecount = 0;\n         for(var i = 0; i < splitDict.length; i++){\n           var item = splitDict[i];\n           var test = bloom.test(item);\n\n           var gib = this.makeid(6);\n           var test2 = bloom.test(gib);\n           if(!test){\n             falsecount += 1;\n             //console.log(gib);\n           }\n           if(test2){\n             truecount += 1;\n             //console.log(gib);\n           }\n         }\n         /*if(splitDict.includes('jäger')){\n           console.log(\"AAARBEIT\");\n         }*/\n         //console.log(splitDict[101069].toLowerCase());\n         console.log(\"FALSE NEGATIVES: \" + falsecount);\n         console.log(\"FALSE POSITIVES: \" + truecount);\n         var percentage1 = (falsecount / splitDict.length) * 100;\n         var percentage2 = (truecount / splitDict.length) * 100;\n         console.log(\"FALSE NEGATIVES PERCENT: \" + percentage1);\n         console.log(\"FALSE POSITIVES PERCENT: \" + percentage2);\n         // Test if an item is in our filter.\n         // Returns true if an item is probably in the set,\n         // or false if an item is definitely not in the set.\n\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         // Serialisation. Note that bloom.buckets may be a typed array,\n         // so we convert to a normal array first.\n         /*var array = [].slice.call(bloom.buckets),\n             json = JSON.stringify(array);\n         console.log(json);*/\n\n         //ALTERNATIVE SERIALIZATION\n         var blob = bloom.serialize();\n         //json = BloomFilter.BloomFilter.bytesToString(blob);\n         //console.log(enc.decode(blob));\n         console.log(blob);\n\n\n         /*var enc = new TextDecoder(\"utf-8\");\n         var encodedblob = enc.decode(blob);\n         var enc2 = new TextEncoder(\"utf-8\");\n         var blob2 = enc2.encode(encodedblob);\n         console.log(blob2);*/\n\n         let string = blob.toString('utf16le');\n         let buffer = Buffer.from(string, 'utf16le');\n         console.log(buffer);\n\n         // Function to download data to a file\n         var data = string;\n         var filename = \"test\";\n         var type = \".json\";\n         var file = new Blob([data], {type: type});\n         if (window.navigator.msSaveOrOpenBlob) // IE10+\n             window.navigator.msSaveOrOpenBlob(file, filename);\n         else { // Others\n             var a = document.createElement(\"a\"),\n                     url = URL.createObjectURL(file);\n             a.href = url;\n             a.download = filename;\n             document.body.appendChild(a);\n             a.click();\n             setTimeout(function() {\n                 document.body.removeChild(a);\n                 window.URL.revokeObjectURL(url);\n             }, 0);\n         }\n\n         //console.log(json);\n\n\n         var bloom = BloomFilter.BloomFilter.deserialize(blob);\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         fetch('/french.bloom')\n         .then((r) => r.text())\n         .then(text  => {\n           //var enc = new TextEncoder(\"utf-16\");\n           //var blob = enc.encode(json);\n           var blob = Buffer.from(text, 'utf16le');\n           //var blob = BloomFilter.BloomFilter.stringToBytes(text);\n             console.log(blob);\n           var bloom = BloomFilter.BloomFilter.deserialize(blob);\n           var testtrue = bloom.test(testtruestring);\n           var testfalse = bloom.test(testfalsestring);\n           console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         });\n         //TMP JSON SAVING\n         /*var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         // Deserialisation. Note that the any array-like object is supported, but\n         // this will be used directly, so you may wish to use a typed array for\n         // performance.\n         //var bloom = new BloomFilter(array, 16);*/\n       });\n }\n\n\n\n\n\n\n\n\n\n\n _handleKeyDown = (e) => {\n\n   switch(e.keyCode){\n     //CONSOLE KEY TO START\n     case 220:\n      this.state.gameState = 1;\n      this.state.langIndex = 0;\n      this.specialCoords = Boards[1].dist;\n      this.setUpBoard();\n      this.initializeLetterPool();\n      this.addPlayer(\"Ajax\", \"1\", \"1\", false);\n      this.addPlayer(\"Theseus\", \"2\", \"2\", false);\n      this.addPlayer(\"Asterius\", \"3\", \"3\", false);\n      this.addPlayer(\"Paris\", \"4\", \"4\", false);\n      this.addPlayer(\"Achilles\", \"5\", \"5\", false);\n      this.addPlayer(\"Agamemnon\", \"6\", \"6\", false);\n      break;\n\n     case 37:\n       this.moveCursor(\"LEFT\");\n       break;\n     case 38:\n       this.moveCursor(\"UP\");\n       break;\n     case 39:\n       this.moveCursor(\"RIGHT\");\n       break;\n     case 40:\n       this.moveCursor(\"DOWN\");\n       break;\n   }\n\n   //IF LETTER\n   console.log(e.key);\n   for(var i = 0; i < this.letterPool.length; i++){\n     var letter = this.letterPool[i];\n     if(letter.value.toLowerCase() == e.key){\n       var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n       curSquare.letter = letter;\n       this.letterPool.splice(i, 1);\n\n     }\n   }\n   this.setState({gameState: this.state.gameState});\n\n }\n\n\n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n\n\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n\n    //PREVENT TIMEOUT\n    window._setTimeout = window.setTimeout;\n    window.setTimeout = function(a, b) {\n        // disable setTimeout so chromecast won't kill us after 5 minutes...\n    };\n\n    //LOAD CAST LOGIC\n\n    this.ctx = window.cast.framework.CastReceiverContext.getInstance();\n    var options = new window.cast.framework.CastReceiverOptions();\n    options.maxInactivity = 3600; //Development only\n\n\n    options.customNamespaces = Object.assign({});\n    options.customNamespaces[CHANNEL] = window.cast.framework.system.MessageType.JSON;\n\n    var handleMessage = this.handleMessage;\n    this.ctx.addCustomMessageListener(CHANNEL, function(customEvent) {\n        handleMessage(customEvent.data, customEvent.senderId, customEvent.data.id);\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_CONNECTED,\n        event => {\n        //CONNECT\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_DISCONNECTED,\n        event => {\n        this.handleDisconnect(event.senderId);\n    });\n    this.ctx.start(options);\n\n    //this.updateSenders();\n\n\n  }\n\n  debugOnScreen(message){\n    //document.getElementById(\"content\").innerHTML = message;\n    console.log(message);\n  }\n\n  updateSenders(id){\n    this.connectedSenders = this.ctx.getSenders();\n    var debugstring = \"\";\n    for(var i = 0; i < this.connectedSenders.length; i++){\n      debugstring += this.connectedSenders[i].id + \", \";\n    }\n    this.debugOnScreen(\"MESSAGE RECEIVED FROM ID: \" + id + \" - CONNECTED IDS: \" + debugstring);\n  }\n\n  handleDisconnect(id){\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].id == id){\n        if(this.state.gameState == 0){\n          this.sendToast(this.state.players[i].name + \" disconnected\", undefined);\n          this.state.players.splice(i, 1);\n          this.setState({players: this.state.players})\n        }\n      }\n    }\n  }\n\n  handleMessage(msg, id, androidId){\n    this.updateSenders(id);\n    if(msg.msg == \"STATE\"){\n        this.sendState(id, androidId);\n    }\n    if(msg.msg == \"HURRYUP\"){\n        this.sendHurryUp();\n    }\n    //LOBBY ONLY\n    if(this.state.gameState == 0){\n      if(msg.msg == \"JOIN\"){\n          this.addPlayer(msg.name, id, androidId, msg.isPro);\n      }\n      if(msg.msg == \"STARTGAME\"){\n          this.startGame();\n      }\n      if(msg.msg == \"LANGUAGE\"){\n          this.switchLanguage(msg.index);\n      }\n      if(msg.msg == \"BOARD\"){\n          this.switchBoard(msg.index);\n      }\n      if(msg.msg == \"DICT\"){\n          this.switchDict(msg.isDict);\n      }\n      if(msg.msg == \"DICTLOADCANCEL\"){\n          this.cancelDictDownload();\n      }\n      if(msg.msg == \"PASSALONG\"){\n          this.switchPassAlong(msg.isPassAlong);\n      }\n    }\n    if(msg.msg == \"CANCEL\"){\n        this.cancelGame(androidId);\n    }\n    //CURRENT PLAYER ONLY\n    if(this.state.players.length == 0 || this.state.gameState != 1)\n      return;\n    if(id != this.state.players[this.state.curTurn].id)\n      return;\n    if(msg.msg == \"MOVE\"){\n        this.moveCursor(msg.dir);\n    }\n    if(msg.msg == \"PLACE\"){\n      this.placeLetter(msg.index, msg.jokerValue, id);\n    }\n    if(msg.msg == \"ENDTURN\"){\n        this.endTurn(id);\n    }\n    if(msg.msg == \"SWAP\"){\n        this.swapLetters(msg.swapIndices, id);\n    }\n    if(msg.msg == \"RESET\"){\n        this.resetTempLetters();\n    }\n  }\n\n  sendState(id, androidId){\n    var json;\n\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n      }\n    }\n\n    if(this.state.gameState == 0){\n      if(player != null){\n        player.id = id;\n        this.sendJoinSuccess(player);\n        return;\n      }else{\n        json = {\"msg\":\"NAME\"};\n        this.ctx.sendCustomMessage(CHANNEL , id,  json);\n        return;\n      }\n    }\n    else if(this.state.gameState == 1){\n\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        //RESET LETTERS IF ITS REJOINING PLAYERS TURN IN ORDER TO AVOID UI MESS\n        if(player.androidId == this.state.players[this.state.curTurn].androidId){\n          this.resetTempLetters();\n        }else{\n          this.sendPlayerLetters(player);\n        }\n        this.sendGameStarted(player);\n        return;\n      }\n    }\n    else if(this.state.gameState == 2){\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        this.endGame(player);\n        return;\n      }\n    }\n    json = {\"msg\":\"GAMEONGOING\"};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n\n\n  }\n\n  sendToast(content, id){\n    var json = {\"msg\":\"TOAST\",\"content\":content};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n  }\n\n  cancelGame(androidId){\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n        this.sendToast(player.name + \" has cancelled the game!\", undefined);\n      }\n    }\n\n    this.setState({gameState: 0, cursorLocation: [7,7], curTurn: 0,\n                  turnCount: 0, noScoreCount: 0, isFirstLetterDown: false});\n    this.setUpBoard();\n\n    for(var i = 0; i < this.state.players.length; i++){\n      this.state.players[i].score = 0;\n      this.state.players[i].letters = new Array();\n      this.state.players[i].turns = new Array();\n      this.sendState(this.state.players[i].id, this.state.players[i].androidId);\n    }\n  }\n\n  cancelDictDownload(){\n    if(this.cancel != null){\n      this.cancel();\n      delete this.curDict;\n    }\n  }\n\n  switchDict(isDict){\n    if(this.state.gameState != 0){\n      return;\n    }\n    this.setState({isDict: isDict});\n    var json = {\"msg\":\"DICT\",\"isDict\":isDict};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n\n\n    if(isDict){\n      var langIndex = this.state.langIndex;\n      if(this.curDict == undefined || this.curDict[0] != Distributions[langIndex].name){\n        delete this.curDict;\n\n\n        var dist = Distributions[langIndex];\n        if(dist.dictStatus != 1 || this.state.isLoadingDict)\n          return;\n\n        var json = {\"msg\":\"DICTLOADSTART\"};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        this.setState({isLoadingDict: true});\n        var total = dist.dictSize;\n        let cancel;\n        axios.get(dist.dictPath, {\n          cancelToken: new CancelToken(function executor(c) {\n            cancel = c;\n          }),\n          onDownloadProgress: (progressEvent) => {\n            //this.state.players[0].name = progressEvent.loaded;\n            var percent = progressEvent.loaded / total;\n            this.setState({loadingProgress: percent});\n          }\n        })\n        .then((response) => {\n          //PARSE TXT INTO ARRAY\n          //OLD NON BLOOM WAY\n          /*var splitDict = response.data.split(\"\\n\");\n          for(var i = 0; i < splitDict.length; i++){\n            var item = splitDict[i].toLowerCase();\n            var item = item.substring(0, item.length-1);\n            splitDict[i] = item;\n          }*/\n          //BLOOM\n          var blob = Buffer.from(response.data, 'utf16le');\n          var bloom = BloomFilter.BloomFilter.deserialize(blob);\n\n          this.sendToast(\"LOADED DICTIONARY\", undefined);\n          this.curDict = [Distributions[langIndex].name, bloom];\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        .catch((err) => {\n          this.sendToast(\"LOAD FAILED\", undefined);\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n          this.setState({isDict: false});\n          var json = {\"msg\":\"DICT\",\"isDict\":false};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        this.cancel = cancel;\n      }\n\n    }\n\n  }\n\n  switchLanguage(index){\n    if(index != this.state.langIndex){\n      this.setState({langIndex: index});\n      var json = {\"msg\":\"LANGUAGE\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n      this.setState({isDict: false});\n      var json = {\"msg\":\"DICT\",\"isDict\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  switchBoard(index){\n    if(index != this.state.boardIndex){\n      this.setState({boardIndex: index});\n      var json = {\"msg\":\"BOARD\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  switchPassAlong(isPassAlong){\n    if(this.state.players.length == 1 && isPassAlong != this.state.isPassAlong){\n        this.setState({isPassAlong: isPassAlong});\n        var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":isPassAlong};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  sendHurryUp(){\n    var json = {\"msg\":\"HURRYUP\"};\n    var player = this.state.players[this.state.curTurn];\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  swapLetters(swapIndices, id){\n    if(this.letterPool.length < 7){\n      this.sendToast(\"You can't swap with less than 7 letters left in the pool!\", id);\n      return;\n    }\n    if(swapIndices.length == 0){\n      this.sendToast(\"You must select at least one letter to swap!\", id);\n      return;\n    }\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    var swapLetters = new Array();\n    for(var i = 0; i < swapIndices.length; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      var prevLetter = player.letters[swapIndices[i]];\n      swapLetters.push(prevLetter);\n\n      player.letters[swapIndices[i]] = letter;\n      this.letterPool.splice(rand, 1);\n    }\n    //ONLY ADD OLD LETTER TO POOL AFTER ALL NEW ONES ARE DRAWN\n    for(var i = 0; i < swapLetters.length; i++){\n      this.letterPool.push(swapLetters[i]);\n    }\n\n    this.setState({players: this.state.players});\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n    this.endTurnNoScore(id);\n  }\n\n  endGame(targetPlayer){\n    this.setState({gameState: 2});\n\n    var playersSorted = this.state.players.slice();\n    playersSorted.sort(function(a, b){\n        return a.score - b.score;\n    });\n    var scores = new Array();\n    for(var i = 0; i < playersSorted.length; i++){\n      scores.push({\"name\": playersSorted[i].name, \"score\":playersSorted[i].score});\n      playersSorted[i].clientIndex = i;\n    }\n    for(var i = 0; i < playersSorted.length; i++){\n      var player = playersSorted[i];\n      if(targetPlayer != null && player.androidId == targetPlayer.androidId ||\n        targetPlayer == null){\n          var scoresString = JSON.stringify(scores);\n          var json = {\"msg\":\"GAMEENDED\", \"clientIndex\":player.clientIndex, \"scores\":scoresString};\n          this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n      }\n\n    }\n  }\n\n  endTurnNoScore(id){\n    var noScoreCount = this.state.noScoreCount + 1;\n    this.state.players[this.state.curTurn].turns.push([]);\n    this.setState({noScoreCount: noScoreCount});\n\n    if(noScoreCount < 6){\n      this.nextTurn();\n    }else{\n      this.endGame(null);\n    }\n  }\n\n  endTurn(id){\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n        this.endTurnNoScore(id);\n        return;\n\n    }\n    var bonusScore = 0;\n    if(tempSquares.length == 7){\n      bonusScore = 50;\n    }\n    //FIND WORDS TO SCORE\n    var words = new Array();\n    var wordStrings = new Array();\n    var mainWord = null;\n    var isConnected = false;\n    for(var i = 0; i < tempSquares.length; i++){\n      var adjSquares = this.getAdjSquares(tempSquares[i]);\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(adjSquares[ii].letter != null)\n            isConnected = true;\n          //TRACE TEMPLETTER WORD\n          var word = this.getAdjWord(adjSquares[ii],tempSquares[i]).word;\n\n          word.sort(function(a, b){\n            if(a.x != b.x){\n              return a.x - b.x;\n            }\n            else{\n              return a.y - b.y;\n            }\n          });\n\n          //CHECK FOR DUPLICATE\n          var duplicateFound = false;\n          for(var iii = 0; iii < words.length; iii++){\n            if(word.length === words[iii].length && word.every(function(value, index) { return value === words[iii][index]})){\n              duplicateFound = true;\n            }\n          }\n          if(!duplicateFound){\n            words.push(word);\n            //FORM WORD STRING\n            var wordString = \"\";\n            for(var w = 0; w < word.length; w++){\n              if(word[w].letter != null)\n                wordString += word[w].letter.value;\n              if(word[w].tempLetter != null)\n                wordString += word[w].tempLetter.value;\n            }\n            wordStrings.push(wordString);\n          }\n          //mainWord = word;\n\n        }\n      }\n    }\n    if(!isConnected && this.state.isFirstLetterDown){\n      this.resetTempLetters();\n      this.sendToast(\"Word must connect to already existing one!\", id);\n      return;\n    }\n\n    //FIRST TURN MAY JUST BE ONE LETTER\n\n    if(tempSquares.length == 1 && !this.state.isFirstLetterDown){\n      var word = new Array();\n      word.push(tempSquares[0]);\n      words.push(word);\n    }\n    if(!this.state.isFirstLetterDown && words.length > 0){\n      var word = words[0];\n      var isOnCenterSquare = false;\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.x == 7 && square.y == 7){\n          isOnCenterSquare = true;\n        }\n      }\n      if(!isOnCenterSquare){\n        this.resetTempLetters();\n        this.sendToast(\"The first word must use the center square!\", id);\n        return;\n      }\n    }\n\n    //CHECK DICT IF ENABLED\n    if(this.state.isDict){\n      var check = this.checkWords(wordStrings);\n      var illegalWords = check.illegalWords;\n      if(illegalWords.length > 0){\n        this.resetTempLetters();\n        this.sendToast(check.illegalString, id);\n        return;\n      }\n    }\n\n\n  //SPECIAL RULES FOR SPANISH\n  if(Distributions[this.state.langIndex].name == \"Español\"){\n      for(var w = 0; w < words.length; w++){\n        var word = words[w];\n        var prevLetter = \"\";\n        for(var i = 0; i < word.length; i++){\n          var square = word[i];\n          var curLetter = \"\";\n          if(square.tempLetter != null){\n            curLetter = square.tempLetter.value;\n          }else{\n            curLetter = square.letter.value;\n          }\n          if(i != 0){\n            if(prevLetter == \"C\" && curLetter == \"H\" ||\n               prevLetter == \"L\" && curLetter == \"L\" ||\n               prevLetter == \"R\" && curLetter == \"R\"){\n                 this.resetTempLetters();\n                 this.sendToast(\"You must use the \" + prevLetter + curLetter + \" letter instead of \" + prevLetter + \" and \" + curLetter + \" separately!\", id);\n                 return;\n            }\n          }\n          prevLetter = curLetter;\n        }\n      }\n    }\n    //////////////////////////////////\n\n\n    //SCORE WORDS\n    var totalScore = 0;\n    var turnLog = new Array();\n    var debugstring = \"\";\n    for(var w = 0; w < words.length; w++){\n      debugstring += \" --- WORD: \";\n      var word = words[w];\n      var score = 0;\n      var wordMultiplier = 1;\n      var wordString = \"\";\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.tempLetter != null){\n          square.letter = square.tempLetter;\n          square.tempLetter = null;\n        }\n        var letterScore = 0;\n        if(square.type == 1){\n          letterScore = square.letter.score * 2;\n        }\n        else if(square.type == 2){\n          letterScore = square.letter.score * 3;\n        }\n        else{\n          letterScore = square.letter.score;\n        }\n        score += letterScore;\n\n\n\n\n\n\n        debugstring += square.letter.value + \"(\"+letterScore+\")-\";\n        wordString += square.letter.value;\n        if(square.letter.value == \"\"){\n          wordString += \"_\";\n        }\n        //ACCOUNT FOR PROBABLY IMPOSSIBLE SCENARIO OF BOTH WORD MULTIPLIERS USED\n        if(square.type == 3 || square.type == 5){\n          wordMultiplier = wordMultiplier * 2;\n        }\n        if(square.type == 4){\n          wordMultiplier = wordMultiplier * 3;\n        }\n      }\n      score = score * wordMultiplier;\n      totalScore += score;\n      wordStrings.push(wordString);\n      turnLog.push([wordString,score]);\n      debugstring += \" SCORE: \" + score;\n    }\n\n\n\n\n    //APPLY SCORE\n    totalScore += bonusScore;\n    debugstring += \" --- BONUS: + \" + bonusScore + \" --- TOTAL: \" + totalScore;\n\n\n    //END NO SCORE STREAK\n    this.setState({noScoreCount: 0});\n    //IF VERY FIRST TURN IS A PASS, THIS MAKES SURE WE KNOW WHEN THE GAME REALLY STARTED\n    this.state.isFirstLetterDown = true;\n    this.state.players[this.state.curTurn].score += totalScore;\n\n    //CHANGE TYPE OF USED SQUARES TO ZERO: SPECIAL TYPES CAN ONLY BE USED ON THE TURN THEY ARE COVERED\n    for(var w = 0; w < words.length; w++){\n      var word = words[w];\n      for(var i = 0; i < word.length; i++){\n        word[i].type = 0;\n      }\n    }\n\n    //ADD TURN TO PLAYER HISTORY\n    this.state.players[this.state.curTurn].turns.push(turnLog);\n\n\n    // DEBUG\n    var dstring = \"\";\n    this.debugOnScreen(\"WORD SCORED: \" + debugstring);\n\n    this.drawLetters(this.state.players[this.state.curTurn]);\n\n    //CHECK FOR GAME END\n    var isEmpty = true;\n    var playerLetters = this.state.players[this.state.curTurn].letters;\n    for(var i = 0; i < playerLetters.length; i++){\n      if(playerLetters[i] != null){\n        isEmpty = false;\n      }\n    }\n    if(isEmpty)\n      this.endGame(null);\n\n    //SWITCH TURNS\n    this.nextTurn();\n  }\n\n  checkWords(words){\n    var bloom = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = bloom.test(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n        if(i != words.length-1){\n          illegalString += \", \";\n        }\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  checkWordsOLD(words){\n    var splitDict = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = splitDict.includes(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n      }\n      if(i != words.length-1){\n        illegalString += \", \";\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  nextTurn(){\n    var nextTurn = this.state.curTurn + 1;\n    var oldTurn = this.state.curTurn;\n    if(nextTurn >= this.state.players.length){\n      nextTurn = 0;\n    }\n    this.setState({turnCount: this.state.turnCount+1})\n    this.setState({curTurn:nextTurn});\n    for(var i = 0; i<this.state.players.length; i++){\n      var isTurn = nextTurn == i;\n      var turnName = this.state.players[nextTurn].name;\n\n      var turnLogJson = JSON.stringify(this.state.players[i].turns);\n      var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":turnLogJson};\n      this.ctx.sendCustomMessage(CHANNEL , this.state.players[i].id,  json);;\n    }\n  }\n\n  getTempSquares(){\n    var tempSquares = new Array();\n    for(var i = 0; i < this.gameGrid.length; i++){\n      for(var ii = 0; ii < this.gameGrid[i].length; ii++){\n        var square = this.gameGrid[i][ii];\n        if(square.tempLetter != null){\n          tempSquares.push(square);\n        }\n      }\n    }\n    return tempSquares;\n  }\n\n  getAdjSquares(square){\n    var x = square.x;\n    var y = square.y;\n    var adjSquares = new Array();\n    if(x+1<15)\n      adjSquares.push(this.gameGrid[x+1][y]);\n    if(x-1>-1)\n      adjSquares.push(this.gameGrid[x-1][y]);\n    if(y+1<15)\n      adjSquares.push(this.gameGrid[x][y+1]);\n    if(y-1>-1)\n      adjSquares.push(this.gameGrid[x][y-1]);\n    return adjSquares;\n  }\n\n  getAdjWord(adjSquare, curSquare){\n    var dir = [adjSquare.x - curSquare.x, adjSquare.y - curSquare.y];\n    var posEndFound = false;\n    var negEndFound = false;\n    var originFound = false;\n    var word = new Array();\n    word.push(curSquare);\n    //START WITH CURRENT SQUARE FOR BOTH DIRECTIONS\n    var nextSquares = [curSquare,curSquare];\n    while(!posEndFound || !negEndFound){\n      //POSITIVE DIR\n      var nextX = nextSquares[0].x+dir[0];\n      var nextY = nextSquares[0].y+dir[1];\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[0] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          posEndFound = true;\n        }\n      }\n      else{\n        posEndFound = true;\n      }\n      //NEGATIVE DIR\n      nextX = nextSquares[1].x+(dir[0]*-1);\n      nextY = nextSquares[1].y+(dir[1]*-1);\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[1] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          negEndFound = true;\n        }\n      }\n      else{\n        negEndFound = true;\n      }\n    }\n    return {word : word, originFound : originFound}\n  }\n\n  placeLetter(index, jokerValue, id){\n    var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var curLetter = this.state.players[this.state.curTurn].letters[index];\n    var isLegal = true;\n    if(curSquare.letter != null || curSquare.tempLetter != null || curLetter == null){\n      isLegal = false;\n      this.sendToast(\"This square is already in use!\", id);\n    }\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n      this.originTempSquare = curSquare;\n      this.debugOnScreen(\"ORIGINTEMPSQUARE: \" + this.originTempSquare.x + \",\"+this.originTempSquare.y);\n\n    }\n    else if(tempSquares.length > 0){\n      var adjSquares = this.getAdjSquares(curSquare);\n      var originFound = false;\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(this.getAdjWord(adjSquares[ii], curSquare).originFound)\n            originFound = true;\n\n        }\n      }\n      if(!originFound){\n        isLegal = false;\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            this.sendToast(\"You may only place letters in one straight line!\", id);\n          }else{\n            this.sendToast(\"All placed letters must be connected!\", id);\n          }\n        }else{\n          this.sendToast(\"All placed letters must be connected!\", id);\n        }\n      }\n      else{\n\n        if(tempSquares.length == 1){\n          if(this.originTempSquare.x == curSquare.x){\n            this.originAxis = [curSquare.x,-1];\n          }else{\n            this.originAxis = [-1,curSquare.y];\n          }\n        }\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            isLegal = false;\n            this.sendToast(\"You may only place letters in one straight line!\", id);\n          }\n        }\n        this.debugOnScreen(\"ORIGIN FOUND! AXIS: \" + this.originAxis[0] +\",\" +this.originAxis[1]);\n\n      }\n    }\n\n\n    if(isLegal){\n      if(curLetter.value == \"\"){\n        curLetter.value = jokerValue;\n      }\n      curSquare.tempLetter = curLetter;\n      this.state.players[this.state.curTurn].letters[index] = null;\n      this.setState({players: this.state.players});\n      var json = {\"msg\":\"PLACED\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n    }\n  }\n\n  resetTempLetters(){\n    var tempSquares = this.getTempSquares(false);\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    for(var i = 0; i < tempSquares.length; i++){\n      while(player.letters[i+offset] != null){\n        offset += 1;\n      }\n      if(tempSquares[i].tempLetter.score == 0){\n        tempSquares[i].tempLetter.value = \"\";\n      }\n      player.letters[i+offset] = tempSquares[i].tempLetter;\n      tempSquares[i].tempLetter = null;\n    }\n    this.setState({players: this.state.players});\n    this.sendPlayerLetters(player);\n  }\n\n  moveCursor(dir){\n    var oldSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var x = this.state.cursorLocation[0];\n    var y = this.state.cursorLocation[1];\n    this.debugOnScreen(\"MOVING CURSOR \" + dir);\n    switch(dir){\n      case \"UP\":\n        y -= 1;\n        break;\n      case \"DOWN\":\n        y += 1;\n        break;\n      case \"LEFT\":\n        x -= 1;\n        break;\n      case \"RIGHT\":\n        x += 1;\n        break;\n      default:\n        break;\n    }\n    if(x > -1 && x < 15 && y > -1 && y < 15){\n      var curSquare = this.gameGrid[x][y];\n      oldSquare.isSelected = false;\n      curSquare.isSelected = true;\n      this.setState({cursorLocation:[x,y]});\n      //this.debugOnScreen(\"MOVED CURSOR TO \"+ this.state.cursorLocation[0] + \",\" + this.state.cursorLocation[1]);\n    }\n\n  }\n\n  startGame(){\n    this.debugOnScreen(\"GAME STARTED\");\n\n    this.specialCoords = Boards[this.state.boardIndex].dist;\n    this.setUpBoard();\n\n    this.initializeLetterPool();\n    this.gameGrid[7][7].isSelected = true;\n    this.setState({cursorLocation:[7,7]});\n    for(var i = 0; i<this.state.players.length; i++){\n      var player = this.state.players[i];\n      this.drawLettersInit(player);\n      this.sendGameStarted(player);\n    }\n    this.setState({gameState:1});\n  }\n\n  sendGameStarted(player){\n    var playerIndex = -1;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == player.androidId){\n        playerIndex = i;\n      }\n    }\n    var isTurn = this.state.curTurn == playerIndex;\n    var turnName = this.state.players[this.state.curTurn].name;\n    var turnLogJson = JSON.stringify(this.state.players[playerIndex].turns);\n    var json = {\"msg\":\"GAMESTARTED\", \"isTurn\":isTurn, \"turnName\":turnName, \"letters\":this.availableLetters, \"turnLog\":turnLogJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  initializeLetterPool(){\n    var letters = Distributions[this.state.langIndex].dist;\n    this.letterPool = new Array();\n    this.availableLetters = new Array();\n    for(var i = 0; i < letters.length; i++){\n      if(letters[i].length > 0){\n        for(var ii = 0; ii < letters[i].length; ii++){\n          if(!this.availableLetters.includes(letters[i][ii][0]) && letters[i][ii][0] != \"\"){\n            this.availableLetters.push(letters[i][ii][0]);\n          }\n          for(var iii = 0; iii < letters[i][ii][1]; iii++){\n            var letter = new Letter(letters[i][ii][0],i);\n            this.letterPool.push(letter);\n          }\n        }\n      }\n    }\n    this.availableLetters.sort();\n    console.log(this.availableLetters);\n  }\n\n  sendPlayerLetters(player){\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n  drawLettersInit(player){\n    var diff = 7 - player.letters.length;\n    for(var i = 0; i < diff; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      this.letterPool.splice(rand, 1);\n      player.letters.push(letter);\n    }\n    this.sendPlayerLetters(player);\n  }\n  drawLetters(player){\n    for(var i = 0; i < 7; i++){\n      if(player.letters[i] == null){\n        if(this.letterPool.length != 0){\n          var rand = Math.floor(Math.random()*this.letterPool.length);\n          var letter = this.letterPool[rand];\n          player.letters[i] = letter;\n          this.letterPool.splice(rand, 1);\n        }\n      }\n    }\n    this.sendPlayerLetters(player);\n  }\n\n  addPlayer(name, id, androidId, isPro){\n    if(this.state.isPassAlong){\n      this.sendToast(\"You may not join a game that is in Pass-Along mode!\", id)\n      return;\n    }\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        return;\n      }\n    }\n\n    if(this.state.players.length > 4){\n      this.sendToast(\"Sorry, the maximum amount of players is \" + this.state.players.length, id);\n      return;\n    }\n\n    var newPlayers = this.state.players.slice();\n    var newPlayer = new Player(name, id, androidId);\n    newPlayers.push(newPlayer);\n    this.setState({players:newPlayers})\n    this.debugOnScreen(\"NEW PLAYER: \" + name + \", ID: \" + id);\n\n    if(isPro){\n      this.setState({isPro:true})\n    }\n\n    this.sendJoinSuccess(newPlayer);\n  }\n\n  sendJoinSuccess(player){\n    //GET AVAILABLE LANGUAGES\n    var langs = new Array();\n    for(var i = 0; i < Distributions.length; i++){\n      langs.push({name:Distributions[i].name, dictStatus:Distributions[i].dictStatus, dictInfo:Distributions[i].dictInfo});\n    }\n    var boards = new Array();\n    for(var i = 0; i < Boards.length; i++){\n      langs.push(Distributions[i].name);\n    }\n    var langsJson = JSON.stringify(langs);\n    var boardsJson = JSON.stringify(boards);\n    var json = {\"msg\":\"JOINSUCCESS\", \"langs\":langs, \"langIndex\":this.state.langIndex, \"boards\": boardsJson, \"boardIndex\": this.state.boardIndex, \"isDict\":this.state.isDict, \"isLoadingDict\":this.state.isLoadingDict, \"isPro\":this.state.isPro};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n\n  updateDimensions(){\n     this.setState({width: window.innerWidth, height: window.innerHeight});\n  }\n\n  renderSquareLine(line,i){\n    return(\n      <div className=\"line\">\n        {line.map((square, i) => this.renderSquare(square, i))}\n      </div>\n    )\n  }\n  renderSquare(square, i){\n    var isSelected = false;\n    isSelected = square.isSelected;\n    /*if(square.x == cursorLocation[0] && square.y == cursorLocation[1]){\n      isSelected = true;\n    }*/\n    return(\n      <Square square={square} i={i} isSelected={isSelected}></Square>\n    )\n  }\n\n  renderLeftInfo(){\n    return(\n      <div className=\"leftinfo\">\n        <div className=\"title\">\n          {\"Letters Remaining\"}\n        </div>\n        <div className=\"poolcount\">\n          {this.letterPool.length}\n        </div>\n      </div>\n    );\n  }\n  renderRightInfo(isLobby){\n    var classname = \"rightinfo\";\n    if(isLobby)\n      classname = \"lobbyinfo\";\n\n    var winstring = \"\";\n    if(this.state.gameState == 2){\n      var max = 0;\n      var maxindex = new Array();\n      for(var i = 0; i < this.state.players.length; i++){\n        var player = this.state.players[i];\n        if(player.score > max){\n          max = player.score;\n          maxindex.push(i);\n        }\n        else if(player.score == max){\n          maxindex.push(i);\n        }\n      }\n\n      if(maxindex.length == 1){\n        winstring = this.state.players[maxindex[0]].name + \" wins!\";\n      }\n      else{\n        winstring = \"Draw between \";\n        for(var i = 0; i < maxindex.length; i++){\n          winstring += this.state.players[maxindex[i]].name;\n          if(i == maxindex.length -1){\n            winstring += \"!\";\n          }else{\n            winstring += \" and \";\n          }\n        }\n\n      }\n    }\n    var noScoreString = \"\";\n    if(this.state.noScoreCount > 1 && this.state.noScoreCount < 6){\n      noScoreString = \"There have been no points scored in the past \" + this.state.noScoreCount + \" turns. The game will end after 6 consecutive turns of no scoring.\"\n    }\n    var playersTitle = \"Players\";\n    if(this.state.players.length == 0)\n      playersTitle = \"Waiting for players...\";\n    return(\n      <div className={classname}>\n        <div className=\"title\">\n          {playersTitle}\n        </div>\n        <div className=\"players\">\n          {this.state.players.map((player, i) => this.renderPlayer(player, i, isLobby))}\n        </div>\n        <div className=\"wintext\">\n          {winstring}\n        </div>\n        <div className=\"warning\">\n          {noScoreString}\n        </div>\n      </div>\n    );\n\n  }\n  renderPlayer(player,i, isLobby){\n    var isBorder = \"\";\n    if(i < this.state.players.length-1)\n      isBorder = \" border\";\n    if(isLobby){\n      return(\n        <div className={\"player lobby\"}>\n          {player.name}\n        </div>)\n    }else{\n      return(\n        <div className={\"player\" + isBorder}>\n          <div className=\"playername\">\n          {player.name}\n          </div>\n          <div className=\"score\">\n          {player.score}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderProgressBar(progress){\n    //PAD PROGRESS A BIT TO UPDATE BEFORE PROCESSING FREEZE\n    var loadingProgress = this.state.loadingProgress + 0.05;\n    if(loadingProgress > 1.0)\n      loadingProgress = 1.0;\n\n    var width = loadingProgress * 200;\n    var language = Distributions[this.state.langIndex].name;\n    var progresstext = \"Loading Dictionary for \" + language +  \"...\";\n    if(loadingProgress == 1.0){\n      progresstext = \"Processing Dictionary for \" + language +  \"...\";\n    }\n    return(\n      <div className=\"progress\">\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n        <div className=\"progresstext\">{progresstext}</div>\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n      </div>\n    )\n  }\n\n\n  render() {\n    var scale = scale = Math.min(this.state.width/360, this.state.height/360);\n\n    if(this.state.gameState > 0){\n      return (\n        <div className=\"App\">\n          <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <div className=\"grid\">\n                <div className=\"fields\">\n                  {this.gameGrid.map((line, i) => this.renderSquareLine(line, i))}\n\n                </div>\n              </div>\n              {this.renderRightInfo(false)}\n              {this.renderLeftInfo()}\n            </div>\n          </div>\n          <img className=\"smalllogo\" src={wordcastlogo} />\n        </div>\n      );\n    }else{\n      if(this.state.isLoadingDict){\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderProgressBar(this.state.loadingProgress)}\n              </div>\n            </div>\n          </div>\n        );\n      }else{\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderRightInfo(true)}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    }\n    this.classname = \"square \";\n    this.multiplierText = \"\";\n    this.multiplierNum = \"\";\n\n    if(props.square.type == 1){\n      this.classname += \"letterx2\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 2){\n      this.classname += \"letterx3\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 3){\n      this.classname += \"wordx2\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 4){\n      this.classname += \"wordx3\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 5){\n      this.classname += \"startsquare\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n\n    this.selected = false;\n    this.isLetter = false;\n    this.isTempLetter = false;\n\n\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var oldSelect = this.selected;\n    this.selected = nextProps.isSelected;\n    if(oldSelect != this.selected){\n      return true;\n    }\n\n\n    if(nextProps.square.letter != null && !this.isLetter){\n      this.isLetter = true;\n      return true;\n    }\n    var isTempLetter = nextProps.square.tempLetter != null;\n    if(isTempLetter != this.isTempLetter){\n      this.isTempLetter = isTempLetter;\n      return true;\n    }\n\n    return false;\n\n  }\n\n\n  render(){\n    this.selected = this.props.isSelected;\n    var value = \"\";\n    var score = \"\";\n    var classname = this.classname;\n    var multiplierclassname = \"\";\n    var letterStyle = \"\";\n    if(this.props.square.letter != null){\n      classname = \"lettercontainer\";\n      value = this.props.square.letter.value;\n      score = this.props.square.letter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.letter.score == 0)\n        letterStyle = \" fade\";\n    }\n    else if(this.props.square.tempLetter != null){\n      classname = \"lettercontainertemp\";\n      value = this.props.square.tempLetter.value;\n      score = this.props.square.tempLetter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.tempLetter.score == 0)\n        letterStyle = \" fade\";\n    }\n\n    if(this.selected){\n      return(\n        <div className={classname}>\n          <div className={classname + \" selected\"} style={{ 'marginLeft': this.margin}}>\n            <div className={\"multipliertext\" + multiplierclassname}>{this.multiplierText}</div>\n            <div className={\"multipliernum\" + multiplierclassname}>{this.multiplierNum}</div>\n            <div className={\"letter selected\" + letterStyle}>\n              {value}\n              <div className={\"letterscore\"}>\n                {score}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className={classname}>\n          <div className={\"letter\" + letterStyle}>\n            {value}\n            <div className={\"letterscore\"}>\n              {score}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n}\n\nexport default App;\n","(function(exports) {\n  exports.BloomFilter = BloomFilter;\n  exports.fnv_1a = fnv_1a;\n\n  var typedArrays = typeof ArrayBuffer !== \"undefined\";\n\n  // Creates a new bloom filter.  If *m* is an array-like object, with a length\n  // property, then the bloom filter is loaded with data from the array, where\n  // each element is a 32-bit integer.  Otherwise, *m* should specify the\n  // number of bits.  Note that *m* is rounded up to the nearest multiple of\n  // 32.  *k* specifies the number of hashing functions.\n  function BloomFilter(m, k) {\n    var a;\n    if (typeof m !== \"number\"){\n      a = m;\n      m = a.length * 32;\n    }\n\n    var n = Math.ceil(m / 32),\n        i = -1;\n    this.m = m = n * 32;\n    this.k = k;\n\n    if (typedArrays) {\n      var kbytes = 1 << Math.ceil(Math.log(Math.ceil(Math.log(m) / Math.LN2 / 8)) / Math.LN2),\n          array = kbytes === 1 ? Uint8Array : kbytes === 2 ? Uint16Array : Uint32Array,\n          kbuffer = new ArrayBuffer(kbytes * k),\n          buckets = this.buckets = new Int32Array(n);\n      if (a) while (++i < n) buckets[i] = a[i];\n      this._locations = new array(kbuffer);\n    } else {\n      var buckets = this.buckets = [];\n      if (a) while (++i < n) buckets[i] = a[i];\n      else while (++i < n) buckets[i] = 0;\n      this._locations = [];\n    }\n  }\n\n  // See http://willwhim.wpengine.com/2011/09/03/producing-n-hash-functions-by-hashing-only-once/\n  BloomFilter.prototype.locations = function(v) {\n    var k = this.k,\n        m = this.m,\n        r = this._locations,\n        a = fnv_1a(v),\n        b = fnv_1a(v, 1576284489), // The seed value is chosen randomly\n        x = a % m;\n    for (var i = 0; i < k; ++i) {\n      r[i] = x < 0 ? (x + m) : x;\n      x = (x + b) % m;\n    }\n    return r;\n  };\n\n  BloomFilter.prototype.add = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) buckets[Math.floor(l[i] / 32)] |= 1 << (l[i] % 32);\n  };\n\n  BloomFilter.prototype.test = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) {\n      var b = l[i];\n      if ((buckets[Math.floor(b / 32)] & (1 << (b % 32))) === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Estimated cardinality.\n  BloomFilter.prototype.size = function() {\n    var buckets = this.buckets,\n        bits = 0;\n    for (var i = 0, n = buckets.length; i < n; ++i) bits += popcnt(buckets[i]);\n    return -this.m * Math.log(1 - bits / this.m) / this.k;\n  };\n\n  // Turns the bloom filter into a buffer for later storage.\n  BloomFilter.prototype.serialize = function() {\n    // The format is the number of hashes as a uint16, followed by the buckets\n    // data as big endian int32's\n    var bucketLen = this.buckets.length,\n      target = new Buffer((bucketLen << 2) + 2);\n    target.writeUInt16BE(this.k, 0);\n\n    for (var i = 0; i < bucketLen; ++i) {\n      target.writeInt32BE(this.buckets[i], (i << 2) + 2);\n    }\n\n    return target;\n  };\n\n  // Parses a buffer created by a previous call to .serialize into a BloomFilter\n  BloomFilter.deserialize = function(data) {\n    var hashes = data.readUInt16BE(0),\n      count = (data.length - 2) >> 2,\n      buckets = typedArrays ? new Int32Array(count) : new Array(count);\n\n    for (var i = 0; i < count; ++i) {\n      buckets[i] = data.readInt32BE((i << 2) + 2);\n    }\n\n    return new BloomFilter(buckets, hashes);\n  };\n\n  BloomFilter.bytesToString = function(arr) {\n  var out = '';\n  for (let i = 0; i < arr.length; i += 2) {\n    out += String.fromCharCode((arr[i] << 8) | arr[i + 1]);\n  }\n  return out;\n}\n\n  BloomFilter.stringToBytes = function(str) {\n    const arr = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      let code = String.fromCharCode(str[i]);\n      arr[i * 2 + 0] = code >> 8;\n      arr[i * 2 + 1] = code;\n    }\n    return arr;\n  }\n\n  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\n  function popcnt(v) {\n    v -= (v >> 1) & 0x55555555;\n    v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\n    return ((v + (v >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\n  }\n\n  // Fowler/Noll/Vo hashing.\n  // Nonstandard variation: this function optionally takes a seed value that is incorporated\n  // into the offset basis. According to http://www.isthe.com/chongo/tech/comp/fnv/index.html\n  // \"almost any offset_basis will serve so long as it is non-zero\".\n  function fnv_1a(v, seed) {\n    var a = 2166136261 ^ (seed || 0);\n    for (var i = 0, n = v.length; i < n; ++i) {\n      var c = v.charCodeAt(i),\n          d = c & 0xff00;\n      if (d) a = fnv_multiply(a ^ d >> 8);\n      a = fnv_multiply(a ^ c & 0xff);\n    }\n    return fnv_mix(a);\n  }\n\n  // a * 16777619 mod 2**32\n  function fnv_multiply(a) {\n    return a + (a << 1) + (a << 4) + (a << 7) + (a << 8) + (a << 24);\n  }\n\n  // See https://web.archive.org/web/20131019013225/http://home.comcast.net/~bretm/hash/6.html\n  function fnv_mix(a) {\n    a += a << 13;\n    a ^= a >>> 7;\n    a += a << 3;\n    a ^= a >>> 17;\n    a += a << 5;\n    return a & 0xffffffff;\n  }\n})(typeof exports !== \"undefined\" ? exports : this);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wordcastlogo_white.c4dcc4ed.svg\";"],"sourceRoot":""}