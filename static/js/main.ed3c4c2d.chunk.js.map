{"version":3,"sources":["wordcastlogo_white.svg","App.js","bloomfilter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CancelToken","axios","CHANNEL","source","SquareData","x","y","type","Object","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","selected","letter","tempLetter","Player","name","id","androidId","score","letters","Array","turns","clientIndex","Letter","value","App","props","context","_this","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","_handleKeyDown","e","keyCode","moveCursor","state","width","height","players","gameState","cursorLocation","curTurn","turnCount","noScoreCount","isFirstLetterDown","langIndex","isDict","isLoadingDict","loadingProgress","originTempSquare","originAxis","specialCoords","curDict","setUpBoard","handleMessage","bind","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","updateDimensions","componentDidMount","addPlayer","updateSenders","gameGrid","i","ii","letterPool","length","result","charactersLength","charAt","Math","floor","random","_this2","initializeLetterPool","path","Distributions","dictPath","fetch","then","r","text","splitDictRaw","split","console","log","splitDict","bloom","BloomFilter","nIndex","item","toLowerCase","indexOf","normalize","replace","substr","push","add","require","falsecount","truecount","test","gib","makeid","percentage1","percentage2","testtrue","testfalse","blob","serialize","string","toString","buffer","Buffer","from","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","deserialize","_this3","addEventListener","_setTimeout","b","ctx","cast","framework","CastReceiverContext","getInstance","options","CastReceiverOptions","maxInactivity","customNamespaces","assign","system","MessageType","JSON","addCustomMessageListener","customEvent","data","senderId","EventType","SENDER_CONNECTED","event","SENDER_DISCONNECTED","handleDisconnect","start","message","connectedSenders","getSenders","debugstring","debugOnScreen","sendToast","undefined","splice","setState","msg","sendState","sendHurryUp","startGame","switchLanguage","index","switchDict","cancelDictDownload","cancelGame","dir","placeLetter","jokerValue","endTurn","swapLetters","swapIndices","resetTempLetters","json","player","sendJoinSuccess","sendCustomMessage","sendPlayerLetters","sendGameStarted","endGame","content","cancel","_this4","dist","dictStatus","total","dictSize","get","cancelToken","c","onDownloadProgress","progressEvent","percent","loaded","response","catch","err","rand","prevLetter","stringify","endTurnNoScore","targetPlayer","playersSorted","slice","sort","scores","scoresString","nextTurn","tempSquares","getTempSquares","bonusScore","words","wordStrings","isConnected","adjSquares","getAdjSquares","word","getAdjWord","duplicateFound","iii","every","wordString","w","check","checkWords","illegalWords","illegalString","totalScore","turnLog","wordMultiplier","square","letterScore","drawLetters","isEmpty","playerLetters","includes","isTurn","turnName","adjSquare","curSquare","posEndFound","negEndFound","originFound","nextSquares","nextSquare","nextX","nextY","curLetter","isLegal","offset","drawLettersInit","playerIndex","turnLogJson","availableLetters","diff","newPlayers","newPlayer","langs","dictInfo","innerWidth","innerHeight","line","_this5","react__WEBPACK_IMPORTED_MODULE_6___default","className","map","renderSquare","isSelected","Square","isLobby","_this6","classname","winstring","max","maxindex","noScoreString","playersTitle","renderPlayer","isBorder","progress","language","progresstext","style","_this7","scale","min","transform","renderSquareLine","renderRightInfo","renderLeftInfo","src","wordcastlogo","renderProgressBar","Component","_React$Component","_this8","multiplierText","multiplierNum","isLetter","isTempLetter","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__","key","nextProps","oldSelect","multiplierclassname","letterStyle","marginLeft","margin","React","fnv_1a","typedArrays","ArrayBuffer","m","k","n","ceil","kbytes","LN2","array","Uint8Array","Uint16Array","Uint32Array","kbuffer","buckets","Int32Array","_locations","popcnt","v","seed","charCodeAt","d","fnv_multiply","fnv_mix","prototype","locations","l","size","bits","bucketLen","target","writeUInt16BE","writeInt32BE","hashes","readUInt16BE","count","readInt32BE","bytesToString","arr","out","String","fromCharCode","stringToBytes","str","code","Boolean","location","hostname","match","ReactDOM","render","react_default","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed3c4c2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wordcastlogo_white.c4dcc4ed.svg\";","import React,  { Component, TimeUnit } from 'react';\nimport ReactDOM from \"react-dom\";\nimport wordcastlogo from './wordcastlogo_white.svg';\nimport './App.css';\nimport Distributions from \"./Distributions.json\";\n\n\nimport BloomFilter from \"./bloomfilter.js\";\n\nimport axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\n\nvar CHANNEL = 'urn:x-cast:com.github.minosvasilias.wordcast';\n\nclass SquareData{\n  constructor(x, y, type) {\n    this.x = x;\n    this.y = y;\n    this.type = type; //0 = NORMAL, 1 = LETTER X2, 2 = LETTER X3, 3 = WORD X2, 4 = WORD X3, 5 = START\n    this.selected = false;\n    this.letter = null;\n    this.tempLetter = null;\n  }\n}\nclass Player{\n  constructor(name, id, androidId) {\n    this.name = name;\n    this.id = id;\n    this.androidId = androidId;\n    this.score = 0;\n    this.letters = new Array();\n    this.turns = new Array();\n    this.clientIndex = 0;\n  }\n}\n\nclass Letter{\n  constructor(value, score) {\n    this.value = value;\n    this.score = score;\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      players: {},\n      gameState : 0,//0 = JOINING, 1 = RUNNING, 2 = FINISH\n      cursorLocation: [7,7],\n      curTurn: 0,\n      turnCount: 0,\n      noScoreCount: 0,\n      isFirstLetterDown: false,\n      langIndex: 0,\n      isDict: false,\n      isLoadingDict: false,\n      loadingProgress: 0.0,\n\n    };\n    this.originTempSquare = null;\n    this.originAxis = [-1,-1];\n\n\n    /*this.gameGrid[7][7].letter = new Letter(\"G\",2);\n    this.gameGrid[4][7].letter = new Letter(\"P\",2);\n    this.gameGrid[8][8].letter = new Letter(\"U\",2);*/\n\n    this.specialCoords = [\n      //LX2\n      [[0,3],[0,11],[2,6],[2,8],\n      [3,0],[3,7],[3,14],\n      [6,6],[6,8],[6,12],[6,2],\n      [7,3],[7,11],\n      [8,6],[8,8],[8,12],[8,2],\n      [11,0],[11,7],[11,14],\n      [14,3],[14,11],[12,6],[12,8]],\n      //LX3\n      [[1,5],[1,9],\n      [5,1],[5,5],[5,9],[5,13],\n      [9,1],[9,5],[9,9],[9,13],\n      [13,5],[13,9]],\n      //WX2\n      [[1,1],[2,2],[3,3],[4,4],\n      [10,10],[11,11],[12,12],[13,13],\n      [13,1],[12,2],[11,3],[10,4],\n      [4,10],[3,11],[2,12],[1,13]],\n      //WX3\n      [[0,0],[0,7],[0,14],\n      [7,0],[7,14],\n      [14,0],[14,7],[14,14]],\n      //START SQUARE\n      [[7,7]]\n    ];\n\n    this.curDict = [null, null];\n\n    this.setUpBoard();\n\n    /*var dist = Distributions[1];\n    var total = dist.dictSize;\n    let cancel;\n    axios.get(dist.dictPath, {\n      cancelToken: new CancelToken(function executor(c) {\n        cancel = c;\n      }),\n      onDownloadProgress: (progressEvent) => {\n\n        var percent = progressEvent.loaded / total;\n        this.setState({loadingProgress: percent});\n      }\n    })\n    //.then((response) => response.text())\n    .then((response) => {\n      console.log(response);\n      //PARSE TXT INTO ARRAY\n      var splitDict = response.data.split(\"\\n\");\n      for(var i = 0; i < splitDict.length; i++){\n        var item = splitDict[i].toLowerCase();\n        var item = item.substring(0, item.length-1);\n        splitDict[i] = item;\n      }\n\n        console.log(\"LOADED DICT\");\n          console.log(splitDict);\n      this.curDict = [Distributions[langIndex].name, splitDict];\n      this.setState({isLoadingDict: false, loadingProgress: 0.0});\n    })\n    .catch((err) => {\n      this.sendToast(\"LOAD FAILED\", undefined);\n      this.sendToast(err, undefined);\n      this.setState({isLoadingDict: false, loadingProgress: 0.0});\n      var json = {\"msg\":\"DICTLOADEND\"};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n      this.setState({isDict: false});\n      var json = {\"msg\":\"DICT\",\"isDict\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    })*/\n\n    //this.setUpBloom();\n\n\n    /*var letters = [\n      //0 POINTS\n      [[\"\",2]],\n      //1 POINT\n      [[\"E\",12],\n      [\"A\",9], [\"I\",9], [\"O\",8],\n      [\"N\",6], [\"R\",6], [\"T\",6],\n      [\"L\",4], [\"S\",4], [\"U\",4]],\n      //2 POINTS\n      [[\"D\",4], [\"G\",3]],\n      //3 POINTS\n      [[\"B\",2], [\"C\",2], [\"M\",2], [\"P\",2]],\n      //4 POINTS\n      [[\"F\",2], [\"H\",2], [\"V\",2], [\"W\",2], [\"Y\",2]],\n      //5 POINTS\n      [[\"K\",1]],\n      //6 POINTS\n      [],\n      //7 POINTS\n      [],\n      //8 POINTS\n      [[\"J\",1], [\"X\",1]],\n      //9 POINTS\n      [],\n      //10 POINTS\n      [[\"Q\",1], [\"Z\",1]]\n    ];*/\n\n\n\n\n    this.state.players = new Array();\n\n    this.handleMessage = this.handleMessage.bind(this);\n    this.moveCursor = this.moveCursor.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addPlayer = this.addPlayer.bind(this);\n    this.updateSenders = this.updateSenders.bind(this);\n\n  }\n  setUpBoard(){\n    this.gameGrid = new Array(15);\n    for(var i = 0; i < 15; i++){\n      this.gameGrid[i] = new Array(15);\n      for(var ii = 0; ii < 15; ii++){\n        this.gameGrid[i][ii] =  new SquareData(i,ii,0);\n      }\n    }\n\n    this.letterPool = new Array();\n\n    for(var i = 0; i < this.specialCoords.length; i++){\n      for(var ii = 0; ii < this.specialCoords[i].length; ii++){\n        this.gameGrid[this.specialCoords[i][ii][0]][this.specialCoords[i][ii][1]].type = i+1;\n      }\n    }\n  }\n  makeid(length) {\n   var result           = '';\n   var characters       = 'öäüabcdefghijklmnopqrstuvwxyz';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n }\n setUpBloom(){\n\n      //FIRST, SET INDEX OF DISTRIBUTION\n      var distIndex = 3;\n      var testtruestring = \"alfeñicare\";//SPANISH\"alfeñicaré\";\n      var testfalsestring = \"blobsy\";\n\n      this.state.langIndex = distIndex;\n      this.initializeLetterPool();\n      var path = Distributions[this.state.langIndex].dictPath;\n\n   ////////////////////////////\n       let dict;\n       fetch(path)\n       .then((r) => r.text())\n       .then(text  => {\n         //console.log(text);\n         var splitDictRaw = text.split(\"\\n\");\n         console.log(splitDictRaw);\n         var splitDict = new Array();\n\n         var bloom = new BloomFilter.BloomFilter(\n           5975973,//ITALIAN 14898389,//FRENCH 5072222,//ENGLISH 8868648 ,//GERMAN 32000000,//28755176,//25869786,//16284727,//8192 * 256,//32768 * 256,//32 * 256, // number of bits to allocate.\n           17//ITALIAN 16//FRENCH 17//ENGLISH 17//GERMAN11//10//9//6//16        // number of hash functions.\n         );\n         //var trie = new Trie();\n         //console.log(JsSuffixTrie);\n         //var trie = new JsSuffixTrie();\n\n         // Add some elements to the filter.\n         for(var i = 0; i < splitDictRaw.length; i++){\n           var item = splitDictRaw[i].toLowerCase();\n\n           //TRIM (CAREFUL, ONLY GERMAN AND ENGLISH SO FAR!)\n           //item = item.substring(0, item.length-1);\n\n           //REMOVE DIACRITICS ETC EXCEPT ñ\n           var nIndex = item.indexOf(\"ñ\");\n           item = item.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n           if(nIndex != -1){\n            item = item.substr(0, nIndex) + \"ñ\" + item.substr(nIndex + 1);\n          }\n\n\n           var doAdd = true;\n           /*for(var i = 0; i < item.length; i++){\n             var char = item.charAt(i);\n             if(!this.availableLetters.includes(char)){\n               doAdd = false;\n             }\n           }*/\n\n           if(doAdd){\n             splitDict.push(item);\n             //splitDict[i] = item;\n             bloom.add(item);\n           }\n           //trie.add(item);\n         }\n\n\n         console.log(\"DICT LENGTH: \" + splitDict.length);\n         console.log(splitDict);\n\n               // check contains method\n               //console.log(trie.contains(\"arbeit\"));  // true\n               //console.log(trie.contains(\"fhqap\")); // false\n\n\n               var util = require('util');\n               //var json = util.inspect(trie);\n\n         //var array = [].slice.call(trie.children),\n           //var  json = JSON.stringify(trie);\n         //console.log(json);\n\n         //TMP JSON SAVING\n         /*var json = trie.toJSON();\n         json = JSON.stringify(splitDict);\n         console.log(json);\n         var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         var falsecount = 0;\n         var truecount = 0;\n         for(var i = 0; i < splitDict.length; i++){\n           var item = splitDict[i];\n           var test = bloom.test(item);\n\n           var gib = this.makeid(6);\n           var test2 = bloom.test(gib);\n           if(!test){\n             falsecount += 1;\n             //console.log(gib);\n           }\n           if(test2){\n             truecount += 1;\n             //console.log(gib);\n           }\n         }\n         /*if(splitDict.includes('jäger')){\n           console.log(\"AAARBEIT\");\n         }*/\n         //console.log(splitDict[101069].toLowerCase());\n         console.log(\"FALSE NEGATIVES: \" + falsecount);\n         console.log(\"FALSE POSITIVES: \" + truecount);\n         var percentage1 = (falsecount / splitDict.length) * 100;\n         var percentage2 = (truecount / splitDict.length) * 100;\n         console.log(\"FALSE NEGATIVES PERCENT: \" + percentage1);\n         console.log(\"FALSE POSITIVES PERCENT: \" + percentage2);\n         // Test if an item is in our filter.\n         // Returns true if an item is probably in the set,\n         // or false if an item is definitely not in the set.\n\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         // Serialisation. Note that bloom.buckets may be a typed array,\n         // so we convert to a normal array first.\n         /*var array = [].slice.call(bloom.buckets),\n             json = JSON.stringify(array);\n         console.log(json);*/\n\n         //ALTERNATIVE SERIALIZATION\n         var blob = bloom.serialize();\n         //json = BloomFilter.BloomFilter.bytesToString(blob);\n         //console.log(enc.decode(blob));\n         console.log(blob);\n\n\n         /*var enc = new TextDecoder(\"utf-8\");\n         var encodedblob = enc.decode(blob);\n         var enc2 = new TextEncoder(\"utf-8\");\n         var blob2 = enc2.encode(encodedblob);\n         console.log(blob2);*/\n\n         let string = blob.toString('utf16le');\n         let buffer = Buffer.from(string, 'utf16le');\n         console.log(buffer);\n\n         // Function to download data to a file\n         var data = string;\n         var filename = \"test\";\n         var type = \".json\";\n         var file = new Blob([data], {type: type});\n         if (window.navigator.msSaveOrOpenBlob) // IE10+\n             window.navigator.msSaveOrOpenBlob(file, filename);\n         else { // Others\n             var a = document.createElement(\"a\"),\n                     url = URL.createObjectURL(file);\n             a.href = url;\n             a.download = filename;\n             document.body.appendChild(a);\n             a.click();\n             setTimeout(function() {\n                 document.body.removeChild(a);\n                 window.URL.revokeObjectURL(url);\n             }, 0);\n         }\n\n         //console.log(json);\n\n\n         var bloom = BloomFilter.BloomFilter.deserialize(blob);\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         fetch('/french.bloom')\n         .then((r) => r.text())\n         .then(text  => {\n           //var enc = new TextEncoder(\"utf-16\");\n           //var blob = enc.encode(json);\n           var blob = Buffer.from(text, 'utf16le');\n           //var blob = BloomFilter.BloomFilter.stringToBytes(text);\n             console.log(blob);\n           var bloom = BloomFilter.BloomFilter.deserialize(blob);\n           var testtrue = bloom.test(testtruestring);\n           var testfalse = bloom.test(testfalsestring);\n           console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         });\n         //TMP JSON SAVING\n         /*var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         // Deserialisation. Note that the any array-like object is supported, but\n         // this will be used directly, so you may wish to use a typed array for\n         // performance.\n         //var bloom = new BloomFilter(array, 16);*/\n       });\n }\n\n\n\n\n\n\n\n\n\n\n _handleKeyDown = (e) => {\n     if (e.keyCode === 38) {\n      this.moveCursor(\"UP\");\n    } else if (e.keyCode === 40) {\n     this.moveCursor(\"DOWN\");\n    }\n }\n\n\n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n\n\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n\n    //PREVENT TIMEOUT\n    window._setTimeout = window.setTimeout;\n    window.setTimeout = function(a, b) {\n        // disable setTimeout so chromecast won't kill us after 5 minutes...\n    };\n\n    //LOAD CAST LOGIC\n\n    this.ctx = window.cast.framework.CastReceiverContext.getInstance();\n    var options = new window.cast.framework.CastReceiverOptions();\n    options.maxInactivity = 3600; //Development only\n\n\n    options.customNamespaces = Object.assign({});\n    options.customNamespaces[CHANNEL] = window.cast.framework.system.MessageType.JSON;\n\n    var handleMessage = this.handleMessage;\n    this.ctx.addCustomMessageListener(CHANNEL, function(customEvent) {\n        handleMessage(customEvent.data, customEvent.senderId, customEvent.data.id);\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_CONNECTED,\n        event => {\n        //CONNECT\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_DISCONNECTED,\n        event => {\n        this.handleDisconnect(event.senderId);\n    });\n    this.ctx.start(options);\n\n    //this.updateSenders();\n\n\n  }\n\n  debugOnScreen(message){\n    //document.getElementById(\"content\").innerHTML = message;\n    console.log(message);\n  }\n\n  updateSenders(id){\n    this.connectedSenders = this.ctx.getSenders();\n    var debugstring = \"\";\n    for(var i = 0; i < this.connectedSenders.length; i++){\n      debugstring += this.connectedSenders[i].id + \", \";\n    }\n    this.debugOnScreen(\"MESSAGE RECEIVED FROM ID: \" + id + \" - CONNECTED IDS: \" + debugstring);\n  }\n\n  handleDisconnect(id){\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].id == id){\n        if(this.state.gameState == 0){\n          this.sendToast(this.state.players[i].name + \" disconnected\", undefined);\n          this.state.players.splice(i, 1);\n          this.setState({players: this.state.players})\n        }\n      }\n    }\n  }\n\n  handleMessage(msg, id, androidId){\n    this.updateSenders(id);\n    if(msg.msg == \"STATE\"){\n        this.sendState(id, androidId);\n    }\n    if(msg.msg == \"HURRYUP\"){\n        this.sendHurryUp();\n    }\n    //LOBBY ONLY\n    if(this.state.gameState == 0){\n      if(msg.msg == \"JOIN\"){\n          this.addPlayer(msg.name, id, androidId);\n      }\n      if(msg.msg == \"STARTGAME\"){\n          this.startGame();\n      }\n      if(msg.msg == \"LANGUAGE\"){\n          this.switchLanguage(msg.index);\n      }\n      if(msg.msg == \"DICT\"){\n          this.switchDict(msg.isDict);\n      }\n      if(msg.msg == \"DICTLOADCANCEL\"){\n          this.cancelDictDownload();\n      }\n    }\n    if(msg.msg == \"CANCEL\"){\n        this.cancelGame();\n    }\n    //CURRENT PLAYER ONLY\n    if(this.state.players.length == 0 || this.state.gameState != 1)\n      return;\n    if(id != this.state.players[this.state.curTurn].id)\n      return;\n    if(msg.msg == \"MOVE\"){\n        this.moveCursor(msg.dir);\n    }\n    if(msg.msg == \"PLACE\"){\n      this.placeLetter(msg.index, msg.jokerValue, id);\n    }\n    if(msg.msg == \"ENDTURN\"){\n        this.endTurn(id);\n    }\n    if(msg.msg == \"SWAP\"){\n        this.swapLetters(msg.swapIndices, id);\n    }\n    if(msg.msg == \"RESET\"){\n        this.resetTempLetters();\n    }\n  }\n\n  sendState(id, androidId){\n    var json;\n\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n      }\n    }\n\n    if(this.state.gameState == 0){\n      if(player != null){\n        player.id = id;\n        this.sendJoinSuccess(player);\n        return;\n      }else{\n        json = {\"msg\":\"NAME\"};\n        this.ctx.sendCustomMessage(CHANNEL , id,  json);\n        return;\n      }\n    }\n    else if(this.state.gameState == 1){\n\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        //RESET LETTERS IF ITS REJOINING PLAYERS TURN IN ORDER TO AVOID UI MESS\n        if(player.androidId == this.state.players[this.state.curTurn].androidId){\n          this.resetTempLetters();\n        }else{\n          this.sendPlayerLetters(player);\n        }\n        this.sendGameStarted(player);\n        return;\n      }\n    }\n    else if(this.state.gameState == 2){\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        this.endGame(player);\n        return;\n      }\n    }\n    json = {\"msg\":\"GAMEONGOING\"};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n\n\n  }\n\n  sendToast(content, id){\n    var json = {\"msg\":\"TOAST\",\"content\":content};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n  }\n\n  cancelGame(){\n    this.setState({gameState: 0, cursorLocation: [7,7], curTurn: 0,\n                  turnCount: 0, noScoreCount: 0, isFirstLetterDown: false});\n    this.setUpBoard();\n\n    for(var i = 0; i < this.state.players.length; i++){\n      this.state.players[i].score = 0;\n      this.state.players[i].letters = new Array();\n      this.state.players[i].turns = new Array();\n      this.sendState(this.state.players[i].id, this.state.players[i].androidId);\n    }\n  }\n\n  cancelDictDownload(){\n    if(this.cancel != null){\n      this.cancel();\n      delete this.curDict;\n    }\n  }\n\n  switchDict(isDict){\n    if(this.state.gameState != 0){\n      return;\n    }\n    this.setState({isDict: isDict});\n    var json = {\"msg\":\"DICT\",\"isDict\":isDict};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n\n\n    /*fetch('dicts/german.js')\n      .then((response) => {\n        this.sendToast(\"LOADED DICT\", undefined);\n      })\n      .catch((err) => {\n          this.sendToast(\"LOAD FAILED\", undefined);\n      })*/\n\n\n    if(isDict){\n      var langIndex = this.state.langIndex;\n      if(this.curDict == undefined || this.curDict[0] != Distributions[langIndex].name){\n        delete this.curDict;\n\n\n        var dist = Distributions[langIndex];\n        if(dist.dictStatus != 1 || this.state.isLoadingDict)\n          return;\n\n        var json = {\"msg\":\"DICTLOADSTART\"};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        this.setState({isLoadingDict: true});\n        var total = dist.dictSize;\n        let cancel;\n        axios.get(dist.dictPath, {\n          cancelToken: new CancelToken(function executor(c) {\n            cancel = c;\n          }),\n          onDownloadProgress: (progressEvent) => {\n            //this.state.players[0].name = progressEvent.loaded;\n            var percent = progressEvent.loaded / total;\n            this.setState({loadingProgress: percent});\n          }\n        })\n        //.then((response) => response.text())\n        .then((response) => {\n          //PARSE TXT INTO ARRAY\n          //OLD NON BLOOM WAY\n          /*var splitDict = response.data.split(\"\\n\");\n          for(var i = 0; i < splitDict.length; i++){\n            var item = splitDict[i].toLowerCase();\n            var item = item.substring(0, item.length-1);\n            splitDict[i] = item;\n          }*/\n          //BLOOM\n          var blob = Buffer.from(response.data, 'utf16le');\n          var bloom = BloomFilter.BloomFilter.deserialize(blob);\n\n          this.sendToast(\"LOADED DICTIONARY\", undefined);\n          this.curDict = [Distributions[langIndex].name, bloom];\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        .catch((err) => {\n          this.sendToast(\"LOAD FAILED\", undefined);\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n          this.setState({isDict: false});\n          var json = {\"msg\":\"DICT\",\"isDict\":false};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        this.cancel = cancel;\n      }\n\n    }\n\n\n    //https://4a6ce73f.ngrok.io/german.js\n\n    /*import(\"./german.js\").then(german => {\n      this.sendToast(german.dict.length, undefined);\n    });*/\n\n    //var test = await import('./german.js');\n    //this.sendToast(test.dict.length, undefined);\n\n  }\n\n  switchLanguage(index){\n    if(index != this.state.langIndex){\n      this.setState({langIndex: index});\n      var json = {\"msg\":\"LANGUAGE\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n      this.setState({isDict: false});\n      var json = {\"msg\":\"DICT\",\"isDict\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  sendHurryUp(){\n    var json = {\"msg\":\"HURRYUP\"};\n    var player = this.state.players[this.state.curTurn];\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  swapLetters(swapIndices, id){\n    if(this.letterPool.length < 7){\n      this.sendToast(\"You can't swap with less than 7 letters left in the pool!\", id);\n      return;\n    }\n    if(swapIndices.length == 0){\n      this.sendToast(\"You must select at least one letter to swap!\", id);\n      return;\n    }\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    var swapLetters = new Array();\n    for(var i = 0; i < swapIndices.length; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      var prevLetter = player.letters[swapIndices[i]];\n      swapLetters.push(prevLetter);\n\n      player.letters[swapIndices[i]] = letter;\n      this.letterPool.splice(rand, 1);\n    }\n    //ONLY ADD OLD LETTER TO POOL AFTER ALL NEW ONES ARE DRAWN\n    for(var i = 0; i < swapLetters.length; i++){\n      this.letterPool.push(swapLetters[i]);\n    }\n\n    this.setState({players: this.state.players});\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n    this.endTurnNoScore(id);\n  }\n\n  endGame(targetPlayer){\n    this.setState({gameState: 2});\n    //this.sendToast(\"GAMEENDED\", undefined);\n\n    var playersSorted = this.state.players.slice();\n    playersSorted.sort(function(a, b){\n        return a.score - b.score;\n    });\n    var scores = new Array();\n    for(var i = 0; i < playersSorted.length; i++){\n      scores.push({\"name\": playersSorted[i].name, \"score\":playersSorted[i].score});\n      playersSorted[i].clientIndex = i;\n    }\n    for(var i = 0; i < playersSorted.length; i++){\n      var player = playersSorted[i];\n      if(targetPlayer != null && player.androidId == targetPlayer.androidId ||\n        targetPlayer == null){\n          var scoresString = JSON.stringify(scores);\n          var json = {\"msg\":\"GAMEENDED\", \"clientIndex\":player.clientIndex, \"scores\":scoresString};\n          this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n      }\n\n    }\n  }\n\n  endTurnNoScore(id){\n    var noScoreCount = this.state.noScoreCount + 1;\n    this.state.players[this.state.curTurn].turns.push([]);\n    this.setState({noScoreCount: noScoreCount});\n\n    if(noScoreCount < 6){\n      this.nextTurn();\n    }else{\n      this.endGame(null);\n    }\n  }\n\n  endTurn(id){\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n        this.endTurnNoScore(id);\n        return;\n\n    }\n    var bonusScore = 0;\n    if(tempSquares.length == 7){\n      bonusScore = 50;\n    }\n    //FIND WORDS TO SCORE\n    var words = new Array();\n    var wordStrings = new Array();\n    var mainWord = null;\n    var isConnected = false;\n    for(var i = 0; i < tempSquares.length; i++){\n      var adjSquares = this.getAdjSquares(tempSquares[i]);\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(adjSquares[ii].letter != null)\n            isConnected = true;\n          //TRACE TEMPLETTER WORD\n          var word = this.getAdjWord(adjSquares[ii],tempSquares[i]).word;\n\n          word.sort(function(a, b){\n            if(a.x != b.x){\n              return a.x - b.x;\n            }\n            else{\n              return a.y - b.y;\n            }\n          });\n\n          //CHECK FOR DUPLICATE\n          var duplicateFound = false;\n          for(var iii = 0; iii < words.length; iii++){\n            if(word.length === words[iii].length && word.every(function(value, index) { return value === words[iii][index]})){\n              duplicateFound = true;\n            }\n          }\n          if(!duplicateFound){\n            words.push(word);\n            //FORM WORD STRING\n            var wordString = \"\";\n            for(var w = 0; w < word.length; w++){\n              if(word[w].letter != null)\n                wordString += word[w].letter.value;\n              if(word[w].tempLetter != null)\n                wordString += word[w].tempLetter.value;\n            }\n            wordStrings.push(wordString);\n          }\n          //mainWord = word;\n\n        }\n      }\n    }\n    if(!isConnected && this.state.isFirstLetterDown){\n      this.resetTempLetters();\n      this.sendToast(\"Word must connect to already existing one!\", id);\n      return;\n    }\n\n    //FIRST TURN MAY JUST BE ONE LETTER\n    if(tempSquares.length == 1 && !this.state.isFirstLetterDown){\n      var word = new Array();\n      word.push(tempSquares[0]);\n      words.push(word);\n    }\n\n    //CHECK DICT IF ENABLED\n    if(this.state.isDict){\n      var check = this.checkWords(wordStrings);\n      var illegalWords = check.illegalWords;\n      if(illegalWords.length > 0){\n        this.resetTempLetters();\n        this.sendToast(check.illegalString, id);\n        return;\n      }\n    }\n\n    //words.push(mainWord);\n\n    //this.debugOnScreen(\"MAIN WORD: \" + mainWord.toString());\n    /*var finalWords = new Array();\n    for(var i = 0; i < words.length; i++){\n      var array1 = words[i];\n      var duplicateFound = false;\n      for(var ii = 0; ii < words.length; ii++){\n        if(ii != i){\n          var array2 = words[ii];\n          /*if(array1.length == array2.length){\n            for(var iii = 0; iii < array1.length; iii++){\n              if(array1[iii] == array2[iii])\n            }\n          }\n          if(array1.length === array2.length && array1.every(function(value, index) { return value === array2[index]})){\n            duplicateFound = true;\n          }\n        }\n      }\n      if(!duplicateFound){\n        finalWords.push(words[i]);\n      }\n    }*/\n\n    //VALIDATE TEMPSQUARES BEFORE SCORING\n    /*for(var i = 0; i < tempSquares.length; i++){\n      tempSquares[i].letter = tempSquares[i].tempLetter;\n      tempSquares[i].tempLetter = null;\n    }*/\n\n    //SCORE WORDS\n    var totalScore = 0;\n    var turnLog = new Array();\n    var debugstring = \"\";\n    for(var w = 0; w < words.length; w++){\n      debugstring += \" --- WORD: \";\n      var word = words[w];\n      var score = 0;\n      var wordMultiplier = 1;\n      var wordString = \"\";\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.tempLetter != null){\n          square.letter = square.tempLetter;\n          square.tempLetter = null;\n        }\n        var letterScore = 0;\n        if(square.type == 1){\n          letterScore = square.letter.score * 2;\n        }\n        else if(square.type == 2){\n          letterScore = square.letter.score * 3;\n        }\n        else{\n          letterScore = square.letter.score;\n        }\n        score += letterScore;\n        debugstring += square.letter.value + \"(\"+letterScore+\")-\";\n        wordString += square.letter.value;\n        if(square.letter.value == \"\"){\n          wordString += \"_\";\n        }\n        //ACCOUNT FOR PROBABLY IMPOSSIBLE SCENARIO OF BOTH WORD MULTIPLIERS USED\n        if(square.type == 3 || square.type == 5){\n          wordMultiplier = wordMultiplier * 2;\n        }\n        if(square.type == 4){\n          wordMultiplier = wordMultiplier * 3;\n        }\n      }\n      score = score * wordMultiplier;\n      totalScore += score;\n      wordStrings.push(wordString);\n      turnLog.push([wordString,score]);\n      debugstring += \" SCORE: \" + score;\n    }\n\n\n\n\n    //APPLY SCORE\n    totalScore += bonusScore;\n    debugstring += \" --- BONUS: + \" + bonusScore + \" --- TOTAL: \" + totalScore;\n\n\n    //END NO SCORE STREAK\n    this.setState({noScoreCount: 0});\n    //IF VERY FIRST TURN IS A PASS, THIS MAKES SURE WE KNOW WHEN THE GAME REALLY STARTED\n    this.state.isFirstLetterDown = true;\n    this.state.players[this.state.curTurn].score += totalScore;\n\n    //CHANGE TYPE OF USED SQUARES TO ZERO: SPECIAL TYPES CAN ONLY BE USED ON THE TURN THEY ARE COVERED\n    for(var w = 0; w < words.length; w++){\n      var word = words[w];\n      for(var i = 0; i < word.length; i++){\n        word[i].type = 0;\n      }\n    }\n\n    //ADD TURN TO PLAYER HISTORY\n    this.state.players[this.state.curTurn].turns.push(turnLog);\n\n\n    // DEBUG\n    var dstring = \"\";\n    this.debugOnScreen(\"WORD SCORED: \" + debugstring);\n\n    this.drawLetters(this.state.players[this.state.curTurn]);\n\n    //CHECK FOR GAME END\n    var isEmpty = true;\n    var playerLetters = this.state.players[this.state.curTurn].letters;\n    for(var i = 0; i < playerLetters.length; i++){\n      if(playerLetters[i] != null){\n        isEmpty = false;\n      }\n    }\n    if(isEmpty)\n      this.endGame(null);\n\n    //SWITCH TURNS\n    this.nextTurn();\n  }\n\n  checkWords(words){\n    var bloom = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = bloom.test(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n      }\n      if(i != words.length-1){\n        illegalString += \", \";\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  checkWordsOLD(words){\n    var splitDict = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = splitDict.includes(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n      }\n      if(i != words.length-1){\n        illegalString += \", \";\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  nextTurn(){\n    var nextTurn = this.state.curTurn + 1;\n    var oldTurn = this.state.curTurn;\n    if(nextTurn >= this.state.players.length){\n      nextTurn = 0;\n    }\n    this.setState({turnCount: this.state.turnCount+1})\n    this.setState({curTurn:nextTurn});\n    for(var i = 0; i<this.state.players.length; i++){\n      var isTurn = nextTurn == i;\n      var turnName = this.state.players[nextTurn].name;\n      /*if(oldTurn == i && this.state.players[i].turns[this.state.players[i].turns.length-1] != null){\n        var turnLog = this.state.players[i].turns[this.state.players[i].turns.length-1];\n        var turnLogJson = JSON.stringify(turnLog);\n        var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":turnLogJson};\n      }\n      else{\n        var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":null};\n      }*/\n\n      var turnLogJson = JSON.stringify(this.state.players[i].turns);\n      var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":turnLogJson};\n      this.ctx.sendCustomMessage(CHANNEL , this.state.players[i].id,  json);;\n    }\n  }\n\n  getTempSquares(){\n    var tempSquares = new Array();\n    for(var i = 0; i < this.gameGrid.length; i++){\n      for(var ii = 0; ii < this.gameGrid[i].length; ii++){\n        var square = this.gameGrid[i][ii];\n        if(square.tempLetter != null){\n          tempSquares.push(square);\n        }\n      }\n    }\n    return tempSquares;\n  }\n\n  getAdjSquares(square){\n    var x = square.x;\n    var y = square.y;\n    var adjSquares = new Array();\n    if(x+1<15)\n      adjSquares.push(this.gameGrid[x+1][y]);\n    if(x-1>-1)\n      adjSquares.push(this.gameGrid[x-1][y]);\n    if(y+1<15)\n      adjSquares.push(this.gameGrid[x][y+1]);\n    if(y-1>-1)\n      adjSquares.push(this.gameGrid[x][y-1]);\n    return adjSquares;\n  }\n\n  getAdjWord(adjSquare, curSquare){\n    var dir = [adjSquare.x - curSquare.x, adjSquare.y - curSquare.y];\n    var posEndFound = false;\n    var negEndFound = false;\n    var originFound = false;\n    var word = new Array();\n    word.push(curSquare);\n    //START WITH CURRENT SQUARE FOR BOTH DIRECTIONS\n    var nextSquares = [curSquare,curSquare];\n    while(!posEndFound || !negEndFound){\n      //POSITIVE DIR\n      var nextX = nextSquares[0].x+dir[0];\n      var nextY = nextSquares[0].y+dir[1];\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[0] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          posEndFound = true;\n        }\n      }\n      else{\n        posEndFound = true;\n      }\n      //NEGATIVE DIR\n      nextX = nextSquares[1].x+(dir[0]*-1);\n      nextY = nextSquares[1].y+(dir[1]*-1);\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[1] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          negEndFound = true;\n        }\n      }\n      else{\n        negEndFound = true;\n      }\n    }\n    return {word : word, originFound : originFound}\n  }\n\n  placeLetter(index, jokerValue, id){\n    var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var curLetter = this.state.players[this.state.curTurn].letters[index];\n    var isLegal = true;\n    if(curSquare.letter != null || curSquare.tempLetter != null || curLetter == null){\n      isLegal = false;\n      this.sendToast(\"This square is already in use!\", id)\n    }\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n      this.originTempSquare = curSquare;\n      this.debugOnScreen(\"ORIGINTEMPSQUARE: \" + this.originTempSquare.x + \",\"+this.originTempSquare.y);\n\n    }\n    else if(tempSquares.length > 0){\n      var adjSquares = this.getAdjSquares(curSquare);\n      var originFound = false;\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(this.getAdjWord(adjSquares[ii], curSquare).originFound)\n            originFound = true;\n\n        }\n      }\n      if(!originFound){\n        isLegal = false;\n      }\n      else{\n\n        if(tempSquares.length == 1){\n          if(this.originTempSquare.x == curSquare.x){\n            this.originAxis = [curSquare.x,-1];\n          }else{\n            this.originAxis = [-1,curSquare.y];\n          }\n        }\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            isLegal = false;\n          }\n        }\n        this.debugOnScreen(\"ORIGIN FOUND! AXIS: \" + this.originAxis[0] +\",\" +this.originAxis[1]);\n\n      }\n    }\n\n\n    if(isLegal){\n      if(curLetter.value == \"\"){\n        curLetter.value = jokerValue;\n      }\n      curSquare.tempLetter = curLetter;\n      //this.debugOnScreen(\"PLACED LETTER: \" + curLetter + \" - \" + curLetter.value);\n      this.state.players[this.state.curTurn].letters[index] = null;\n      //this.state.players[this.state.curTurn].letters.splice(index,1);\n      this.setState({players: this.state.players});\n      var json = {\"msg\":\"PLACED\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n    }\n  }\n\n  resetTempLetters(){\n    var tempSquares = this.getTempSquares(false);\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    for(var i = 0; i < tempSquares.length; i++){\n      while(player.letters[i+offset] != null){\n        offset += 1;\n      }\n      if(tempSquares[i].tempLetter.score == 0){\n        tempSquares[i].tempLetter.value = \"\";\n      }\n      player.letters[i+offset] = tempSquares[i].tempLetter;\n      tempSquares[i].tempLetter = null;\n    }\n    this.setState({players: this.state.players});\n    this.sendPlayerLetters(player);\n  }\n\n  moveCursor(dir){\n    var x = this.state.cursorLocation[0];\n    var y = this.state.cursorLocation[1];\n    this.debugOnScreen(\"MOVING CURSOR \" + dir);\n    switch(dir){\n      case \"UP\":\n        y -= 1;\n        break;\n      case \"DOWN\":\n        y += 1;\n        break;\n      case \"LEFT\":\n        x -= 1;\n        break;\n      case \"RIGHT\":\n        x += 1;\n        break;\n      default:\n        break;\n    }\n    if(x > -1 && x < 15 && y > -1 && y < 15){\n      //this.state.players[0].name = dir;\n      //this.setState({players: this.state.players});\n      this.setState({cursorLocation:[x,y]});\n      this.debugOnScreen(\"MOVED CURSOR TO \"+ this.state.cursorLocation[0] + \",\" + this.state.cursorLocation[1]);\n    }\n\n  }\n\n  startGame(){\n    this.debugOnScreen(\"GAME STARTED\");\n\n    this.initializeLetterPool();\n    this.setState({cursorLocation:[7,7]});\n    for(var i = 0; i<this.state.players.length; i++){\n      var player = this.state.players[i];\n      this.drawLettersInit(player);\n      this.sendGameStarted(player);\n    }\n    this.setState({gameState:1});\n    /*var json = {\"msg\":\"GAMESTARTED\"};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);*/\n  }\n\n  sendGameStarted(player){\n    var playerIndex = -1;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == player.androidId){\n        playerIndex = i;\n      }\n    }\n    var isTurn = this.state.curTurn == playerIndex;\n    var turnName = this.state.players[this.state.curTurn].name;\n    var turnLogJson = JSON.stringify(this.state.players[playerIndex].turns);\n    var json = {\"msg\":\"GAMESTARTED\", \"isTurn\":isTurn, \"turnName\":turnName, \"letters\":this.availableLetters, \"turnLog\":turnLogJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  initializeLetterPool(){\n    var letters = Distributions[this.state.langIndex].dist;\n    this.letterPool = new Array();\n    this.availableLetters = new Array();\n    for(var i = 0; i < letters.length; i++){\n      if(letters[i].length > 0){\n        for(var ii = 0; ii < letters[i].length; ii++){\n          if(!this.availableLetters.includes(letters[i][ii][0]) && letters[i][ii][0] != \"\"){\n            this.availableLetters.push(letters[i][ii][0]);\n          }\n          for(var iii = 0; iii < letters[i][ii][1]; iii++){\n            var letter = new Letter(letters[i][ii][0],i);\n            this.letterPool.push(letter);\n          }\n        }\n      }\n    }\n    this.availableLetters.sort();\n    console.log(this.availableLetters);\n  }\n\n  sendPlayerLetters(player){\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n  drawLettersInit(player){\n    var diff = 7 - player.letters.length;\n    for(var i = 0; i < diff; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      this.letterPool.splice(rand, 1);\n      player.letters.push(letter);\n    }\n    this.sendPlayerLetters(player);\n  }\n  drawLetters(player){\n    for(var i = 0; i < 7; i++){\n      if(player.letters[i] == null){\n        if(this.letterPool.length != 0){\n          var rand = Math.floor(Math.random()*this.letterPool.length);\n          var letter = this.letterPool[rand];\n          player.letters[i] = letter;\n          this.letterPool.splice(rand, 1);\n        }\n      }\n    }\n    this.sendPlayerLetters(player);\n    //this.debugOnScreen(\"LETTERS DRAWN FOR \" + player.name + \": \" + JSON.stringify(json));\n  }\n\n  addPlayer(name, id, androidId){\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        return;\n      }\n    }\n\n    if(this.state.players.length > 4){\n      this.sendToast(\"Sorry, the maximum amount of players is \" + this.state.players.length, id);\n      return;\n    }\n\n    var newPlayers = this.state.players.slice();\n    var newPlayer = new Player(name, id, androidId);\n    newPlayers.push(newPlayer);\n    this.setState({players:newPlayers})\n    this.debugOnScreen(\"NEW PLAYER: \" + name + \", ID: \" + id);\n\n    this.sendJoinSuccess(newPlayer);\n  }\n\n  sendJoinSuccess(player){\n    //GET AVAILABLE LANGUAGES\n    var langs = new Array();\n    for(var i = 0; i < Distributions.length; i++){\n      langs.push({name:Distributions[i].name, dictStatus:Distributions[i].dictStatus, dictInfo:Distributions[i].dictInfo});\n    }\n    var langsJson = JSON.stringify(langs);\n    var json = {\"msg\":\"JOINSUCCESS\", \"langs\":langs, \"langIndex\":this.state.langIndex, \"isDict\":this.state.isDict, \"isLoadingDict\":this.state.isLoadingDict};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n\n  updateDimensions(){\n     this.setState({width: window.innerWidth, height: window.innerHeight});\n  }\n\n  renderSquareLine(line,i,cursorLocation){\n    return(\n      <div className=\"line\">\n        {line.map((square, i) => this.renderSquare(square, i,cursorLocation))}\n      </div>\n    )\n  }\n  renderSquare(square, i,cursorLocation){\n    var isSelected = false;\n    if(square.x == cursorLocation[0] && square.y == cursorLocation[1]){\n      isSelected = true;\n    }\n    return(\n      <Square square={square} i={i} isSelected={isSelected}></Square>\n    )\n  }\n\n  renderLeftInfo(){\n    return(\n      <div className=\"leftinfo\">\n        <div className=\"title\">\n          {\"Letters Remaining\"}\n        </div>\n        <div className=\"poolcount\">\n          {this.letterPool.length}\n        </div>\n      </div>\n    );\n  }\n  renderRightInfo(isLobby){\n    var classname = \"rightinfo\";\n    if(isLobby)\n      classname = \"lobbyinfo\";\n\n    var winstring = \"\";\n    if(this.state.gameState == 2){\n      var max = 0;\n      var maxindex = new Array();\n      for(var i = 0; i < this.state.players.length; i++){\n        var player = this.state.players[i];\n        if(player.score > max){\n          max = player.score;\n          maxindex.push(i);\n        }\n        else if(player.score == max){\n          maxindex.push(i);\n        }\n      }\n\n      if(maxindex.length == 1){\n        winstring = this.state.players[maxindex[0]].name + \" wins!\";\n      }\n      else{\n        winstring = \"Draw between \";\n        for(var i = 0; i < maxindex.length; i++){\n          winstring += this.state.players[maxindex[i]].name;\n          if(i == maxindex.length -1){\n            winstring += \"!\";\n          }else{\n            winstring += \" and \";\n          }\n        }\n\n      }\n    }\n    var noScoreString = \"\";\n    if(this.state.noScoreCount > 1 && this.state.noScoreCount < 6){\n      noScoreString = \"There have been no points scored in the past \" + this.state.noScoreCount + \" turns. The game will end after 6 consecutive turns of no scoring.\"\n    }\n    var playersTitle = \"Players\";\n    if(this.state.players.length == 0)\n      playersTitle = \"Waiting for players...\";\n    return(\n      <div className={classname}>\n        <div className=\"title\">\n          {playersTitle}\n        </div>\n        <div className=\"players\">\n          {this.state.players.map((player, i) => this.renderPlayer(player, i, isLobby))}\n        </div>\n        <div className=\"wintext\">\n          {winstring}\n        </div>\n        <div className=\"warning\">\n          {noScoreString}\n        </div>\n      </div>\n    );\n\n  }\n  renderPlayer(player,i, isLobby){\n    var isBorder = \"\";\n    if(i < this.state.players.length-1)\n      isBorder = \" border\";\n    if(isLobby){\n      return(\n        <div className={\"player lobby\"}>\n          {player.name}\n        </div>)\n    }else{\n      return(\n        <div className={\"player\" + isBorder}>\n          <div className=\"playername\">\n          {player.name}\n          </div>\n          <div className=\"score\">\n          {player.score}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderProgressBar(progress){\n    //PAD PROGRESS A BIT TO UPDATE BEFORE PROCESSING FREEZE\n    var loadingProgress = this.state.loadingProgress + 0.05;\n    if(loadingProgress > 1.0)\n      loadingProgress = 1.0;\n\n    var width = loadingProgress * 200;\n    var language = Distributions[this.state.langIndex].name;\n    var progresstext = \"Loading Dictionary for \" + language +  \"...\";\n    if(loadingProgress == 1.0){\n      progresstext = \"Processing Dictionary for \" + language +  \"...\";\n    }\n    return(\n      <div className=\"progress\">\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n        <div className=\"progresstext\">{progresstext}</div>\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n      </div>\n    )\n  }\n\n  //😀🤣😅😊😍😙🙂🤔😑😏😮😪😫🤐😣😶🤨🤗😚😘😋😆😃😁😂😄😉😎😗☺🤩😐🙄😥😯😴🤑🤯🤯🤯\n\n  render() {\n    var scale = scale = Math.min(this.state.width/360, this.state.height/360);\n\n    if(this.state.gameState > 0){\n      return (\n        <div className=\"App\">\n          <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <div className=\"grid\">\n                <div className=\"fields\">\n                  {this.gameGrid.map((line, i) => this.renderSquareLine(line, i, this.state.cursorLocation))}\n\n                </div>\n              </div>\n              {this.renderRightInfo(false)}\n              {this.renderLeftInfo()}\n\n            </div>\n          </div>\n        </div>\n      );\n    }else{\n      if(this.state.isLoadingDict){\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderProgressBar(this.state.loadingProgress)}\n              </div>\n            </div>\n          </div>\n        );\n      }else{\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderRightInfo(true)}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    }\n    this.classname = \"square \";\n    this.multiplierText = \"\";\n    this.multiplierNum = \"\";\n\n    if(props.square.type == 1){\n      this.classname += \"letterx2\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 2){\n      this.classname += \"letterx3\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 3){\n      this.classname += \"wordx2\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 4){\n      this.classname += \"wordx3\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 5){\n      this.classname += \"startsquare\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n\n    this.selected = false;\n    this.isLetter = false;\n    this.isTempLetter = false;\n\n\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var oldSelect = this.selected;\n    this.selected = nextProps.isSelected;\n    /*if(nextProps.square.x == nextProps.cursorLocation[0] && nextProps.square.y == nextProps.cursorLocation[1]){\n      this.selected = true;\n    }\n    else{\n      this.selected = false;\n    }*/\n    if(oldSelect != this.selected){\n      return true;\n    }\n\n\n    if(nextProps.square.letter != null && !this.isLetter){\n      this.isLetter = true;\n      return true;\n    }\n    var isTempLetter = nextProps.square.tempLetter != null;\n    if(isTempLetter != this.isTempLetter){\n      this.isTempLetter = isTempLetter;\n      return true;\n    }\n\n    return false;\n\n  }\n\n\n  render(){\n    this.selected = this.props.isSelected;\n    var value = \"\";\n    var score = \"\";\n    var classname = this.classname;\n    var multiplierclassname = \"\";\n    var letterStyle = \"\";\n    if(this.props.square.letter != null){\n      classname = \"lettercontainer\";\n      value = this.props.square.letter.value;\n      score = this.props.square.letter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.letter.score == 0)\n        letterStyle = \" fade\";\n    }\n    else if(this.props.square.tempLetter != null){\n      classname = \"lettercontainertemp\";\n      value = this.props.square.tempLetter.value;\n      score = this.props.square.tempLetter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.tempLetter.score == 0)\n        letterStyle = \" fade\";\n    }\n\n    if(this.selected){\n      return(\n        <div className={classname}>\n          <div className={classname + \" selected\"} style={{ 'marginLeft': this.margin}}>\n            <div className={\"multipliertext\" + multiplierclassname}>{this.multiplierText}</div>\n            <div className={\"multipliernum\" + multiplierclassname}>{this.multiplierNum}</div>\n            <div className={\"letter selected\" + letterStyle}>\n              {value}\n              <div className={\"letterscore\"}>\n                {score}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className={classname}>\n          <div className={\"letter\" + letterStyle}>\n            {value}\n            <div className={\"letterscore\"}>\n              {score}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n}\n\nexport default App;\n","(function(exports) {\n  exports.BloomFilter = BloomFilter;\n  exports.fnv_1a = fnv_1a;\n\n  var typedArrays = typeof ArrayBuffer !== \"undefined\";\n\n  // Creates a new bloom filter.  If *m* is an array-like object, with a length\n  // property, then the bloom filter is loaded with data from the array, where\n  // each element is a 32-bit integer.  Otherwise, *m* should specify the\n  // number of bits.  Note that *m* is rounded up to the nearest multiple of\n  // 32.  *k* specifies the number of hashing functions.\n  function BloomFilter(m, k) {\n    var a;\n    if (typeof m !== \"number\"){\n      a = m;\n      m = a.length * 32;\n    }\n\n    var n = Math.ceil(m / 32),\n        i = -1;\n    this.m = m = n * 32;\n    this.k = k;\n\n    if (typedArrays) {\n      var kbytes = 1 << Math.ceil(Math.log(Math.ceil(Math.log(m) / Math.LN2 / 8)) / Math.LN2),\n          array = kbytes === 1 ? Uint8Array : kbytes === 2 ? Uint16Array : Uint32Array,\n          kbuffer = new ArrayBuffer(kbytes * k),\n          buckets = this.buckets = new Int32Array(n);\n      if (a) while (++i < n) buckets[i] = a[i];\n      this._locations = new array(kbuffer);\n    } else {\n      var buckets = this.buckets = [];\n      if (a) while (++i < n) buckets[i] = a[i];\n      else while (++i < n) buckets[i] = 0;\n      this._locations = [];\n    }\n  }\n\n  // See http://willwhim.wpengine.com/2011/09/03/producing-n-hash-functions-by-hashing-only-once/\n  BloomFilter.prototype.locations = function(v) {\n    var k = this.k,\n        m = this.m,\n        r = this._locations,\n        a = fnv_1a(v),\n        b = fnv_1a(v, 1576284489), // The seed value is chosen randomly\n        x = a % m;\n    for (var i = 0; i < k; ++i) {\n      r[i] = x < 0 ? (x + m) : x;\n      x = (x + b) % m;\n    }\n    return r;\n  };\n\n  BloomFilter.prototype.add = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) buckets[Math.floor(l[i] / 32)] |= 1 << (l[i] % 32);\n  };\n\n  BloomFilter.prototype.test = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) {\n      var b = l[i];\n      if ((buckets[Math.floor(b / 32)] & (1 << (b % 32))) === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Estimated cardinality.\n  BloomFilter.prototype.size = function() {\n    var buckets = this.buckets,\n        bits = 0;\n    for (var i = 0, n = buckets.length; i < n; ++i) bits += popcnt(buckets[i]);\n    return -this.m * Math.log(1 - bits / this.m) / this.k;\n  };\n\n  // Turns the bloom filter into a buffer for later storage.\n  BloomFilter.prototype.serialize = function() {\n    // The format is the number of hashes as a uint16, followed by the buckets\n    // data as big endian int32's\n    var bucketLen = this.buckets.length,\n      target = new Buffer((bucketLen << 2) + 2);\n    target.writeUInt16BE(this.k, 0);\n\n    for (var i = 0; i < bucketLen; ++i) {\n      target.writeInt32BE(this.buckets[i], (i << 2) + 2);\n    }\n\n    return target;\n  };\n\n  // Parses a buffer created by a previous call to .serialize into a BloomFilter\n  BloomFilter.deserialize = function(data) {\n    var hashes = data.readUInt16BE(0),\n      count = (data.length - 2) >> 2,\n      buckets = typedArrays ? new Int32Array(count) : new Array(count);\n\n    for (var i = 0; i < count; ++i) {\n      buckets[i] = data.readInt32BE((i << 2) + 2);\n    }\n\n    return new BloomFilter(buckets, hashes);\n  };\n\n  BloomFilter.bytesToString = function(arr) {\n  var out = '';\n  for (let i = 0; i < arr.length; i += 2) {\n    out += String.fromCharCode((arr[i] << 8) | arr[i + 1]);\n  }\n  return out;\n}\n\n  BloomFilter.stringToBytes = function(str) {\n    const arr = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      let code = String.fromCharCode(str[i]);\n      arr[i * 2 + 0] = code >> 8;\n      arr[i * 2 + 1] = code;\n    }\n    return arr;\n  }\n\n  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\n  function popcnt(v) {\n    v -= (v >> 1) & 0x55555555;\n    v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\n    return ((v + (v >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\n  }\n\n  // Fowler/Noll/Vo hashing.\n  // Nonstandard variation: this function optionally takes a seed value that is incorporated\n  // into the offset basis. According to http://www.isthe.com/chongo/tech/comp/fnv/index.html\n  // \"almost any offset_basis will serve so long as it is non-zero\".\n  function fnv_1a(v, seed) {\n    var a = 2166136261 ^ (seed || 0);\n    for (var i = 0, n = v.length; i < n; ++i) {\n      var c = v.charCodeAt(i),\n          d = c & 0xff00;\n      if (d) a = fnv_multiply(a ^ d >> 8);\n      a = fnv_multiply(a ^ c & 0xff);\n    }\n    return fnv_mix(a);\n  }\n\n  // a * 16777619 mod 2**32\n  function fnv_multiply(a) {\n    return a + (a << 1) + (a << 4) + (a << 7) + (a << 8) + (a << 24);\n  }\n\n  // See https://web.archive.org/web/20131019013225/http://home.comcast.net/~bretm/hash/6.html\n  function fnv_mix(a) {\n    a += a << 13;\n    a ^= a >>> 7;\n    a += a << 3;\n    a ^= a >>> 17;\n    a += a << 5;\n    return a & 0xffffffff;\n  }\n})(typeof exports !== \"undefined\" ? exports : this);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}