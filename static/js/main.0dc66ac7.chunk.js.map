{"version":3,"sources":["App.js","bloomfilter.js","serviceWorker.js","index.js","wordcastlogo_white.svg"],"names":["CancelToken","axios","CHANNEL","source","SquareData","x","y","type","Object","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","selected","letter","tempLetter","Player","name","id","androidId","score","letters","Array","turns","clientIndex","Letter","value","App","props","context","_this","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","_handleKeyDown","e","keyCode","state","gameState","langIndex","initializeLetterPool","addPlayer","moveCursor","console","log","key","i","letterPool","length","toLowerCase","gameGrid","cursorLocation","splice","setState","width","height","players","curTurn","turnCount","noScoreCount","isFirstLetterDown","isDict","isLoadingDict","loadingProgress","originTempSquare","originAxis","specialCoords","curDict","setUpBoard","handleMessage","bind","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","updateDimensions","componentDidMount","updateSenders","ii","result","charactersLength","charAt","Math","floor","random","_this2","path","Distributions","dictPath","fetch","then","r","text","splitDictRaw","split","splitDict","bloom","BloomFilter","nIndex","item","indexOf","normalize","replace","substr","push","add","require","falsecount","truecount","test","gib","makeid","percentage1","percentage2","testtrue","testfalse","blob","serialize","string","toString","buffer","Buffer","from","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","deserialize","_this3","addEventListener","_setTimeout","b","ctx","cast","framework","CastReceiverContext","getInstance","options","CastReceiverOptions","maxInactivity","customNamespaces","assign","system","MessageType","JSON","addCustomMessageListener","customEvent","data","senderId","EventType","SENDER_CONNECTED","event","SENDER_DISCONNECTED","handleDisconnect","start","message","connectedSenders","getSenders","debugstring","debugOnScreen","sendToast","undefined","msg","sendState","sendHurryUp","startGame","switchLanguage","index","switchDict","cancelDictDownload","cancelGame","dir","placeLetter","jokerValue","endTurn","swapLetters","swapIndices","resetTempLetters","json","player","sendJoinSuccess","sendCustomMessage","sendPlayerLetters","sendGameStarted","endGame","content","cancel","_this4","dist","dictStatus","total","dictSize","get","cancelToken","c","onDownloadProgress","progressEvent","percent","loaded","response","catch","err","rand","prevLetter","stringify","endTurnNoScore","targetPlayer","playersSorted","slice","sort","scores","scoresString","nextTurn","tempSquares","getTempSquares","bonusScore","words","wordStrings","isConnected","adjSquares","getAdjSquares","word","getAdjWord","duplicateFound","iii","every","wordString","w","check","checkWords","illegalWords","illegalString","curLetter","square","totalScore","turnLog","wordMultiplier","letterScore","drawLetters","isEmpty","playerLetters","includes","isTurn","turnName","adjSquare","curSquare","posEndFound","negEndFound","originFound","nextSquares","nextSquare","nextX","nextY","isLegal","offset","drawLettersInit","playerIndex","turnLogJson","availableLetters","diff","newPlayers","newPlayer","langs","dictInfo","innerWidth","innerHeight","line","_this5","react__WEBPACK_IMPORTED_MODULE_6___default","className","map","renderSquare","isSelected","Square","isLobby","_this6","classname","winstring","max","maxindex","noScoreString","playersTitle","renderPlayer","isBorder","progress","language","progresstext","style","_this7","scale","min","transform","renderSquareLine","renderRightInfo","renderLeftInfo","src","wordcastlogo","renderProgressBar","Component","_React$Component","_this8","multiplierText","multiplierNum","isLetter","isTempLetter","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__","nextProps","oldSelect","multiplierclassname","letterStyle","marginLeft","margin","React","exports","fnv_1a","typedArrays","ArrayBuffer","m","k","n","ceil","kbytes","LN2","array","Uint8Array","Uint16Array","Uint32Array","kbuffer","buckets","Int32Array","_locations","popcnt","v","seed","charCodeAt","d","fnv_multiply","fnv_mix","prototype","locations","l","size","bits","bucketLen","target","writeUInt16BE","writeInt32BE","hashes","readUInt16BE","count","readInt32BE","bytesToString","arr","out","String","fromCharCode","stringToBytes","str","code","Boolean","location","hostname","match","ReactDOM","render","react_default","getElementById","serviceWorker","ready","registration","unregister","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0dc66ac7.chunk.js","sourcesContent":["import React,  { Component, TimeUnit } from 'react';\nimport ReactDOM from \"react-dom\";\nimport wordcastlogo from './wordcastlogo_white.svg';\nimport './App.css';\nimport Distributions from \"./Distributions.json\";\n\n\nimport BloomFilter from \"./bloomfilter.js\";\n\nimport axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\n\nvar CHANNEL = 'urn:x-cast:com.github.minosvasilias.wordcast';\n\nclass SquareData{\n  constructor(x, y, type) {\n    this.x = x;\n    this.y = y;\n    this.type = type; //0 = NORMAL, 1 = LETTER X2, 2 = LETTER X3, 3 = WORD X2, 4 = WORD X3, 5 = START\n    this.selected = false;\n    this.letter = null;\n    this.tempLetter = null;\n  }\n}\nclass Player{\n  constructor(name, id, androidId) {\n    this.name = name;\n    this.id = id;\n    this.androidId = androidId;\n    this.score = 0;\n    this.letters = new Array();\n    this.turns = new Array();\n    this.clientIndex = 0;\n  }\n}\n\nclass Letter{\n  constructor(value, score) {\n    this.value = value;\n    this.score = score;\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      players: {},\n      gameState : 0,//0 = JOINING, 1 = RUNNING, 2 = FINISH\n      cursorLocation: [7,7],\n      curTurn: 0,\n      turnCount: 0,\n      noScoreCount: 0,\n      isFirstLetterDown: false,\n      langIndex: 0,\n      isDict: false,\n      isLoadingDict: false,\n      loadingProgress: 0.0,\n\n    };\n    this.originTempSquare = null;\n    this.originAxis = [-1,-1];\n\n    this.specialCoords = [\n      //LX2\n      [[0,3],[0,11],[2,6],[2,8],\n      [3,0],[3,7],[3,14],\n      [6,6],[6,8],[6,12],[6,2],\n      [7,3],[7,11],\n      [8,6],[8,8],[8,12],[8,2],\n      [11,0],[11,7],[11,14],\n      [14,3],[14,11],[12,6],[12,8]],\n      //LX3\n      [[1,5],[1,9],\n      [5,1],[5,5],[5,9],[5,13],\n      [9,1],[9,5],[9,9],[9,13],\n      [13,5],[13,9]],\n      //WX2\n      [[1,1],[2,2],[3,3],[4,4],\n      [10,10],[11,11],[12,12],[13,13],\n      [13,1],[12,2],[11,3],[10,4],\n      [4,10],[3,11],[2,12],[1,13]],\n      //WX3\n      [[0,0],[0,7],[0,14],\n      [7,0],[7,14],\n      [14,0],[14,7],[14,14]],\n      //START SQUARE\n      [[7,7]]\n    ];\n\n    this.curDict = [null, null];\n\n    this.setUpBoard();\n\n\n\n    //this.setUpBloom();\n\n\n\n\n\n\n    this.state.players = new Array();\n\n    this.handleMessage = this.handleMessage.bind(this);\n    this.moveCursor = this.moveCursor.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addPlayer = this.addPlayer.bind(this);\n    this.updateSenders = this.updateSenders.bind(this);\n\n  }\n  setUpBoard(){\n    this.gameGrid = new Array(15);\n    for(var i = 0; i < 15; i++){\n      this.gameGrid[i] = new Array(15);\n      for(var ii = 0; ii < 15; ii++){\n        this.gameGrid[i][ii] =  new SquareData(i,ii,0);\n      }\n    }\n\n    this.letterPool = new Array();\n\n    for(var i = 0; i < this.specialCoords.length; i++){\n      for(var ii = 0; ii < this.specialCoords[i].length; ii++){\n        this.gameGrid[this.specialCoords[i][ii][0]][this.specialCoords[i][ii][1]].type = i+1;\n      }\n    }\n  }\n  makeid(length) {\n   var result           = '';\n   var characters       = 'öäüabcdefghijklmnopqrstuvwxyz';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n }\n setUpBloom(){\n\n      //FIRST, SET INDEX OF DISTRIBUTION\n      var distIndex = 3;\n      var testtruestring = \"alfeñicare\";//SPANISH\"alfeñicaré\";\n      var testfalsestring = \"blobsy\";\n\n      this.state.langIndex = distIndex;\n      this.initializeLetterPool();\n      var path = Distributions[this.state.langIndex].dictPath;\n\n   ////////////////////////////\n       let dict;\n       fetch(path)\n       .then((r) => r.text())\n       .then(text  => {\n         //console.log(text);\n         var splitDictRaw = text.split(\"\\n\");\n         console.log(splitDictRaw);\n         var splitDict = new Array();\n\n         var bloom = new BloomFilter.BloomFilter(\n           5975973,//ITALIAN 14898389,//FRENCH 5072222,//ENGLISH 8868648 ,//GERMAN 32000000,//28755176,//25869786,//16284727,//8192 * 256,//32768 * 256,//32 * 256, // number of bits to allocate.\n           17//ITALIAN 16//FRENCH 17//ENGLISH 17//GERMAN11//10//9//6//16        // number of hash functions.\n         );\n         //var trie = new Trie();\n         //console.log(JsSuffixTrie);\n         //var trie = new JsSuffixTrie();\n\n         // Add some elements to the filter.\n         for(var i = 0; i < splitDictRaw.length; i++){\n           var item = splitDictRaw[i].toLowerCase();\n\n           //TRIM (CAREFUL, ONLY GERMAN AND ENGLISH SO FAR!)\n           //item = item.substring(0, item.length-1);\n\n           //REMOVE DIACRITICS ETC EXCEPT ñ\n           var nIndex = item.indexOf(\"ñ\");\n           item = item.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n           if(nIndex != -1){\n            item = item.substr(0, nIndex) + \"ñ\" + item.substr(nIndex + 1);\n          }\n\n\n           var doAdd = true;\n           /*for(var i = 0; i < item.length; i++){\n             var char = item.charAt(i);\n             if(!this.availableLetters.includes(char)){\n               doAdd = false;\n             }\n           }*/\n\n           if(doAdd){\n             splitDict.push(item);\n             //splitDict[i] = item;\n             bloom.add(item);\n           }\n           //trie.add(item);\n         }\n\n\n         console.log(\"DICT LENGTH: \" + splitDict.length);\n         console.log(splitDict);\n\n               // check contains method\n               //console.log(trie.contains(\"arbeit\"));  // true\n               //console.log(trie.contains(\"fhqap\")); // false\n\n\n               var util = require('util');\n               //var json = util.inspect(trie);\n\n         //var array = [].slice.call(trie.children),\n           //var  json = JSON.stringify(trie);\n         //console.log(json);\n\n         //TMP JSON SAVING\n         /*var json = trie.toJSON();\n         json = JSON.stringify(splitDict);\n         console.log(json);\n         var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         var falsecount = 0;\n         var truecount = 0;\n         for(var i = 0; i < splitDict.length; i++){\n           var item = splitDict[i];\n           var test = bloom.test(item);\n\n           var gib = this.makeid(6);\n           var test2 = bloom.test(gib);\n           if(!test){\n             falsecount += 1;\n             //console.log(gib);\n           }\n           if(test2){\n             truecount += 1;\n             //console.log(gib);\n           }\n         }\n         /*if(splitDict.includes('jäger')){\n           console.log(\"AAARBEIT\");\n         }*/\n         //console.log(splitDict[101069].toLowerCase());\n         console.log(\"FALSE NEGATIVES: \" + falsecount);\n         console.log(\"FALSE POSITIVES: \" + truecount);\n         var percentage1 = (falsecount / splitDict.length) * 100;\n         var percentage2 = (truecount / splitDict.length) * 100;\n         console.log(\"FALSE NEGATIVES PERCENT: \" + percentage1);\n         console.log(\"FALSE POSITIVES PERCENT: \" + percentage2);\n         // Test if an item is in our filter.\n         // Returns true if an item is probably in the set,\n         // or false if an item is definitely not in the set.\n\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         // Serialisation. Note that bloom.buckets may be a typed array,\n         // so we convert to a normal array first.\n         /*var array = [].slice.call(bloom.buckets),\n             json = JSON.stringify(array);\n         console.log(json);*/\n\n         //ALTERNATIVE SERIALIZATION\n         var blob = bloom.serialize();\n         //json = BloomFilter.BloomFilter.bytesToString(blob);\n         //console.log(enc.decode(blob));\n         console.log(blob);\n\n\n         /*var enc = new TextDecoder(\"utf-8\");\n         var encodedblob = enc.decode(blob);\n         var enc2 = new TextEncoder(\"utf-8\");\n         var blob2 = enc2.encode(encodedblob);\n         console.log(blob2);*/\n\n         let string = blob.toString('utf16le');\n         let buffer = Buffer.from(string, 'utf16le');\n         console.log(buffer);\n\n         // Function to download data to a file\n         var data = string;\n         var filename = \"test\";\n         var type = \".json\";\n         var file = new Blob([data], {type: type});\n         if (window.navigator.msSaveOrOpenBlob) // IE10+\n             window.navigator.msSaveOrOpenBlob(file, filename);\n         else { // Others\n             var a = document.createElement(\"a\"),\n                     url = URL.createObjectURL(file);\n             a.href = url;\n             a.download = filename;\n             document.body.appendChild(a);\n             a.click();\n             setTimeout(function() {\n                 document.body.removeChild(a);\n                 window.URL.revokeObjectURL(url);\n             }, 0);\n         }\n\n         //console.log(json);\n\n\n         var bloom = BloomFilter.BloomFilter.deserialize(blob);\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         fetch('/french.bloom')\n         .then((r) => r.text())\n         .then(text  => {\n           //var enc = new TextEncoder(\"utf-16\");\n           //var blob = enc.encode(json);\n           var blob = Buffer.from(text, 'utf16le');\n           //var blob = BloomFilter.BloomFilter.stringToBytes(text);\n             console.log(blob);\n           var bloom = BloomFilter.BloomFilter.deserialize(blob);\n           var testtrue = bloom.test(testtruestring);\n           var testfalse = bloom.test(testfalsestring);\n           console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         });\n         //TMP JSON SAVING\n         /*var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         // Deserialisation. Note that the any array-like object is supported, but\n         // this will be used directly, so you may wish to use a typed array for\n         // performance.\n         //var bloom = new BloomFilter(array, 16);*/\n       });\n }\n\n\n\n\n\n\n\n\n\n\n _handleKeyDown = (e) => {\n\n   switch(e.keyCode){\n     //CONSOLE KEY TO START\n     case 220:\n      this.state.gameState = 1;\n      this.state.langIndex = 0;\n      this.initializeLetterPool();\n      this.addPlayer(\"Ajax\", \"1\", \"1\");\n      this.addPlayer(\"Theseus\", \"2\", \"2\");\n      this.addPlayer(\"Asterius\", \"3\", \"3\");\n      this.addPlayer(\"Paris\", \"4\", \"4\");\n      this.addPlayer(\"Achilles\", \"5\", \"5\");\n      this.addPlayer(\"Agamemnon\", \"6\", \"6\");\n      break;\n\n     case 37:\n       this.moveCursor(\"LEFT\");\n       break;\n     case 38:\n       this.moveCursor(\"UP\");\n       break;\n     case 39:\n       this.moveCursor(\"RIGHT\");\n       break;\n     case 40:\n       this.moveCursor(\"DOWN\");\n       break;\n   }\n\n   //IF LETTER\n   console.log(e.key);\n   for(var i = 0; i < this.letterPool.length; i++){\n     var letter = this.letterPool[i];\n     if(letter.value.toLowerCase() == e.key){\n       var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n       curSquare.letter = letter;\n       this.letterPool.splice(i, 1);\n\n     }\n   }\n   this.setState({gameState: this.state.gameState});\n\n }\n\n\n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n\n\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n\n    //PREVENT TIMEOUT\n    window._setTimeout = window.setTimeout;\n    window.setTimeout = function(a, b) {\n        // disable setTimeout so chromecast won't kill us after 5 minutes...\n    };\n\n    //LOAD CAST LOGIC\n\n    this.ctx = window.cast.framework.CastReceiverContext.getInstance();\n    var options = new window.cast.framework.CastReceiverOptions();\n    options.maxInactivity = 3600; //Development only\n\n\n    options.customNamespaces = Object.assign({});\n    options.customNamespaces[CHANNEL] = window.cast.framework.system.MessageType.JSON;\n\n    var handleMessage = this.handleMessage;\n    this.ctx.addCustomMessageListener(CHANNEL, function(customEvent) {\n        handleMessage(customEvent.data, customEvent.senderId, customEvent.data.id);\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_CONNECTED,\n        event => {\n        //CONNECT\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_DISCONNECTED,\n        event => {\n        this.handleDisconnect(event.senderId);\n    });\n    this.ctx.start(options);\n\n    //this.updateSenders();\n\n\n  }\n\n  debugOnScreen(message){\n    //document.getElementById(\"content\").innerHTML = message;\n    console.log(message);\n  }\n\n  updateSenders(id){\n    this.connectedSenders = this.ctx.getSenders();\n    var debugstring = \"\";\n    for(var i = 0; i < this.connectedSenders.length; i++){\n      debugstring += this.connectedSenders[i].id + \", \";\n    }\n    this.debugOnScreen(\"MESSAGE RECEIVED FROM ID: \" + id + \" - CONNECTED IDS: \" + debugstring);\n  }\n\n  handleDisconnect(id){\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].id == id){\n        if(this.state.gameState == 0){\n          this.sendToast(this.state.players[i].name + \" disconnected\", undefined);\n          this.state.players.splice(i, 1);\n          this.setState({players: this.state.players})\n        }\n      }\n    }\n  }\n\n  handleMessage(msg, id, androidId){\n    this.updateSenders(id);\n    if(msg.msg == \"STATE\"){\n        this.sendState(id, androidId);\n    }\n    if(msg.msg == \"HURRYUP\"){\n        this.sendHurryUp();\n    }\n    //LOBBY ONLY\n    if(this.state.gameState == 0){\n      if(msg.msg == \"JOIN\"){\n          this.addPlayer(msg.name, id, androidId);\n      }\n      if(msg.msg == \"STARTGAME\"){\n          this.startGame();\n      }\n      if(msg.msg == \"LANGUAGE\"){\n          this.switchLanguage(msg.index);\n      }\n      if(msg.msg == \"DICT\"){\n          this.switchDict(msg.isDict);\n      }\n      if(msg.msg == \"DICTLOADCANCEL\"){\n          this.cancelDictDownload();\n      }\n    }\n    if(msg.msg == \"CANCEL\"){\n        this.cancelGame(androidId);\n    }\n    //CURRENT PLAYER ONLY\n    if(this.state.players.length == 0 || this.state.gameState != 1)\n      return;\n    if(id != this.state.players[this.state.curTurn].id)\n      return;\n    if(msg.msg == \"MOVE\"){\n        this.moveCursor(msg.dir);\n    }\n    if(msg.msg == \"PLACE\"){\n      this.placeLetter(msg.index, msg.jokerValue, id);\n    }\n    if(msg.msg == \"ENDTURN\"){\n        this.endTurn(id);\n    }\n    if(msg.msg == \"SWAP\"){\n        this.swapLetters(msg.swapIndices, id);\n    }\n    if(msg.msg == \"RESET\"){\n        this.resetTempLetters();\n    }\n  }\n\n  sendState(id, androidId){\n    var json;\n\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n      }\n    }\n\n    if(this.state.gameState == 0){\n      if(player != null){\n        player.id = id;\n        this.sendJoinSuccess(player);\n        return;\n      }else{\n        json = {\"msg\":\"NAME\"};\n        this.ctx.sendCustomMessage(CHANNEL , id,  json);\n        return;\n      }\n    }\n    else if(this.state.gameState == 1){\n\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        //RESET LETTERS IF ITS REJOINING PLAYERS TURN IN ORDER TO AVOID UI MESS\n        if(player.androidId == this.state.players[this.state.curTurn].androidId){\n          this.resetTempLetters();\n        }else{\n          this.sendPlayerLetters(player);\n        }\n        this.sendGameStarted(player);\n        return;\n      }\n    }\n    else if(this.state.gameState == 2){\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        this.endGame(player);\n        return;\n      }\n    }\n    json = {\"msg\":\"GAMEONGOING\"};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n\n\n  }\n\n  sendToast(content, id){\n    var json = {\"msg\":\"TOAST\",\"content\":content};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n  }\n\n  cancelGame(androidId){\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n        this.sendToast(player.name + \" has cancelled the game!\", undefined);\n      }\n    }\n\n    this.setState({gameState: 0, cursorLocation: [7,7], curTurn: 0,\n                  turnCount: 0, noScoreCount: 0, isFirstLetterDown: false});\n    this.setUpBoard();\n\n    for(var i = 0; i < this.state.players.length; i++){\n      this.state.players[i].score = 0;\n      this.state.players[i].letters = new Array();\n      this.state.players[i].turns = new Array();\n      this.sendState(this.state.players[i].id, this.state.players[i].androidId);\n    }\n  }\n\n  cancelDictDownload(){\n    if(this.cancel != null){\n      this.cancel();\n      delete this.curDict;\n    }\n  }\n\n  switchDict(isDict){\n    if(this.state.gameState != 0){\n      return;\n    }\n    this.setState({isDict: isDict});\n    var json = {\"msg\":\"DICT\",\"isDict\":isDict};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n\n\n    if(isDict){\n      var langIndex = this.state.langIndex;\n      if(this.curDict == undefined || this.curDict[0] != Distributions[langIndex].name){\n        delete this.curDict;\n\n\n        var dist = Distributions[langIndex];\n        if(dist.dictStatus != 1 || this.state.isLoadingDict)\n          return;\n\n        var json = {\"msg\":\"DICTLOADSTART\"};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        this.setState({isLoadingDict: true});\n        var total = dist.dictSize;\n        let cancel;\n        axios.get(dist.dictPath, {\n          cancelToken: new CancelToken(function executor(c) {\n            cancel = c;\n          }),\n          onDownloadProgress: (progressEvent) => {\n            //this.state.players[0].name = progressEvent.loaded;\n            var percent = progressEvent.loaded / total;\n            this.setState({loadingProgress: percent});\n          }\n        })\n        .then((response) => {\n          //PARSE TXT INTO ARRAY\n          //OLD NON BLOOM WAY\n          /*var splitDict = response.data.split(\"\\n\");\n          for(var i = 0; i < splitDict.length; i++){\n            var item = splitDict[i].toLowerCase();\n            var item = item.substring(0, item.length-1);\n            splitDict[i] = item;\n          }*/\n          //BLOOM\n          var blob = Buffer.from(response.data, 'utf16le');\n          var bloom = BloomFilter.BloomFilter.deserialize(blob);\n\n          this.sendToast(\"LOADED DICTIONARY\", undefined);\n          this.curDict = [Distributions[langIndex].name, bloom];\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        .catch((err) => {\n          this.sendToast(\"LOAD FAILED\", undefined);\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n          this.setState({isDict: false});\n          var json = {\"msg\":\"DICT\",\"isDict\":false};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        this.cancel = cancel;\n      }\n\n    }\n\n  }\n\n  switchLanguage(index){\n    if(index != this.state.langIndex){\n      this.setState({langIndex: index});\n      var json = {\"msg\":\"LANGUAGE\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n      this.setState({isDict: false});\n      var json = {\"msg\":\"DICT\",\"isDict\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  sendHurryUp(){\n    var json = {\"msg\":\"HURRYUP\"};\n    var player = this.state.players[this.state.curTurn];\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  swapLetters(swapIndices, id){\n    if(this.letterPool.length < 7){\n      this.sendToast(\"You can't swap with less than 7 letters left in the pool!\", id);\n      return;\n    }\n    if(swapIndices.length == 0){\n      this.sendToast(\"You must select at least one letter to swap!\", id);\n      return;\n    }\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    var swapLetters = new Array();\n    for(var i = 0; i < swapIndices.length; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      var prevLetter = player.letters[swapIndices[i]];\n      swapLetters.push(prevLetter);\n\n      player.letters[swapIndices[i]] = letter;\n      this.letterPool.splice(rand, 1);\n    }\n    //ONLY ADD OLD LETTER TO POOL AFTER ALL NEW ONES ARE DRAWN\n    for(var i = 0; i < swapLetters.length; i++){\n      this.letterPool.push(swapLetters[i]);\n    }\n\n    this.setState({players: this.state.players});\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n    this.endTurnNoScore(id);\n  }\n\n  endGame(targetPlayer){\n    this.setState({gameState: 2});\n\n    var playersSorted = this.state.players.slice();\n    playersSorted.sort(function(a, b){\n        return a.score - b.score;\n    });\n    var scores = new Array();\n    for(var i = 0; i < playersSorted.length; i++){\n      scores.push({\"name\": playersSorted[i].name, \"score\":playersSorted[i].score});\n      playersSorted[i].clientIndex = i;\n    }\n    for(var i = 0; i < playersSorted.length; i++){\n      var player = playersSorted[i];\n      if(targetPlayer != null && player.androidId == targetPlayer.androidId ||\n        targetPlayer == null){\n          var scoresString = JSON.stringify(scores);\n          var json = {\"msg\":\"GAMEENDED\", \"clientIndex\":player.clientIndex, \"scores\":scoresString};\n          this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n      }\n\n    }\n  }\n\n  endTurnNoScore(id){\n    var noScoreCount = this.state.noScoreCount + 1;\n    this.state.players[this.state.curTurn].turns.push([]);\n    this.setState({noScoreCount: noScoreCount});\n\n    if(noScoreCount < 6){\n      this.nextTurn();\n    }else{\n      this.endGame(null);\n    }\n  }\n\n  endTurn(id){\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n        this.endTurnNoScore(id);\n        return;\n\n    }\n    var bonusScore = 0;\n    if(tempSquares.length == 7){\n      bonusScore = 50;\n    }\n    //FIND WORDS TO SCORE\n    var words = new Array();\n    var wordStrings = new Array();\n    var mainWord = null;\n    var isConnected = false;\n    for(var i = 0; i < tempSquares.length; i++){\n      var adjSquares = this.getAdjSquares(tempSquares[i]);\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(adjSquares[ii].letter != null)\n            isConnected = true;\n          //TRACE TEMPLETTER WORD\n          var word = this.getAdjWord(adjSquares[ii],tempSquares[i]).word;\n\n          word.sort(function(a, b){\n            if(a.x != b.x){\n              return a.x - b.x;\n            }\n            else{\n              return a.y - b.y;\n            }\n          });\n\n          //CHECK FOR DUPLICATE\n          var duplicateFound = false;\n          for(var iii = 0; iii < words.length; iii++){\n            if(word.length === words[iii].length && word.every(function(value, index) { return value === words[iii][index]})){\n              duplicateFound = true;\n            }\n          }\n          if(!duplicateFound){\n            words.push(word);\n            //FORM WORD STRING\n            var wordString = \"\";\n            for(var w = 0; w < word.length; w++){\n              if(word[w].letter != null)\n                wordString += word[w].letter.value;\n              if(word[w].tempLetter != null)\n                wordString += word[w].tempLetter.value;\n            }\n            wordStrings.push(wordString);\n          }\n          //mainWord = word;\n\n        }\n      }\n    }\n    if(!isConnected && this.state.isFirstLetterDown){\n      this.resetTempLetters();\n      this.sendToast(\"Word must connect to already existing one!\", id);\n      return;\n    }\n\n    //FIRST TURN MAY JUST BE ONE LETTER\n    if(tempSquares.length == 1 && !this.state.isFirstLetterDown){\n      var word = new Array();\n      word.push(tempSquares[0]);\n      words.push(word);\n    }\n\n    //CHECK DICT IF ENABLED\n    if(this.state.isDict){\n      var check = this.checkWords(wordStrings);\n      var illegalWords = check.illegalWords;\n      if(illegalWords.length > 0){\n        this.resetTempLetters();\n        this.sendToast(check.illegalString, id);\n        return;\n      }\n    }\n\n\n  //SPECIAL RULES FOR SPANISH\n  if(Distributions[this.state.langIndex].name == \"Español\"){\n      for(var w = 0; w < words.length; w++){\n        var word = words[w];\n        var prevLetter = \"\";\n        for(var i = 0; i < word.length; i++){\n          var square = word[i];\n          var curLetter = \"\";\n          if(square.tempLetter != null){\n            curLetter = square.tempLetter.value;\n          }else{\n            curLetter = square.letter.value;\n          }\n          if(i != 0){\n            if(prevLetter == \"C\" && curLetter == \"H\" ||\n               prevLetter == \"L\" && curLetter == \"L\" ||\n               prevLetter == \"R\" && curLetter == \"R\"){\n                 this.resetTempLetters();\n                 this.sendToast(\"You must use the \" + prevLetter + curLetter + \" letter instead of \" + prevLetter + \" and \" + curLetter + \" separately!\", id);\n                 return;\n            }\n          }\n          prevLetter = curLetter;\n        }\n      }\n    }\n    //////////////////////////////////\n\n\n    //SCORE WORDS\n    var totalScore = 0;\n    var turnLog = new Array();\n    var debugstring = \"\";\n    for(var w = 0; w < words.length; w++){\n      debugstring += \" --- WORD: \";\n      var word = words[w];\n      var score = 0;\n      var wordMultiplier = 1;\n      var wordString = \"\";\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.tempLetter != null){\n          square.letter = square.tempLetter;\n          square.tempLetter = null;\n        }\n        var letterScore = 0;\n        if(square.type == 1){\n          letterScore = square.letter.score * 2;\n        }\n        else if(square.type == 2){\n          letterScore = square.letter.score * 3;\n        }\n        else{\n          letterScore = square.letter.score;\n        }\n        score += letterScore;\n\n\n\n\n\n\n        debugstring += square.letter.value + \"(\"+letterScore+\")-\";\n        wordString += square.letter.value;\n        if(square.letter.value == \"\"){\n          wordString += \"_\";\n        }\n        //ACCOUNT FOR PROBABLY IMPOSSIBLE SCENARIO OF BOTH WORD MULTIPLIERS USED\n        if(square.type == 3 || square.type == 5){\n          wordMultiplier = wordMultiplier * 2;\n        }\n        if(square.type == 4){\n          wordMultiplier = wordMultiplier * 3;\n        }\n      }\n      score = score * wordMultiplier;\n      totalScore += score;\n      wordStrings.push(wordString);\n      turnLog.push([wordString,score]);\n      debugstring += \" SCORE: \" + score;\n    }\n\n\n\n\n    //APPLY SCORE\n    totalScore += bonusScore;\n    debugstring += \" --- BONUS: + \" + bonusScore + \" --- TOTAL: \" + totalScore;\n\n\n    //END NO SCORE STREAK\n    this.setState({noScoreCount: 0});\n    //IF VERY FIRST TURN IS A PASS, THIS MAKES SURE WE KNOW WHEN THE GAME REALLY STARTED\n    this.state.isFirstLetterDown = true;\n    this.state.players[this.state.curTurn].score += totalScore;\n\n    //CHANGE TYPE OF USED SQUARES TO ZERO: SPECIAL TYPES CAN ONLY BE USED ON THE TURN THEY ARE COVERED\n    for(var w = 0; w < words.length; w++){\n      var word = words[w];\n      for(var i = 0; i < word.length; i++){\n        word[i].type = 0;\n      }\n    }\n\n    //ADD TURN TO PLAYER HISTORY\n    this.state.players[this.state.curTurn].turns.push(turnLog);\n\n\n    // DEBUG\n    var dstring = \"\";\n    this.debugOnScreen(\"WORD SCORED: \" + debugstring);\n\n    this.drawLetters(this.state.players[this.state.curTurn]);\n\n    //CHECK FOR GAME END\n    var isEmpty = true;\n    var playerLetters = this.state.players[this.state.curTurn].letters;\n    for(var i = 0; i < playerLetters.length; i++){\n      if(playerLetters[i] != null){\n        isEmpty = false;\n      }\n    }\n    if(isEmpty)\n      this.endGame(null);\n\n    //SWITCH TURNS\n    this.nextTurn();\n  }\n\n  checkWords(words){\n    var bloom = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = bloom.test(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n        if(i != words.length-1){\n          illegalString += \", \";\n        }\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  checkWordsOLD(words){\n    var splitDict = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = splitDict.includes(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n      }\n      if(i != words.length-1){\n        illegalString += \", \";\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  nextTurn(){\n    var nextTurn = this.state.curTurn + 1;\n    var oldTurn = this.state.curTurn;\n    if(nextTurn >= this.state.players.length){\n      nextTurn = 0;\n    }\n    this.setState({turnCount: this.state.turnCount+1})\n    this.setState({curTurn:nextTurn});\n    for(var i = 0; i<this.state.players.length; i++){\n      var isTurn = nextTurn == i;\n      var turnName = this.state.players[nextTurn].name;\n\n      var turnLogJson = JSON.stringify(this.state.players[i].turns);\n      var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":turnLogJson};\n      this.ctx.sendCustomMessage(CHANNEL , this.state.players[i].id,  json);;\n    }\n  }\n\n  getTempSquares(){\n    var tempSquares = new Array();\n    for(var i = 0; i < this.gameGrid.length; i++){\n      for(var ii = 0; ii < this.gameGrid[i].length; ii++){\n        var square = this.gameGrid[i][ii];\n        if(square.tempLetter != null){\n          tempSquares.push(square);\n        }\n      }\n    }\n    return tempSquares;\n  }\n\n  getAdjSquares(square){\n    var x = square.x;\n    var y = square.y;\n    var adjSquares = new Array();\n    if(x+1<15)\n      adjSquares.push(this.gameGrid[x+1][y]);\n    if(x-1>-1)\n      adjSquares.push(this.gameGrid[x-1][y]);\n    if(y+1<15)\n      adjSquares.push(this.gameGrid[x][y+1]);\n    if(y-1>-1)\n      adjSquares.push(this.gameGrid[x][y-1]);\n    return adjSquares;\n  }\n\n  getAdjWord(adjSquare, curSquare){\n    var dir = [adjSquare.x - curSquare.x, adjSquare.y - curSquare.y];\n    var posEndFound = false;\n    var negEndFound = false;\n    var originFound = false;\n    var word = new Array();\n    word.push(curSquare);\n    //START WITH CURRENT SQUARE FOR BOTH DIRECTIONS\n    var nextSquares = [curSquare,curSquare];\n    while(!posEndFound || !negEndFound){\n      //POSITIVE DIR\n      var nextX = nextSquares[0].x+dir[0];\n      var nextY = nextSquares[0].y+dir[1];\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[0] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          posEndFound = true;\n        }\n      }\n      else{\n        posEndFound = true;\n      }\n      //NEGATIVE DIR\n      nextX = nextSquares[1].x+(dir[0]*-1);\n      nextY = nextSquares[1].y+(dir[1]*-1);\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[1] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          negEndFound = true;\n        }\n      }\n      else{\n        negEndFound = true;\n      }\n    }\n    return {word : word, originFound : originFound}\n  }\n\n  placeLetter(index, jokerValue, id){\n    var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var curLetter = this.state.players[this.state.curTurn].letters[index];\n    var isLegal = true;\n    if(curSquare.letter != null || curSquare.tempLetter != null || curLetter == null){\n      isLegal = false;\n      this.sendToast(\"This square is already in use!\", id)\n    }\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n      this.originTempSquare = curSquare;\n      this.debugOnScreen(\"ORIGINTEMPSQUARE: \" + this.originTempSquare.x + \",\"+this.originTempSquare.y);\n\n    }\n    else if(tempSquares.length > 0){\n      var adjSquares = this.getAdjSquares(curSquare);\n      var originFound = false;\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(this.getAdjWord(adjSquares[ii], curSquare).originFound)\n            originFound = true;\n\n        }\n      }\n      if(!originFound){\n        isLegal = false;\n      }\n      else{\n\n        if(tempSquares.length == 1){\n          if(this.originTempSquare.x == curSquare.x){\n            this.originAxis = [curSquare.x,-1];\n          }else{\n            this.originAxis = [-1,curSquare.y];\n          }\n        }\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            isLegal = false;\n          }\n        }\n        this.debugOnScreen(\"ORIGIN FOUND! AXIS: \" + this.originAxis[0] +\",\" +this.originAxis[1]);\n\n      }\n    }\n\n\n    if(isLegal){\n      if(curLetter.value == \"\"){\n        curLetter.value = jokerValue;\n      }\n      curSquare.tempLetter = curLetter;\n      this.state.players[this.state.curTurn].letters[index] = null;\n      this.setState({players: this.state.players});\n      var json = {\"msg\":\"PLACED\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n    }\n  }\n\n  resetTempLetters(){\n    var tempSquares = this.getTempSquares(false);\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    for(var i = 0; i < tempSquares.length; i++){\n      while(player.letters[i+offset] != null){\n        offset += 1;\n      }\n      if(tempSquares[i].tempLetter.score == 0){\n        tempSquares[i].tempLetter.value = \"\";\n      }\n      player.letters[i+offset] = tempSquares[i].tempLetter;\n      tempSquares[i].tempLetter = null;\n    }\n    this.setState({players: this.state.players});\n    this.sendPlayerLetters(player);\n  }\n\n  moveCursor(dir){\n    var x = this.state.cursorLocation[0];\n    var y = this.state.cursorLocation[1];\n    this.debugOnScreen(\"MOVING CURSOR \" + dir);\n    switch(dir){\n      case \"UP\":\n        y -= 1;\n        break;\n      case \"DOWN\":\n        y += 1;\n        break;\n      case \"LEFT\":\n        x -= 1;\n        break;\n      case \"RIGHT\":\n        x += 1;\n        break;\n      default:\n        break;\n    }\n    if(x > -1 && x < 15 && y > -1 && y < 15){\n      this.setState({cursorLocation:[x,y]});\n      this.debugOnScreen(\"MOVED CURSOR TO \"+ this.state.cursorLocation[0] + \",\" + this.state.cursorLocation[1]);\n    }\n\n  }\n\n  startGame(){\n    this.debugOnScreen(\"GAME STARTED\");\n\n    this.initializeLetterPool();\n    this.setState({cursorLocation:[7,7]});\n    for(var i = 0; i<this.state.players.length; i++){\n      var player = this.state.players[i];\n      this.drawLettersInit(player);\n      this.sendGameStarted(player);\n    }\n    this.setState({gameState:1});\n  }\n\n  sendGameStarted(player){\n    var playerIndex = -1;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == player.androidId){\n        playerIndex = i;\n      }\n    }\n    var isTurn = this.state.curTurn == playerIndex;\n    var turnName = this.state.players[this.state.curTurn].name;\n    var turnLogJson = JSON.stringify(this.state.players[playerIndex].turns);\n    var json = {\"msg\":\"GAMESTARTED\", \"isTurn\":isTurn, \"turnName\":turnName, \"letters\":this.availableLetters, \"turnLog\":turnLogJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  initializeLetterPool(){\n    var letters = Distributions[this.state.langIndex].dist;\n    this.letterPool = new Array();\n    this.availableLetters = new Array();\n    for(var i = 0; i < letters.length; i++){\n      if(letters[i].length > 0){\n        for(var ii = 0; ii < letters[i].length; ii++){\n          if(!this.availableLetters.includes(letters[i][ii][0]) && letters[i][ii][0] != \"\"){\n            this.availableLetters.push(letters[i][ii][0]);\n          }\n          for(var iii = 0; iii < letters[i][ii][1]; iii++){\n            var letter = new Letter(letters[i][ii][0],i);\n            this.letterPool.push(letter);\n          }\n        }\n      }\n    }\n    this.availableLetters.sort();\n    console.log(this.availableLetters);\n  }\n\n  sendPlayerLetters(player){\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n  drawLettersInit(player){\n    var diff = 7 - player.letters.length;\n    for(var i = 0; i < diff; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      this.letterPool.splice(rand, 1);\n      player.letters.push(letter);\n    }\n    this.sendPlayerLetters(player);\n  }\n  drawLetters(player){\n    for(var i = 0; i < 7; i++){\n      if(player.letters[i] == null){\n        if(this.letterPool.length != 0){\n          var rand = Math.floor(Math.random()*this.letterPool.length);\n          var letter = this.letterPool[rand];\n          player.letters[i] = letter;\n          this.letterPool.splice(rand, 1);\n        }\n      }\n    }\n    this.sendPlayerLetters(player);\n  }\n\n  addPlayer(name, id, androidId){\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        return;\n      }\n    }\n\n    if(this.state.players.length > 4){\n      this.sendToast(\"Sorry, the maximum amount of players is \" + this.state.players.length, id);\n      return;\n    }\n\n    var newPlayers = this.state.players.slice();\n    var newPlayer = new Player(name, id, androidId);\n    newPlayers.push(newPlayer);\n    this.setState({players:newPlayers})\n    this.debugOnScreen(\"NEW PLAYER: \" + name + \", ID: \" + id);\n\n    this.sendJoinSuccess(newPlayer);\n  }\n\n  sendJoinSuccess(player){\n    //GET AVAILABLE LANGUAGES\n    var langs = new Array();\n    for(var i = 0; i < Distributions.length; i++){\n      langs.push({name:Distributions[i].name, dictStatus:Distributions[i].dictStatus, dictInfo:Distributions[i].dictInfo});\n    }\n    var langsJson = JSON.stringify(langs);\n    var json = {\"msg\":\"JOINSUCCESS\", \"langs\":langs, \"langIndex\":this.state.langIndex, \"isDict\":this.state.isDict, \"isLoadingDict\":this.state.isLoadingDict};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n\n  updateDimensions(){\n     this.setState({width: window.innerWidth, height: window.innerHeight});\n  }\n\n  renderSquareLine(line,i,cursorLocation){\n    return(\n      <div className=\"line\">\n        {line.map((square, i) => this.renderSquare(square, i,cursorLocation))}\n      </div>\n    )\n  }\n  renderSquare(square, i,cursorLocation){\n    var isSelected = false;\n    if(square.x == cursorLocation[0] && square.y == cursorLocation[1]){\n      isSelected = true;\n    }\n    return(\n      <Square square={square} i={i} isSelected={isSelected}></Square>\n    )\n  }\n\n  renderLeftInfo(){\n    return(\n      <div className=\"leftinfo\">\n        <div className=\"title\">\n          {\"Letters Remaining\"}\n        </div>\n        <div className=\"poolcount\">\n          {this.letterPool.length}\n        </div>\n      </div>\n    );\n  }\n  renderRightInfo(isLobby){\n    var classname = \"rightinfo\";\n    if(isLobby)\n      classname = \"lobbyinfo\";\n\n    var winstring = \"\";\n    if(this.state.gameState == 2){\n      var max = 0;\n      var maxindex = new Array();\n      for(var i = 0; i < this.state.players.length; i++){\n        var player = this.state.players[i];\n        if(player.score > max){\n          max = player.score;\n          maxindex.push(i);\n        }\n        else if(player.score == max){\n          maxindex.push(i);\n        }\n      }\n\n      if(maxindex.length == 1){\n        winstring = this.state.players[maxindex[0]].name + \" wins!\";\n      }\n      else{\n        winstring = \"Draw between \";\n        for(var i = 0; i < maxindex.length; i++){\n          winstring += this.state.players[maxindex[i]].name;\n          if(i == maxindex.length -1){\n            winstring += \"!\";\n          }else{\n            winstring += \" and \";\n          }\n        }\n\n      }\n    }\n    var noScoreString = \"\";\n    if(this.state.noScoreCount > 1 && this.state.noScoreCount < 6){\n      noScoreString = \"There have been no points scored in the past \" + this.state.noScoreCount + \" turns. The game will end after 6 consecutive turns of no scoring.\"\n    }\n    var playersTitle = \"Players\";\n    if(this.state.players.length == 0)\n      playersTitle = \"Waiting for players...\";\n    return(\n      <div className={classname}>\n        <div className=\"title\">\n          {playersTitle}\n        </div>\n        <div className=\"players\">\n          {this.state.players.map((player, i) => this.renderPlayer(player, i, isLobby))}\n        </div>\n        <div className=\"wintext\">\n          {winstring}\n        </div>\n        <div className=\"warning\">\n          {noScoreString}\n        </div>\n      </div>\n    );\n\n  }\n  renderPlayer(player,i, isLobby){\n    var isBorder = \"\";\n    if(i < this.state.players.length-1)\n      isBorder = \" border\";\n    if(isLobby){\n      return(\n        <div className={\"player lobby\"}>\n          {player.name}\n        </div>)\n    }else{\n      return(\n        <div className={\"player\" + isBorder}>\n          <div className=\"playername\">\n          {player.name}\n          </div>\n          <div className=\"score\">\n          {player.score}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderProgressBar(progress){\n    //PAD PROGRESS A BIT TO UPDATE BEFORE PROCESSING FREEZE\n    var loadingProgress = this.state.loadingProgress + 0.05;\n    if(loadingProgress > 1.0)\n      loadingProgress = 1.0;\n\n    var width = loadingProgress * 200;\n    var language = Distributions[this.state.langIndex].name;\n    var progresstext = \"Loading Dictionary for \" + language +  \"...\";\n    if(loadingProgress == 1.0){\n      progresstext = \"Processing Dictionary for \" + language +  \"...\";\n    }\n    return(\n      <div className=\"progress\">\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n        <div className=\"progresstext\">{progresstext}</div>\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n      </div>\n    )\n  }\n\n\n  render() {\n    var scale = scale = Math.min(this.state.width/360, this.state.height/360);\n\n    if(this.state.gameState > 0){\n      return (\n        <div className=\"App\">\n          <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <div className=\"grid\">\n                <div className=\"fields\">\n                  {this.gameGrid.map((line, i) => this.renderSquareLine(line, i, this.state.cursorLocation))}\n\n                </div>\n              </div>\n              {this.renderRightInfo(false)}\n              {this.renderLeftInfo()}\n            </div>\n          </div>\n          <img className=\"smalllogo\" src={wordcastlogo} />\n        </div>\n      );\n    }else{\n      if(this.state.isLoadingDict){\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderProgressBar(this.state.loadingProgress)}\n              </div>\n            </div>\n          </div>\n        );\n      }else{\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderRightInfo(true)}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    }\n    this.classname = \"square \";\n    this.multiplierText = \"\";\n    this.multiplierNum = \"\";\n\n    if(props.square.type == 1){\n      this.classname += \"letterx2\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 2){\n      this.classname += \"letterx3\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 3){\n      this.classname += \"wordx2\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 4){\n      this.classname += \"wordx3\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 5){\n      this.classname += \"startsquare\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n\n    this.selected = false;\n    this.isLetter = false;\n    this.isTempLetter = false;\n\n\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var oldSelect = this.selected;\n    this.selected = nextProps.isSelected;\n    if(oldSelect != this.selected){\n      return true;\n    }\n\n\n    if(nextProps.square.letter != null && !this.isLetter){\n      this.isLetter = true;\n      return true;\n    }\n    var isTempLetter = nextProps.square.tempLetter != null;\n    if(isTempLetter != this.isTempLetter){\n      this.isTempLetter = isTempLetter;\n      return true;\n    }\n\n    return false;\n\n  }\n\n\n  render(){\n    this.selected = this.props.isSelected;\n    var value = \"\";\n    var score = \"\";\n    var classname = this.classname;\n    var multiplierclassname = \"\";\n    var letterStyle = \"\";\n    if(this.props.square.letter != null){\n      classname = \"lettercontainer\";\n      value = this.props.square.letter.value;\n      score = this.props.square.letter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.letter.score == 0)\n        letterStyle = \" fade\";\n    }\n    else if(this.props.square.tempLetter != null){\n      classname = \"lettercontainertemp\";\n      value = this.props.square.tempLetter.value;\n      score = this.props.square.tempLetter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.tempLetter.score == 0)\n        letterStyle = \" fade\";\n    }\n\n    if(this.selected){\n      return(\n        <div className={classname}>\n          <div className={classname + \" selected\"} style={{ 'marginLeft': this.margin}}>\n            <div className={\"multipliertext\" + multiplierclassname}>{this.multiplierText}</div>\n            <div className={\"multipliernum\" + multiplierclassname}>{this.multiplierNum}</div>\n            <div className={\"letter selected\" + letterStyle}>\n              {value}\n              <div className={\"letterscore\"}>\n                {score}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className={classname}>\n          <div className={\"letter\" + letterStyle}>\n            {value}\n            <div className={\"letterscore\"}>\n              {score}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n}\n\nexport default App;\n","(function(exports) {\n  exports.BloomFilter = BloomFilter;\n  exports.fnv_1a = fnv_1a;\n\n  var typedArrays = typeof ArrayBuffer !== \"undefined\";\n\n  // Creates a new bloom filter.  If *m* is an array-like object, with a length\n  // property, then the bloom filter is loaded with data from the array, where\n  // each element is a 32-bit integer.  Otherwise, *m* should specify the\n  // number of bits.  Note that *m* is rounded up to the nearest multiple of\n  // 32.  *k* specifies the number of hashing functions.\n  function BloomFilter(m, k) {\n    var a;\n    if (typeof m !== \"number\"){\n      a = m;\n      m = a.length * 32;\n    }\n\n    var n = Math.ceil(m / 32),\n        i = -1;\n    this.m = m = n * 32;\n    this.k = k;\n\n    if (typedArrays) {\n      var kbytes = 1 << Math.ceil(Math.log(Math.ceil(Math.log(m) / Math.LN2 / 8)) / Math.LN2),\n          array = kbytes === 1 ? Uint8Array : kbytes === 2 ? Uint16Array : Uint32Array,\n          kbuffer = new ArrayBuffer(kbytes * k),\n          buckets = this.buckets = new Int32Array(n);\n      if (a) while (++i < n) buckets[i] = a[i];\n      this._locations = new array(kbuffer);\n    } else {\n      var buckets = this.buckets = [];\n      if (a) while (++i < n) buckets[i] = a[i];\n      else while (++i < n) buckets[i] = 0;\n      this._locations = [];\n    }\n  }\n\n  // See http://willwhim.wpengine.com/2011/09/03/producing-n-hash-functions-by-hashing-only-once/\n  BloomFilter.prototype.locations = function(v) {\n    var k = this.k,\n        m = this.m,\n        r = this._locations,\n        a = fnv_1a(v),\n        b = fnv_1a(v, 1576284489), // The seed value is chosen randomly\n        x = a % m;\n    for (var i = 0; i < k; ++i) {\n      r[i] = x < 0 ? (x + m) : x;\n      x = (x + b) % m;\n    }\n    return r;\n  };\n\n  BloomFilter.prototype.add = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) buckets[Math.floor(l[i] / 32)] |= 1 << (l[i] % 32);\n  };\n\n  BloomFilter.prototype.test = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) {\n      var b = l[i];\n      if ((buckets[Math.floor(b / 32)] & (1 << (b % 32))) === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Estimated cardinality.\n  BloomFilter.prototype.size = function() {\n    var buckets = this.buckets,\n        bits = 0;\n    for (var i = 0, n = buckets.length; i < n; ++i) bits += popcnt(buckets[i]);\n    return -this.m * Math.log(1 - bits / this.m) / this.k;\n  };\n\n  // Turns the bloom filter into a buffer for later storage.\n  BloomFilter.prototype.serialize = function() {\n    // The format is the number of hashes as a uint16, followed by the buckets\n    // data as big endian int32's\n    var bucketLen = this.buckets.length,\n      target = new Buffer((bucketLen << 2) + 2);\n    target.writeUInt16BE(this.k, 0);\n\n    for (var i = 0; i < bucketLen; ++i) {\n      target.writeInt32BE(this.buckets[i], (i << 2) + 2);\n    }\n\n    return target;\n  };\n\n  // Parses a buffer created by a previous call to .serialize into a BloomFilter\n  BloomFilter.deserialize = function(data) {\n    var hashes = data.readUInt16BE(0),\n      count = (data.length - 2) >> 2,\n      buckets = typedArrays ? new Int32Array(count) : new Array(count);\n\n    for (var i = 0; i < count; ++i) {\n      buckets[i] = data.readInt32BE((i << 2) + 2);\n    }\n\n    return new BloomFilter(buckets, hashes);\n  };\n\n  BloomFilter.bytesToString = function(arr) {\n  var out = '';\n  for (let i = 0; i < arr.length; i += 2) {\n    out += String.fromCharCode((arr[i] << 8) | arr[i + 1]);\n  }\n  return out;\n}\n\n  BloomFilter.stringToBytes = function(str) {\n    const arr = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      let code = String.fromCharCode(str[i]);\n      arr[i * 2 + 0] = code >> 8;\n      arr[i * 2 + 1] = code;\n    }\n    return arr;\n  }\n\n  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\n  function popcnt(v) {\n    v -= (v >> 1) & 0x55555555;\n    v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\n    return ((v + (v >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\n  }\n\n  // Fowler/Noll/Vo hashing.\n  // Nonstandard variation: this function optionally takes a seed value that is incorporated\n  // into the offset basis. According to http://www.isthe.com/chongo/tech/comp/fnv/index.html\n  // \"almost any offset_basis will serve so long as it is non-zero\".\n  function fnv_1a(v, seed) {\n    var a = 2166136261 ^ (seed || 0);\n    for (var i = 0, n = v.length; i < n; ++i) {\n      var c = v.charCodeAt(i),\n          d = c & 0xff00;\n      if (d) a = fnv_multiply(a ^ d >> 8);\n      a = fnv_multiply(a ^ c & 0xff);\n    }\n    return fnv_mix(a);\n  }\n\n  // a * 16777619 mod 2**32\n  function fnv_multiply(a) {\n    return a + (a << 1) + (a << 4) + (a << 7) + (a << 8) + (a << 24);\n  }\n\n  // See https://web.archive.org/web/20131019013225/http://home.comcast.net/~bretm/hash/6.html\n  function fnv_mix(a) {\n    a += a << 13;\n    a ^= a >>> 7;\n    a += a << 3;\n    a ^= a >>> 17;\n    a += a << 5;\n    return a & 0xffffffff;\n  }\n})(typeof exports !== \"undefined\" ? exports : this);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wordcastlogo_white.c4dcc4ed.svg\";"],"sourceRoot":""}