{"version":3,"sources":["App.js","../node_modules/express/lib sync","serviceWorker.js","index.js","bloomfilter.js","wordcastlogo_white.svg"],"names":["CancelToken","axios","CHANNEL","source","ROOTDOMAIN","express","require","cors","app","corsOptions","origin","optionsSuccessStatus","get","req","res","next","json","msg","listen","console","log","SquareData","x","y","type","Object","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","selected","letter","tempLetter","isSelected","Player","name","id","androidId","score","letters","Array","turns","clientIndex","Letter","value","App","props","context","_this","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","_handleKeyDown","e","keyCode","state","gameState","langIndex","specialCoords","Boards","dist","setUpBoard","initializeLetterPool","addPlayer","moveCursor","key","i","letterPool","length","toLowerCase","gameGrid","cursorLocation","splice","setState","width","height","players","curTurn","turnCount","noScoreCount","isFirstLetterDown","boardIndex","isDict","isLoadingDict","loadingProgress","isPassAlong","isPro","originTempSquare","originAxis","curDict","handleMessage","bind","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","updateDimensions","componentDidMount","updateSenders","ii","result","charactersLength","charAt","Math","floor","random","_this2","path","Distributions","dictPath","fetch","then","r","text","splitDictRaw","split","splitDict","bloom","BloomFilter","nIndex","item","indexOf","normalize","replace","substr","push","add","falsecount","truecount","test","gib","makeid","percentage1","percentage2","testtrue","testfalse","blob","serialize","string","toString","buffer","Buffer","from","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","deserialize","_this3","addEventListener","_setTimeout","b","ctx","cast","framework","CastReceiverContext","getInstance","options","CastReceiverOptions","maxInactivity","customNamespaces","assign","system","MessageType","JSON","addCustomMessageListener","customEvent","data","senderId","EventType","SENDER_CONNECTED","event","SENDER_DISCONNECTED","handleDisconnect","start","message","connectedSenders","getSenders","debugstring","debugOnScreen","sendToast","undefined","allowPassAlong","sendState","sendHurryUp","enablePro","isPassAlongPlayer","startGame","switchLanguage","index","switchBoard","switchDict","cancelDictDownload","switchPassAlong","removePlayer","cancelGame","dir","placeLetter","jokerValue","endTurn","swapLetters","swapIndices","resetTempLetters","player","sendJoinSuccess","sendCustomMessage","sendPlayerLetters","sendGameStarted","endGame","content","cancel","_this4","dictStatus","total","dictSize","cancelToken","c","onDownloadProgress","progressEvent","percent","loaded","response","catch","err","allow","rand","prevLetter","stringify","endTurnNoScore","targetPlayer","playersSorted","slice","sort","scores","scoresString","nextTurn","tempSquares","getTempSquares","bonusScore","words","wordStrings","isConnected","adjSquares","getAdjSquares","word","getAdjWord","duplicateFound","iii","every","wordString","w","isOnCenterSquare","square","check","checkWords","illegalWords","illegalString","curLetter","totalScore","turnLog","wordMultiplier","letterScore","drawLetters","isEmpty","playerLetters","includes","isTurn","turnName","adjSquare","curSquare","posEndFound","negEndFound","originFound","nextSquares","nextSquare","nextX","nextY","isLegal","offset","oldSquare","drawLettersInit","playerIndex","turnLogJson","availableLetters","diff","newPlayers","newPlayer","sendPassAlongJoinSuccess","langs","dictInfo","boards","langsJson","boardsJson","innerWidth","innerHeight","line","_this5","react__WEBPACK_IMPORTED_MODULE_6___default","className","map","renderSquare","Square","isLobby","_this6","classname","winstring","max","maxindex","noScoreString","playersTitle","renderPlayer","isBorder","progress","language","progresstext","style","_this7","scale","min","transform","renderSquareLine","renderRightInfo","renderLeftInfo","src","wordcastlogo","renderProgressBar","Component","_React$Component","_this8","multiplierText","multiplierNum","isLetter","isTempLetter","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_marku_Desktop_wordcast_react_wordcast_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__","nextProps","oldSelect","multiplierclassname","letterStyle","marginLeft","margin","React","webpackEmptyContext","Error","code","keys","resolve","module","exports","Boolean","location","hostname","match","ReactDOM","render","react_default","getElementById","serviceWorker","ready","registration","unregister","fnv_1a","typedArrays","ArrayBuffer","m","k","n","ceil","kbytes","LN2","array","Uint8Array","Uint16Array","Uint32Array","kbuffer","buckets","Int32Array","_locations","popcnt","v","seed","charCodeAt","d","fnv_multiply","fnv_mix","prototype","locations","l","size","bits","bucketLen","target","writeUInt16BE","writeInt32BE","hashes","readUInt16BE","count","readInt32BE","bytesToString","arr","out","String","fromCharCode","stringToBytes","str","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c2b1ff00.chunk.js","sourcesContent":["import React,  { Component, TimeUnit } from 'react';\nimport ReactDOM from \"react-dom\";\nimport wordcastlogo from './wordcastlogo_white.svg';\nimport './App.css';\nimport Distributions from \"./Distributions.json\";\nimport Boards from \"./Boards.json\";\n\n\nimport BloomFilter from \"./bloomfilter.js\";\n\nimport axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\n\nvar CHANNEL = 'urn:x-cast:com.github.minosvasilias.wordcast';\nvar ROOTDOMAIN = \"https://wordcastapp.com/\";\n\n\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar corsOptions = {\n  origin: ROOTDOMAIN,\n  optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\n}\n\napp.get('/products/:id', cors(corsOptions), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for only ' + ROOTDOMAIN})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n\n\n\nclass SquareData{\n  constructor(x, y, type) {\n    this.x = x;\n    this.y = y;\n    this.type = type; //0 = NORMAL, 1 = LETTER X2, 2 = LETTER X3, 3 = LETTER X4, 4 = WORD X2, 5 = WORD X3, 6 = WORD X4, 5 = START\n    this.selected = false;\n    this.letter = null;\n    this.tempLetter = null;\n    this.isSelected = false;\n  }\n}\nclass Player{\n  constructor(name, id, androidId) {\n    this.name = name;\n    this.id = id;\n    this.androidId = androidId;\n    this.score = 0;\n    this.letters = new Array();\n    this.turns = new Array();\n    this.clientIndex = 0;\n  }\n}\n\nclass Letter{\n  constructor(value, score) {\n    this.value = value;\n    this.score = score;\n  }\n}\n\n\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      players: {},\n      gameState : 0,//0 = JOINING, 1 = RUNNING, 2 = FINISH\n      cursorLocation: [7,7],\n      curTurn: 0,\n      turnCount: 0,\n      noScoreCount: 0,\n      isFirstLetterDown: false,\n      langIndex: 0,\n      boardIndex: 0,\n      isDict: false,\n      isLoadingDict: false,\n      loadingProgress: 0.0,\n      isPassAlong: false,\n      isPro: false\n\n    };\n    this.originTempSquare = null;\n    this.originAxis = [-1,-1];\n\n    /*this.specialCoords = [\n      //LX2\n      [[0,3],[0,11],[2,6],[2,8],\n      [3,0],[3,7],[3,14],\n      [6,6],[6,8],[6,12],[6,2],\n      [7,3],[7,11],\n      [8,6],[8,8],[8,12],[8,2],\n      [11,0],[11,7],[11,14],\n      [14,3],[14,11],[12,6],[12,8]],\n      //LX3\n      [[1,5],[1,9],\n      [5,1],[5,5],[5,9],[5,13],\n      [9,1],[9,5],[9,9],[9,13],\n      [13,5],[13,9]],\n      //WX2\n      [[1,1],[2,2],[3,3],[4,4],\n      [10,10],[11,11],[12,12],[13,13],\n      [13,1],[12,2],[11,3],[10,4],\n      [4,10],[3,11],[2,12],[1,13]],\n      //WX3\n      [[0,0],[0,7],[0,14],\n      [7,0],[7,14],\n      [14,0],[14,7],[14,14]],\n      //START SQUARE\n      [[7,7]]\n    ];*/\n\n    this.curDict = [null, null];\n\n    /*this.specialCoords = Boards[1].dist;\n    this.setUpBoard();*/\n\n\n\n    //this.setUpBloom();\n\n\n\n\n\n\n    this.state.players = new Array();\n\n    this.handleMessage = this.handleMessage.bind(this);\n    this.moveCursor = this.moveCursor.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addPlayer = this.addPlayer.bind(this);\n    this.updateSenders = this.updateSenders.bind(this);\n\n  }\n  setUpBoard(){\n    this.gameGrid = new Array(15);\n    for(var i = 0; i < 15; i++){\n      this.gameGrid[i] = new Array(15);\n      for(var ii = 0; ii < 15; ii++){\n        this.gameGrid[i][ii] =  new SquareData(i,ii,0);\n      }\n    }\n\n    this.letterPool = new Array();\n\n    for(var i = 0; i < this.specialCoords.length; i++){\n      for(var ii = 0; ii < this.specialCoords[i].length; ii++){\n        this.gameGrid[this.specialCoords[i][ii][0]][this.specialCoords[i][ii][1]].type = i+1;\n      }\n    }\n  }\n  makeid(length) {\n   var result           = '';\n   var characters       = 'öäüabcdefghijklmnopqrstuvwxyz';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n }\n setUpBloom(){\n\n      //FIRST, SET INDEX OF DISTRIBUTION\n      var distIndex = 3;\n      var testtruestring = \"alfeñicare\";//SPANISH\"alfeñicaré\";\n      var testfalsestring = \"blobsy\";\n\n      this.state.langIndex = distIndex;\n      this.initializeLetterPool();\n      var path = Distributions[this.state.langIndex].dictPath;\n\n   ////////////////////////////\n       let dict;\n       fetch(path)\n       .then((r) => r.text())\n       .then(text  => {\n         //console.log(text);\n         var splitDictRaw = text.split(\"\\n\");\n         console.log(splitDictRaw);\n         var splitDict = new Array();\n\n         var bloom = new BloomFilter.BloomFilter(\n           5975973,//ITALIAN 14898389,//FRENCH 5072222,//ENGLISH 8868648 ,//GERMAN 32000000,//28755176,//25869786,//16284727,//8192 * 256,//32768 * 256,//32 * 256, // number of bits to allocate.\n           17//ITALIAN 16//FRENCH 17//ENGLISH 17//GERMAN11//10//9//6//16        // number of hash functions.\n         );\n         //var trie = new Trie();\n         //console.log(JsSuffixTrie);\n         //var trie = new JsSuffixTrie();\n\n         // Add some elements to the filter.\n         for(var i = 0; i < splitDictRaw.length; i++){\n           var item = splitDictRaw[i].toLowerCase();\n\n           //TRIM (CAREFUL, ONLY GERMAN AND ENGLISH SO FAR!)\n           //item = item.substring(0, item.length-1);\n\n           //REMOVE DIACRITICS ETC EXCEPT ñ\n           var nIndex = item.indexOf(\"ñ\");\n           item = item.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n           if(nIndex != -1){\n            item = item.substr(0, nIndex) + \"ñ\" + item.substr(nIndex + 1);\n          }\n\n\n           var doAdd = true;\n           /*for(var i = 0; i < item.length; i++){\n             var char = item.charAt(i);\n             if(!this.availableLetters.includes(char)){\n               doAdd = false;\n             }\n           }*/\n\n           if(doAdd){\n             splitDict.push(item);\n             //splitDict[i] = item;\n             bloom.add(item);\n           }\n           //trie.add(item);\n         }\n\n\n         console.log(\"DICT LENGTH: \" + splitDict.length);\n         console.log(splitDict);\n\n               // check contains method\n               //console.log(trie.contains(\"arbeit\"));  // true\n               //console.log(trie.contains(\"fhqap\")); // false\n\n\n               var util = require('util');\n               //var json = util.inspect(trie);\n\n         //var array = [].slice.call(trie.children),\n           //var  json = JSON.stringify(trie);\n         //console.log(json);\n\n         //TMP JSON SAVING\n         /*var json = trie.toJSON();\n         json = JSON.stringify(splitDict);\n         console.log(json);\n         var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         var falsecount = 0;\n         var truecount = 0;\n         for(var i = 0; i < splitDict.length; i++){\n           var item = splitDict[i];\n           var test = bloom.test(item);\n\n           var gib = this.makeid(6);\n           var test2 = bloom.test(gib);\n           if(!test){\n             falsecount += 1;\n             //console.log(gib);\n           }\n           if(test2){\n             truecount += 1;\n             //console.log(gib);\n           }\n         }\n         /*if(splitDict.includes('jäger')){\n           console.log(\"AAARBEIT\");\n         }*/\n         //console.log(splitDict[101069].toLowerCase());\n         console.log(\"FALSE NEGATIVES: \" + falsecount);\n         console.log(\"FALSE POSITIVES: \" + truecount);\n         var percentage1 = (falsecount / splitDict.length) * 100;\n         var percentage2 = (truecount / splitDict.length) * 100;\n         console.log(\"FALSE NEGATIVES PERCENT: \" + percentage1);\n         console.log(\"FALSE POSITIVES PERCENT: \" + percentage2);\n         // Test if an item is in our filter.\n         // Returns true if an item is probably in the set,\n         // or false if an item is definitely not in the set.\n\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         // Serialisation. Note that bloom.buckets may be a typed array,\n         // so we convert to a normal array first.\n         /*var array = [].slice.call(bloom.buckets),\n             json = JSON.stringify(array);\n         console.log(json);*/\n\n         //ALTERNATIVE SERIALIZATION\n         var blob = bloom.serialize();\n         //json = BloomFilter.BloomFilter.bytesToString(blob);\n         //console.log(enc.decode(blob));\n         console.log(blob);\n\n\n         /*var enc = new TextDecoder(\"utf-8\");\n         var encodedblob = enc.decode(blob);\n         var enc2 = new TextEncoder(\"utf-8\");\n         var blob2 = enc2.encode(encodedblob);\n         console.log(blob2);*/\n\n         let string = blob.toString('utf16le');\n         let buffer = Buffer.from(string, 'utf16le');\n         console.log(buffer);\n\n         // Function to download data to a file\n         var data = string;\n         var filename = \"test\";\n         var type = \".json\";\n         var file = new Blob([data], {type: type});\n         if (window.navigator.msSaveOrOpenBlob) // IE10+\n             window.navigator.msSaveOrOpenBlob(file, filename);\n         else { // Others\n             var a = document.createElement(\"a\"),\n                     url = URL.createObjectURL(file);\n             a.href = url;\n             a.download = filename;\n             document.body.appendChild(a);\n             a.click();\n             setTimeout(function() {\n                 document.body.removeChild(a);\n                 window.URL.revokeObjectURL(url);\n             }, 0);\n         }\n\n         //console.log(json);\n\n\n         var bloom = BloomFilter.BloomFilter.deserialize(blob);\n         var testtrue = bloom.test(testtruestring);\n         var testfalse = bloom.test(testfalsestring);\n         console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         fetch('/french.bloom')\n         .then((r) => r.text())\n         .then(text  => {\n           //var enc = new TextEncoder(\"utf-16\");\n           //var blob = enc.encode(json);\n           var blob = Buffer.from(text, 'utf16le');\n           //var blob = BloomFilter.BloomFilter.stringToBytes(text);\n             console.log(blob);\n           var bloom = BloomFilter.BloomFilter.deserialize(blob);\n           var testtrue = bloom.test(testtruestring);\n           var testfalse = bloom.test(testfalsestring);\n           console.log(\"TESTTRUE = \" + testtrue + \", TESTFALSE: \" + testfalse);\n\n         });\n         //TMP JSON SAVING\n         /*var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(json);\n\n\n         //TMP JSON SAVING\n         var link = ReactDOM.findDOMNode(this.refs.Link1);\n         link.href = dataUri;\n         console.log(\"JSON READY TO DOWNLOAD\");*/\n\n\n         // Deserialisation. Note that the any array-like object is supported, but\n         // this will be used directly, so you may wish to use a typed array for\n         // performance.\n         //var bloom = new BloomFilter(array, 16);*/\n       });\n }\n\n\n\n\n\n\n\n\n\n\n _handleKeyDown = (e) => {\n\n   switch(e.keyCode){\n     //CONSOLE KEY TO START\n     case 220:\n      this.state.gameState = 1;\n      this.state.langIndex = 0;\n      this.specialCoords = Boards[2].dist;\n      this.setUpBoard();\n      this.initializeLetterPool();\n      this.addPlayer(\"Ajax\", \"1\", \"1\", false, false);\n      this.addPlayer(\"Theseus\", \"2\", \"2\", false, false);\n      this.addPlayer(\"Asterius\", \"3\", \"3\", false, false);\n      this.addPlayer(\"Paris\", \"4\", \"4\", false, false);\n      this.addPlayer(\"Achilles\", \"5\", \"5\", false, false);\n      this.addPlayer(\"Agamemnon\", \"6\", \"6\", false, false);\n      break;\n\n     case 37:\n       this.moveCursor(\"LEFT\");\n       break;\n     case 38:\n       this.moveCursor(\"UP\");\n       break;\n     case 39:\n       this.moveCursor(\"RIGHT\");\n       break;\n     case 40:\n       this.moveCursor(\"DOWN\");\n       break;\n   }\n\n   //IF LETTER\n   console.log(e.key);\n   for(var i = 0; i < this.letterPool.length; i++){\n     var letter = this.letterPool[i];\n     if(letter.value.toLowerCase() == e.key){\n       var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n       curSquare.letter = letter;\n       this.letterPool.splice(i, 1);\n\n     }\n   }\n   this.setState({gameState: this.state.gameState});\n\n }\n\n\n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n\n\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n\n    //PREVENT TIMEOUT\n    window._setTimeout = window.setTimeout;\n    window.setTimeout = function(a, b) {\n        // disable setTimeout so chromecast won't kill us after 5 minutes...\n    };\n\n    //LOAD CAST LOGIC\n\n    this.ctx = window.cast.framework.CastReceiverContext.getInstance();\n    var options = new window.cast.framework.CastReceiverOptions();\n    options.maxInactivity = 3600; //Development only\n\n\n    options.customNamespaces = Object.assign({});\n    options.customNamespaces[CHANNEL] = window.cast.framework.system.MessageType.JSON;\n\n    var handleMessage = this.handleMessage;\n    this.ctx.addCustomMessageListener(CHANNEL, function(customEvent) {\n        handleMessage(customEvent.data, customEvent.senderId, customEvent.data.id);\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_CONNECTED,\n        event => {\n        //CONNECT\n    });\n    this.ctx.addEventListener(window.cast.framework.system.EventType.SENDER_DISCONNECTED,\n        event => {\n        this.handleDisconnect(event.senderId);\n    });\n    this.ctx.start(options);\n\n    //this.updateSenders();\n\n\n  }\n\n  debugOnScreen(message){\n    //document.getElementById(\"content\").innerHTML = message;\n    console.log(message);\n  }\n\n  updateSenders(id){\n    this.connectedSenders = this.ctx.getSenders();\n    var debugstring = \"\";\n    for(var i = 0; i < this.connectedSenders.length; i++){\n      debugstring += this.connectedSenders[i].id + \", \";\n    }\n    this.debugOnScreen(\"MESSAGE RECEIVED FROM ID: \" + id + \" - CONNECTED IDS: \" + debugstring);\n  }\n\n  handleDisconnect(id){\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].id == id){\n        if(this.state.gameState == 0){\n          this.sendToast(this.state.players[i].name + \" disconnected\", undefined);\n          this.state.players.splice(i, 1);\n          this.setState({players: this.state.players})\n          if(this.state.players.length == 1){\n            this.allowPassAlong(true);\n          }\n          else if(this.state.players.length == 0){\n            this.setState({isPassAlong: false});\n            this.allowPassAlong(true);\n          }\n        }\n      }\n    }\n  }\n\n  handleMessage(msg, id, androidId){\n    this.updateSenders(id);\n    if(msg.msg == \"STATE\"){\n        this.sendState(id, androidId);\n    }\n    if(msg.msg == \"HURRYUP\"){\n        this.sendHurryUp();\n    }\n    if(msg.msg == \"ENABLEPRO\"){\n        this.enablePro();\n    }\n    //LOBBY ONLY\n    if(this.state.gameState == 0){\n      if(msg.msg == \"JOIN\"){\n          this.addPlayer(msg.name, id, androidId, msg.isPro, msg.isPassAlongPlayer);\n      }\n      if(msg.msg == \"STARTGAME\"){\n          this.startGame(id, androidId);\n      }\n      if(msg.msg == \"LANGUAGE\"){\n          this.switchLanguage(msg.index);\n      }\n      if(msg.msg == \"BOARD\"){\n          this.switchBoard(msg.index);\n      }\n      if(msg.msg == \"DICT\"){\n          this.switchDict(msg.isDict);\n      }\n      if(msg.msg == \"DICTLOADCANCEL\"){\n          this.cancelDictDownload();\n      }\n      if(msg.msg == \"PASSALONG\"){\n          this.switchPassAlong(msg.isPassAlong);\n      }\n      if(msg.msg == \"REMOVEPLAYER\"){\n          this.removePlayer(msg.index);\n      }\n    }\n    if(msg.msg == \"CANCEL\"){\n        this.cancelGame(androidId);\n    }\n    //CURRENT PLAYER ONLY\n    if(this.state.players.length == 0 || this.state.gameState != 1)\n      return;\n    if(id != this.state.players[this.state.curTurn].id)\n      return;\n    if(msg.msg == \"MOVE\"){\n        this.moveCursor(msg.dir);\n    }\n    if(msg.msg == \"PLACE\"){\n      this.placeLetter(msg.index, msg.jokerValue, id);\n    }\n    if(msg.msg == \"ENDTURN\"){\n        this.endTurn(id);\n    }\n    if(msg.msg == \"SWAP\"){\n        this.swapLetters(msg.swapIndices, id);\n    }\n    if(msg.msg == \"RESET\"){\n        this.resetTempLetters();\n    }\n  }\n\n  sendState(id, androidId){\n    var json;\n\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n      }\n    }\n\n    if(this.state.gameState == 0){\n      if(player != null){\n        player.id = id;\n        this.sendJoinSuccess(player);\n        return;\n      }else{\n        json = {\"msg\":\"NAME\"};\n        this.ctx.sendCustomMessage(CHANNEL , id,  json);\n        return;\n      }\n    }\n    else if(this.state.gameState == 1){\n\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        //RESET LETTERS IF ITS REJOINING PLAYERS TURN IN ORDER TO AVOID UI MESS\n        if(player.androidId == this.state.players[this.state.curTurn].androidId){\n          this.resetTempLetters();\n        }else{\n          this.sendPlayerLetters(player);\n        }\n        this.sendGameStarted(player);\n        return;\n      }\n    }\n    else if(this.state.gameState == 2){\n      if(player != null){\n        //LET PLAYER REJOIN AND SEND INFO\n        player.id = id;\n        this.endGame(player);\n        return;\n      }\n    }\n    json = {\"msg\":\"GAMEONGOING\"};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n\n\n  }\n\n  sendToast(content, id){\n    var json = {\"msg\":\"TOAST\",\"content\":content};\n    this.ctx.sendCustomMessage(CHANNEL , id,  json);\n  }\n\n  cancelGame(androidId){\n    var player = null;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == androidId){\n        player = this.state.players[i];\n        this.sendToast(player.name + \" has cancelled the game!\", undefined);\n      }\n    }\n\n    this.setState({gameState: 0, cursorLocation: [7,7], curTurn: 0,\n                  turnCount: 0, noScoreCount: 0, isFirstLetterDown: false});\n    this.setUpBoard();\n\n    for(var i = 0; i < this.state.players.length; i++){\n      this.state.players[i].score = 0;\n      this.state.players[i].letters = new Array();\n      this.state.players[i].turns = new Array();\n      this.sendState(this.state.players[i].id, this.state.players[i].androidId);\n    }\n  }\n\n  cancelDictDownload(){\n    if(this.cancel != null){\n      this.cancel();\n      delete this.curDict;\n    }\n  }\n\n  switchDict(isDict){\n    if(this.state.gameState != 0){\n      return;\n    }\n    this.setState({isDict: isDict});\n    var json = {\"msg\":\"DICT\",\"isDict\":isDict};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n\n\n    if(isDict){\n      var langIndex = this.state.langIndex;\n      if(this.curDict == undefined || this.curDict[0] != Distributions[langIndex].name){\n        delete this.curDict;\n\n\n        var dist = Distributions[langIndex];\n        if(dist.dictStatus != 1 || this.state.isLoadingDict)\n          return;\n\n        var json = {\"msg\":\"DICTLOADSTART\"};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        this.setState({isLoadingDict: true});\n        var total = dist.dictSize;\n        let cancel;\n        axios.get(ROOTDOMAIN + dist.dictPath, {\n        //axios.get(dist.dictPath, {\n          cancelToken: new CancelToken(function executor(c) {\n            cancel = c;\n          }),\n          onDownloadProgress: (progressEvent) => {\n            //this.state.players[0].name = progressEvent.loaded;\n            var percent = progressEvent.loaded / total;\n            this.setState({loadingProgress: percent});\n          }\n        })\n        .then((response) => {\n          //PARSE TXT INTO ARRAY\n          //OLD NON BLOOM WAY\n          /*var splitDict = response.data.split(\"\\n\");\n          for(var i = 0; i < splitDict.length; i++){\n            var item = splitDict[i].toLowerCase();\n            var item = item.substring(0, item.length-1);\n            splitDict[i] = item;\n          }*/\n          //BLOOM\n          var blob = Buffer.from(response.data, 'utf16le');\n          var bloom = BloomFilter.BloomFilter.deserialize(blob);\n\n          this.sendToast(\"LOADED DICTIONARY\", undefined);\n          this.curDict = [Distributions[langIndex].name, bloom];\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        .catch((err) => {\n          this.sendToast(\"LOAD FAILED\", undefined);\n          this.setState({isLoadingDict: false, loadingProgress: 0.0});\n          var json = {\"msg\":\"DICTLOADEND\"};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n          this.setState({isDict: false});\n          var json = {\"msg\":\"DICT\",\"isDict\":false};\n          this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n        })\n        this.cancel = cancel;\n      }\n\n    }\n\n  }\n\n  switchLanguage(index){\n    if(index != this.state.langIndex){\n      this.setState({langIndex: index});\n      var json = {\"msg\":\"LANGUAGE\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n\n      this.setState({isDict: false});\n      var json = {\"msg\":\"DICT\",\"isDict\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  switchBoard(index){\n    if(index != this.state.boardIndex){\n      this.setState({boardIndex: index});\n      var json = {\"msg\":\"BOARD\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }\n  }\n\n  switchPassAlong(isPassAlong){\n    if(this.state.players.length == 1){\n        this.setState({isPassAlong: isPassAlong});\n        var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":isPassAlong};\n        this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n    }else{\n      var json = {\"msg\":\"PASSALONG\",\"isPassAlong\":false};\n      this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n      this.allowPassAlong(false);\n    }\n  }\n\n  allowPassAlong(allow){\n    var json = {\"msg\":\"ALLOWPASSALONG\",\"allow\":allow};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n  }\n\n  sendHurryUp(){\n    var json = {\"msg\":\"HURRYUP\"};\n    var player = this.state.players[this.state.curTurn];\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  swapLetters(swapIndices, id){\n    if(this.letterPool.length < 7){\n      this.sendToast(\"You can't swap with less than 7 letters left in the pool!\", id);\n      return;\n    }\n    if(swapIndices.length == 0){\n      this.sendToast(\"You must select at least one letter to swap!\", id);\n      return;\n    }\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    var swapLetters = new Array();\n    for(var i = 0; i < swapIndices.length; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      var prevLetter = player.letters[swapIndices[i]];\n      swapLetters.push(prevLetter);\n\n      player.letters[swapIndices[i]] = letter;\n      this.letterPool.splice(rand, 1);\n    }\n    //ONLY ADD OLD LETTER TO POOL AFTER ALL NEW ONES ARE DRAWN\n    for(var i = 0; i < swapLetters.length; i++){\n      this.letterPool.push(swapLetters[i]);\n    }\n\n    this.setState({players: this.state.players});\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n    this.endTurnNoScore(id);\n  }\n\n  endGame(targetPlayer){\n    this.setState({gameState: 2});\n\n    var playersSorted = this.state.players.slice();\n    playersSorted.sort(function(a, b){\n        return a.score - b.score;\n    });\n    var scores = new Array();\n    for(var i = 0; i < playersSorted.length; i++){\n      scores.push({\"name\": playersSorted[i].name, \"score\":playersSorted[i].score});\n      playersSorted[i].clientIndex = i;\n    }\n    for(var i = 0; i < playersSorted.length; i++){\n      var player = playersSorted[i];\n      if(targetPlayer != null && player.androidId == targetPlayer.androidId ||\n        targetPlayer == null){\n          var scoresString = JSON.stringify(scores);\n          var json = {\"msg\":\"GAMEENDED\", \"clientIndex\":player.clientIndex, \"scores\":scoresString};\n          this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n      }\n\n    }\n  }\n\n  endTurnNoScore(id){\n    var noScoreCount = this.state.noScoreCount + 1;\n    this.state.players[this.state.curTurn].turns.push([]);\n    this.setState({noScoreCount: noScoreCount});\n\n    if(noScoreCount < 6){\n      this.nextTurn();\n    }else{\n      this.endGame(null);\n    }\n  }\n\n  endTurn(id){\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n        this.endTurnNoScore(id);\n        return;\n\n    }\n    var bonusScore = 0;\n    if(tempSquares.length == 7){\n      bonusScore = 50;\n    }\n    //FIND WORDS TO SCORE\n    var words = new Array();\n    var wordStrings = new Array();\n    var mainWord = null;\n    var isConnected = false;\n    for(var i = 0; i < tempSquares.length; i++){\n      var adjSquares = this.getAdjSquares(tempSquares[i]);\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(adjSquares[ii].letter != null)\n            isConnected = true;\n          //TRACE TEMPLETTER WORD\n          var word = this.getAdjWord(adjSquares[ii],tempSquares[i]).word;\n\n          word.sort(function(a, b){\n            if(a.x != b.x){\n              return a.x - b.x;\n            }\n            else{\n              return a.y - b.y;\n            }\n          });\n\n          //CHECK FOR DUPLICATE\n          var duplicateFound = false;\n          for(var iii = 0; iii < words.length; iii++){\n            if(word.length === words[iii].length && word.every(function(value, index) { return value === words[iii][index]})){\n              duplicateFound = true;\n            }\n          }\n          if(!duplicateFound){\n            words.push(word);\n            //FORM WORD STRING\n            var wordString = \"\";\n            for(var w = 0; w < word.length; w++){\n              if(word[w].letter != null)\n                wordString += word[w].letter.value;\n              if(word[w].tempLetter != null)\n                wordString += word[w].tempLetter.value;\n            }\n            wordStrings.push(wordString);\n          }\n          //mainWord = word;\n\n        }\n      }\n    }\n    if(!isConnected && this.state.isFirstLetterDown){\n      this.resetTempLetters();\n      this.sendToast(\"Word must connect to already existing one!\", id);\n      return;\n    }\n\n    //FIRST TURN MAY JUST BE ONE LETTER\n\n    if(tempSquares.length == 1 && !this.state.isFirstLetterDown){\n      var word = new Array();\n      word.push(tempSquares[0]);\n      words.push(word);\n    }\n    if(!this.state.isFirstLetterDown && words.length > 0){\n      var word = words[0];\n      var isOnCenterSquare = false;\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.x == 7 && square.y == 7){\n          isOnCenterSquare = true;\n        }\n      }\n      if(!isOnCenterSquare){\n        this.resetTempLetters();\n        this.sendToast(\"The first word must use the center square!\", id);\n        return;\n      }\n    }\n\n    //CHECK DICT IF ENABLED\n    if(this.state.isDict){\n      var check = this.checkWords(wordStrings);\n      var illegalWords = check.illegalWords;\n      if(illegalWords.length > 0){\n        this.resetTempLetters();\n        this.sendToast(check.illegalString, id);\n        return;\n      }\n    }\n\n\n  //SPECIAL RULES FOR SPANISH\n  if(Distributions[this.state.langIndex].name == \"Español\"){\n      for(var w = 0; w < words.length; w++){\n        var word = words[w];\n        var prevLetter = \"\";\n        for(var i = 0; i < word.length; i++){\n          var square = word[i];\n          var curLetter = \"\";\n          if(square.tempLetter != null){\n            curLetter = square.tempLetter.value;\n          }else{\n            curLetter = square.letter.value;\n          }\n          if(i != 0){\n            if(prevLetter == \"C\" && curLetter == \"H\" ||\n               prevLetter == \"L\" && curLetter == \"L\" ||\n               prevLetter == \"R\" && curLetter == \"R\"){\n                 this.resetTempLetters();\n                 this.sendToast(\"You must use the \" + prevLetter + curLetter + \" letter instead of \" + prevLetter + \" and \" + curLetter + \" separately!\", id);\n                 return;\n            }\n          }\n          prevLetter = curLetter;\n        }\n      }\n    }\n    //////////////////////////////////\n\n\n    //SCORE WORDS\n    var totalScore = 0;\n    var turnLog = new Array();\n    var debugstring = \"\";\n    for(var w = 0; w < words.length; w++){\n      debugstring += \" --- WORD: \";\n      var word = words[w];\n      var score = 0;\n      var wordMultiplier = 1;\n      var wordString = \"\";\n      for(var i = 0; i < word.length; i++){\n        var square = word[i];\n        if(square.tempLetter != null){\n          square.letter = square.tempLetter;\n          square.tempLetter = null;\n        }\n        var letterScore = 0;\n        if(square.type == 1){\n          letterScore = square.letter.score * 2;\n        }\n        else if(square.type == 2){\n          letterScore = square.letter.score * 3;\n        }\n        else if(square.type == 3){\n          letterScore = square.letter.score * 4;\n        }\n        else{\n          letterScore = square.letter.score;\n        }\n        score += letterScore;\n\n\n\n\n\n\n        debugstring += square.letter.value + \"(\"+letterScore+\")-\";\n        wordString += square.letter.value;\n        if(square.letter.value == \"\"){\n          wordString += \"_\";\n        }\n        //ACCOUNT FOR PROBABLY IMPOSSIBLE SCENARIO OF BOTH WORD MULTIPLIERS USED\n        if(square.type == 4 || square.type == 7){\n          wordMultiplier = wordMultiplier * 2;\n        }\n        if(square.type == 5){\n          wordMultiplier = wordMultiplier * 3;\n        }\n        if(square.type == 6){\n          wordMultiplier = wordMultiplier * 4;\n        }\n      }\n      score = score * wordMultiplier;\n      totalScore += score;\n      wordStrings.push(wordString);\n      turnLog.push([wordString,score]);\n      debugstring += \" SCORE: \" + score;\n    }\n\n\n\n\n    //APPLY SCORE\n    totalScore += bonusScore;\n    debugstring += \" --- BONUS: + \" + bonusScore + \" --- TOTAL: \" + totalScore;\n\n\n    //END NO SCORE STREAK\n    this.setState({noScoreCount: 0});\n    //IF VERY FIRST TURN IS A PASS, THIS MAKES SURE WE KNOW WHEN THE GAME REALLY STARTED\n    this.state.isFirstLetterDown = true;\n    this.state.players[this.state.curTurn].score += totalScore;\n\n    //CHANGE TYPE OF USED SQUARES TO ZERO: SPECIAL TYPES CAN ONLY BE USED ON THE TURN THEY ARE COVERED\n    for(var w = 0; w < words.length; w++){\n      var word = words[w];\n      for(var i = 0; i < word.length; i++){\n        word[i].type = 0;\n      }\n    }\n\n    //ADD TURN TO PLAYER HISTORY\n    this.state.players[this.state.curTurn].turns.push(turnLog);\n\n\n    // DEBUG\n    var dstring = \"\";\n    this.debugOnScreen(\"WORD SCORED: \" + debugstring);\n\n    this.drawLetters(this.state.players[this.state.curTurn]);\n\n    //CHECK FOR GAME END\n    var isEmpty = true;\n    var playerLetters = this.state.players[this.state.curTurn].letters;\n    for(var i = 0; i < playerLetters.length; i++){\n      if(playerLetters[i] != null){\n        isEmpty = false;\n      }\n    }\n    if(isEmpty)\n      this.endGame(null);\n\n    //SWITCH TURNS\n    this.nextTurn();\n  }\n\n  checkWords(words){\n    var bloom = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = bloom.test(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n        if(i != words.length-1){\n          illegalString += \", \";\n        }\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  checkWordsOLD(words){\n    var splitDict = this.curDict[1];\n    var illegalWords = new Array();\n    var illegalString = \"\";\n    for(var i = 0; i < words.length; i++){\n      var isWord = splitDict.includes(words[i].toLowerCase());\n      if(!isWord){\n        illegalWords.push(words[i]);\n        illegalString += words[i];\n      }\n      if(i != words.length-1){\n        illegalString += \", \";\n      }\n    }\n    if(words.length == 1){\n      illegalString += \" is an invalid word!\"\n    }else{\n      illegalString += \" are invalid words!\";\n    }\n    return {illegalWords: illegalWords, illegalString: illegalString};\n\n  }\n\n  nextTurn(){\n    var nextTurn = this.state.curTurn + 1;\n    var oldTurn = this.state.curTurn;\n    if(nextTurn >= this.state.players.length){\n      nextTurn = 0;\n    }\n    this.setState({turnCount: this.state.turnCount+1})\n    this.setState({curTurn:nextTurn});\n    for(var i = 0; i<this.state.players.length; i++){\n      var isTurn = nextTurn == i;\n      var turnName = this.state.players[nextTurn].name;\n\n      var turnLogJson = JSON.stringify(this.state.players[i].turns);\n      var json = {\"msg\":\"NEXTTURN\", \"isTurn\":isTurn, \"turnName\":turnName, \"turnLog\":turnLogJson};\n      this.ctx.sendCustomMessage(CHANNEL , this.state.players[i].id,  json);;\n    }\n  }\n\n  getTempSquares(){\n    var tempSquares = new Array();\n    for(var i = 0; i < this.gameGrid.length; i++){\n      for(var ii = 0; ii < this.gameGrid[i].length; ii++){\n        var square = this.gameGrid[i][ii];\n        if(square.tempLetter != null){\n          tempSquares.push(square);\n        }\n      }\n    }\n    return tempSquares;\n  }\n\n  getAdjSquares(square){\n    var x = square.x;\n    var y = square.y;\n    var adjSquares = new Array();\n    if(x+1<15)\n      adjSquares.push(this.gameGrid[x+1][y]);\n    if(x-1>-1)\n      adjSquares.push(this.gameGrid[x-1][y]);\n    if(y+1<15)\n      adjSquares.push(this.gameGrid[x][y+1]);\n    if(y-1>-1)\n      adjSquares.push(this.gameGrid[x][y-1]);\n    return adjSquares;\n  }\n\n  getAdjWord(adjSquare, curSquare){\n    var dir = [adjSquare.x - curSquare.x, adjSquare.y - curSquare.y];\n    var posEndFound = false;\n    var negEndFound = false;\n    var originFound = false;\n    var word = new Array();\n    word.push(curSquare);\n    //START WITH CURRENT SQUARE FOR BOTH DIRECTIONS\n    var nextSquares = [curSquare,curSquare];\n    while(!posEndFound || !negEndFound){\n      //POSITIVE DIR\n      var nextX = nextSquares[0].x+dir[0];\n      var nextY = nextSquares[0].y+dir[1];\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[0] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          posEndFound = true;\n        }\n      }\n      else{\n        posEndFound = true;\n      }\n      //NEGATIVE DIR\n      nextX = nextSquares[1].x+(dir[0]*-1);\n      nextY = nextSquares[1].y+(dir[1]*-1);\n      if(nextX>-1 && nextX<15 && nextY>-1 && nextY<15){\n        var nextSquare = this.gameGrid[nextX][nextY];\n        if(nextSquare.tempLetter != null || nextSquare.letter != null){\n          nextSquares[1] = nextSquare;\n          word.push(nextSquare);\n          if(nextSquare.x == this.originTempSquare.x && nextSquare.y == this.originTempSquare.y){\n            originFound = true;\n          }\n        }\n        else{\n          negEndFound = true;\n        }\n      }\n      else{\n        negEndFound = true;\n      }\n    }\n    return {word : word, originFound : originFound}\n  }\n\n  placeLetter(index, jokerValue, id){\n    var curSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var curLetter = this.state.players[this.state.curTurn].letters[index];\n    var isLegal = true;\n    if(curSquare.letter != null || curSquare.tempLetter != null || curLetter == null){\n      isLegal = false;\n      this.sendToast(\"This square is already in use!\", id);\n    }\n    var tempSquares = this.getTempSquares();\n    if(tempSquares.length == 0){\n      this.originTempSquare = curSquare;\n      this.debugOnScreen(\"ORIGINTEMPSQUARE: \" + this.originTempSquare.x + \",\"+this.originTempSquare.y);\n\n    }\n    else if(tempSquares.length > 0){\n      var adjSquares = this.getAdjSquares(curSquare);\n      var originFound = false;\n\n      for(var ii = 0; ii < adjSquares.length; ii++){\n        if(adjSquares[ii].letter != null || adjSquares[ii].tempLetter != null){\n          if(this.getAdjWord(adjSquares[ii], curSquare).originFound)\n            originFound = true;\n\n        }\n      }\n      if(!originFound){\n        isLegal = false;\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            this.sendToast(\"You may only place letters in one straight line!\", id);\n          }else{\n            this.sendToast(\"All placed letters must be connected!\", id);\n          }\n        }else{\n          this.sendToast(\"All placed letters must be connected!\", id);\n        }\n      }\n      else{\n\n        if(tempSquares.length == 1){\n          if(this.originTempSquare.x == curSquare.x){\n            this.originAxis = [curSquare.x,-1];\n          }else{\n            this.originAxis = [-1,curSquare.y];\n          }\n        }\n        if(tempSquares.length > 1){\n          if(this.originAxis[0] != -1 && curSquare.x != this.originAxis[0] ||\n             this.originAxis[1] != -1 && curSquare.y != this.originAxis[1] ){\n            isLegal = false;\n            this.sendToast(\"You may only place letters in one straight line!\", id);\n          }\n        }\n        this.debugOnScreen(\"ORIGIN FOUND! AXIS: \" + this.originAxis[0] +\",\" +this.originAxis[1]);\n\n      }\n    }\n\n\n    if(isLegal){\n      if(curLetter.value == \"\"){\n        curLetter.value = jokerValue;\n      }\n      curSquare.tempLetter = curLetter;\n      this.state.players[this.state.curTurn].letters[index] = null;\n      this.setState({players: this.state.players});\n      var json = {\"msg\":\"PLACED\",\"index\":index};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n    }\n  }\n\n  resetTempLetters(){\n    var tempSquares = this.getTempSquares(false);\n    var player = this.state.players[this.state.curTurn];\n    var offset = 0;\n    for(var i = 0; i < tempSquares.length; i++){\n      while(player.letters[i+offset] != null){\n        offset += 1;\n      }\n      if(tempSquares[i].tempLetter.score == 0){\n        tempSquares[i].tempLetter.value = \"\";\n      }\n      player.letters[i+offset] = tempSquares[i].tempLetter;\n      tempSquares[i].tempLetter = null;\n    }\n    this.setState({players: this.state.players});\n    this.sendPlayerLetters(player);\n  }\n\n  moveCursor(dir){\n    var oldSquare = this.gameGrid[this.state.cursorLocation[0]][this.state.cursorLocation[1]];\n    var x = this.state.cursorLocation[0];\n    var y = this.state.cursorLocation[1];\n    this.debugOnScreen(\"MOVING CURSOR \" + dir);\n    switch(dir){\n      case \"UP\":\n        y -= 1;\n        break;\n      case \"DOWN\":\n        y += 1;\n        break;\n      case \"LEFT\":\n        x -= 1;\n        break;\n      case \"RIGHT\":\n        x += 1;\n        break;\n      default:\n        break;\n    }\n    if(x > -1 && x < 15 && y > -1 && y < 15){\n      var curSquare = this.gameGrid[x][y];\n      oldSquare.isSelected = false;\n      curSquare.isSelected = true;\n      this.setState({cursorLocation:[x,y]});\n      //this.debugOnScreen(\"MOVED CURSOR TO \"+ this.state.cursorLocation[0] + \",\" + this.state.cursorLocation[1]);\n    }\n\n  }\n\n  startGame(id, androidId){\n    if(this.state.isPassAlong && this.state.players.length < 2){\n      var player = null;\n      for(var i = 0; i < this.state.players.length; i++){\n        if(this.state.players[i].androidId == androidId){\n          player = this.state.players[i];\n        }\n      }\n      var json = {\"msg\":\"CHOOSEPLAYERS\", \"name\":player.name};\n      this.ctx.sendCustomMessage(CHANNEL , id,  json);\n      return;\n    }\n    this.debugOnScreen(\"GAME STARTED\");\n\n    this.specialCoords = Boards[this.state.boardIndex].dist;\n    this.setUpBoard();\n\n    this.initializeLetterPool();\n    this.gameGrid[7][7].isSelected = true;\n    this.setState({cursorLocation:[7,7]});\n\n    for(var i = 0; i<this.state.players.length; i++){\n      var player = this.state.players[i];\n      this.drawLettersInit(player);\n      this.sendGameStarted(player);\n    }\n    this.setState({gameState:1});\n  }\n\n  sendGameStarted(player){\n    var playerIndex = -1;\n    for(var i = 0; i < this.state.players.length; i++){\n      if(this.state.players[i].androidId == player.androidId){\n        playerIndex = i;\n      }\n    }\n    var isTurn = this.state.curTurn == playerIndex;\n    var turnName = this.state.players[this.state.curTurn].name;\n    var turnLogJson = JSON.stringify(this.state.players[playerIndex].turns);\n    var json = {\"msg\":\"GAMESTARTED\", \"isTurn\":isTurn, \"turnName\":turnName, \"letters\":this.availableLetters, \"turnLog\":turnLogJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n  initializeLetterPool(){\n    var letters = Distributions[this.state.langIndex].dist;\n    this.letterPool = new Array();\n    this.availableLetters = new Array();\n    for(var i = 0; i < letters.length; i++){\n      if(letters[i].length > 0){\n        for(var ii = 0; ii < letters[i].length; ii++){\n          if(!this.availableLetters.includes(letters[i][ii][0]) && letters[i][ii][0] != \"\"){\n            this.availableLetters.push(letters[i][ii][0]);\n          }\n          for(var iii = 0; iii < letters[i][ii][1]; iii++){\n            var letter = new Letter(letters[i][ii][0],i);\n            this.letterPool.push(letter);\n          }\n        }\n      }\n    }\n    this.availableLetters.sort();\n    console.log(this.availableLetters);\n  }\n\n  sendPlayerLetters(player){\n    var lettersJson = JSON.stringify(player.letters);\n    var json = {\"msg\":\"LETTERSDRAW\",\"letters\":lettersJson};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n  drawLettersInit(player){\n    var diff = 7 - player.letters.length;\n    for(var i = 0; i < diff; i++){\n      var rand = Math.floor(Math.random()*this.letterPool.length);\n      var letter = this.letterPool[rand];\n      this.letterPool.splice(rand, 1);\n      player.letters.push(letter);\n    }\n    this.sendPlayerLetters(player);\n  }\n  drawLetters(player){\n    for(var i = 0; i < 7; i++){\n      if(player.letters[i] == null){\n        if(this.letterPool.length != 0){\n          var rand = Math.floor(Math.random()*this.letterPool.length);\n          var letter = this.letterPool[rand];\n          player.letters[i] = letter;\n          this.letterPool.splice(rand, 1);\n        }\n      }\n    }\n    this.sendPlayerLetters(player);\n  }\n\n  addPlayer(name, id, androidId, isPro, isPassAlongPlayer){\n    if(!isPassAlongPlayer){\n      if(this.state.isPassAlong){\n        this.sendToast(\"You may not join a game that is in Pass-Along mode!\", id)\n        return;\n      }\n      for(var i = 0; i < this.state.players.length; i++){\n        if(this.state.players[i].androidId == androidId){\n          return;\n        }\n      }\n    }\n\n    if(this.state.players.length > 4){\n      this.sendToast(\"Sorry, the maximum amount of players is \" + this.state.players.length, id);\n      return;\n    }\n\n    var newPlayers = this.state.players.slice();\n    var newPlayer = new Player(name, id, androidId);\n    newPlayers.push(newPlayer);\n    this.setState({players:newPlayers})\n    this.debugOnScreen(\"NEW PLAYER: \" + name + \", ID: \" + id);\n\n    if(isPro){\n      this.enablePro();\n    }\n\n    if(!isPassAlongPlayer){\n      this.sendJoinSuccess(newPlayer);\n    }\n    else{\n      this.sendPassAlongJoinSuccess(newPlayer);\n    }\n  }\n\n  removePlayer(index){\n    this.state.players.splice(index, 1);\n    this.setState({players: this.state.players})\n  }\n\n  enablePro(){\n    this.setState({isPro:true});\n    var json = {\"msg\":\"ISPRO\"};\n    this.ctx.sendCustomMessage(CHANNEL , undefined,  json);\n  }\n\n\n  sendJoinSuccess(player){\n    //GET AVAILABLE LANGUAGES\n    var langs = new Array();\n    for(var i = 0; i < Distributions.length; i++){\n      langs.push({name:Distributions[i].name, dictStatus:Distributions[i].dictStatus, dictInfo:Distributions[i].dictInfo});\n    }\n    var boards = new Array();\n    for(var i = 0; i < Boards.length; i++){\n      boards.push(Boards[i].name);\n    }\n    var langsJson = JSON.stringify(langs);\n    var boardsJson = JSON.stringify(boards);\n    var json = {\"msg\":\"JOINSUCCESS\", \"langs\":langsJson, \"langIndex\":this.state.langIndex, \"boards\": boardsJson, \"boardIndex\": this.state.boardIndex, \"isDict\":this.state.isDict, \"isLoadingDict\":this.state.isLoadingDict, \"isPro\":this.state.isPro};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n\n    if(this.state.players.length > 1){\n      this.allowPassAlong(false);\n    }else{\n      this.allowPassAlong(true);\n    }\n  }\n\n  sendPassAlongJoinSuccess(player){\n    var json = {\"msg\":\"PASSALONGJOINSUCCESS\"};\n    this.ctx.sendCustomMessage(CHANNEL , player.id,  json);\n  }\n\n\n  updateDimensions(){\n     this.setState({width: window.innerWidth, height: window.innerHeight});\n  }\n\n  renderSquareLine(line,i){\n    return(\n      <div className=\"line\">\n        {line.map((square, i) => this.renderSquare(square, i))}\n      </div>\n    )\n  }\n  renderSquare(square, i){\n    var isSelected = false;\n    isSelected = square.isSelected;\n    /*if(square.x == cursorLocation[0] && square.y == cursorLocation[1]){\n      isSelected = true;\n    }*/\n    return(\n      <Square square={square} i={i} isSelected={isSelected}></Square>\n    )\n  }\n\n  renderLeftInfo(){\n    return(\n      <div className=\"leftinfo\">\n        <div className=\"title\">\n          {\"Letters Remaining\"}\n        </div>\n        <div className=\"poolcount\">\n          {this.letterPool.length}\n        </div>\n      </div>\n    );\n  }\n  renderRightInfo(isLobby){\n    var classname = \"rightinfo\";\n    if(isLobby)\n      classname = \"lobbyinfo\";\n\n    var winstring = \"\";\n    if(this.state.gameState == 2){\n      var max = 0;\n      var maxindex = new Array();\n      for(var i = 0; i < this.state.players.length; i++){\n        var player = this.state.players[i];\n        if(player.score > max){\n          max = player.score;\n          maxindex.push(i);\n        }\n        else if(player.score == max){\n          maxindex.push(i);\n        }\n      }\n\n      if(maxindex.length == 1){\n        winstring = this.state.players[maxindex[0]].name + \" wins!\";\n      }\n      else{\n        winstring = \"Draw between \";\n        for(var i = 0; i < maxindex.length; i++){\n          winstring += this.state.players[maxindex[i]].name;\n          if(i == maxindex.length -1){\n            winstring += \"!\";\n          }else{\n            winstring += \" and \";\n          }\n        }\n\n      }\n    }\n    var noScoreString = \"\";\n    if(this.state.noScoreCount > 1 && this.state.noScoreCount < 6){\n      noScoreString = \"There have been no points scored in the past \" + this.state.noScoreCount + \" turns. The game will end after 6 consecutive turns of no scoring.\"\n    }\n    var playersTitle = \"Players\";\n    if(this.state.players.length == 0)\n      playersTitle = \"Waiting for players...\";\n    return(\n      <div className={classname}>\n        <div className=\"title\">\n          {playersTitle}\n        </div>\n        <div className=\"players\">\n          {this.state.players.map((player, i) => this.renderPlayer(player, i, isLobby))}\n        </div>\n        <div className=\"wintext\">\n          {winstring}\n        </div>\n        <div className=\"warning\">\n          {noScoreString}\n        </div>\n      </div>\n    );\n\n  }\n  renderPlayer(player,i, isLobby){\n    var isBorder = \"\";\n    if(i < this.state.players.length-1)\n      isBorder = \" border\";\n    if(isLobby){\n      return(\n        <div className={\"player lobby\"}>\n          {player.name}\n        </div>)\n    }else{\n      return(\n        <div className={\"player\" + isBorder}>\n          <div className=\"playername\">\n          {player.name}\n          </div>\n          <div className=\"score\">\n          {player.score}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderProgressBar(progress){\n    //PAD PROGRESS A BIT TO UPDATE BEFORE PROCESSING FREEZE\n    var loadingProgress = this.state.loadingProgress + 0.05;\n    if(loadingProgress > 1.0)\n      loadingProgress = 1.0;\n\n    var width = loadingProgress * 200;\n    var language = Distributions[this.state.langIndex].name;\n    var progresstext = \"Loading Dictionary for \" + language +  \"...\";\n    if(loadingProgress == 1.0){\n      progresstext = \"Processing Dictionary for \" + language +  \"...\";\n    }\n    return(\n      <div className=\"progress\">\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n        <div className=\"progresstext\">{progresstext}</div>\n        <div className=\"progressbar\" style={{ 'width': width}}></div>\n      </div>\n    )\n  }\n\n\n  render() {\n    var scale = scale = Math.min(this.state.width/360, this.state.height/360);\n\n    if(this.state.gameState > 0){\n      return (\n        <div className=\"App\">\n          <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <div className=\"grid\">\n                <div className=\"fields\">\n                  {this.gameGrid.map((line, i) => this.renderSquareLine(line, i))}\n\n                </div>\n              </div>\n              {this.renderRightInfo(false)}\n              {this.renderLeftInfo()}\n            </div>\n          </div>\n          <img className=\"smalllogo\" src={wordcastlogo} />\n        </div>\n      );\n    }else{\n      if(this.state.isLoadingDict){\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderProgressBar(this.state.loadingProgress)}\n              </div>\n            </div>\n          </div>\n        );\n      }else{\n        return (\n          <div className=\"App\">\n            <div className=\"box\" >\n            <div className=\"container\" style={{ 'transform': 'scale(' + scale + ')'}}>\n              <img className=\"logo\" src={wordcastlogo} />\n              {this.renderRightInfo(true)}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    }\n    this.classname = \"square \";\n    this.multiplierText = \"\";\n    this.multiplierNum = \"\";\n\n    if(props.square.type == 1){\n      this.classname += \"letterx2\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 2){\n      this.classname += \"letterx3\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 3){\n      this.classname += \"letterx4\";\n      this.multiplierText = \"Letter\";\n      this.multiplierNum = \"x4\";\n    }\n    if(props.square.type == 4){\n      this.classname += \"wordx2\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(props.square.type == 5){\n      this.classname += \"wordx3\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x3\";\n    }\n    if(props.square.type == 6){\n      this.classname += \"wordx4\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x4\";\n    }\n    if(props.square.type == 7){\n      this.classname += \"startsquare\";\n      this.multiplierText = \"Word\";\n      this.multiplierNum = \"x2\";\n    }\n    if(this.multiplierText == \"\" && props.square.x == 7 && props.square.y == 7){\n        this.classname += \"startsquare\";\n    }\n\n    this.selected = false;\n    this.isLetter = false;\n    this.isTempLetter = false;\n\n\n  }\n\n  shouldComponentUpdate(nextProps) {\n    var oldSelect = this.selected;\n    this.selected = nextProps.isSelected;\n    if(oldSelect != this.selected){\n      return true;\n    }\n\n\n    if(nextProps.square.letter != null && !this.isLetter){\n      this.isLetter = true;\n      return true;\n    }\n    var isTempLetter = nextProps.square.tempLetter != null;\n    if(isTempLetter != this.isTempLetter){\n      this.isTempLetter = isTempLetter;\n      return true;\n    }\n\n    return false;\n\n  }\n\n\n  render(){\n    this.selected = this.props.isSelected;\n    var value = \"\";\n    var score = \"\";\n    var classname = this.classname;\n    var multiplierclassname = \"\";\n    var letterStyle = \"\";\n    if(this.props.square.letter != null){\n      classname = \"lettercontainer\";\n      value = this.props.square.letter.value;\n      score = this.props.square.letter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.letter.score == 0)\n        letterStyle = \" fade\";\n    }\n    else if(this.props.square.tempLetter != null){\n      classname = \"lettercontainertemp\";\n      value = this.props.square.tempLetter.value;\n      score = this.props.square.tempLetter.score;\n      multiplierclassname = \" hide\";\n      if(this.props.square.tempLetter.score == 0)\n        letterStyle = \" fade\";\n    }\n\n    if(this.selected){\n      return(\n        <div className={classname}>\n          <div className={classname + \" selected\"} style={{ 'marginLeft': this.margin}}>\n            <div className={\"multipliertext\" + multiplierclassname}>{this.multiplierText}</div>\n            <div className={\"multipliernum\" + multiplierclassname}>{this.multiplierNum}</div>\n            <div className={\"letter selected\" + letterStyle}>\n              {value}\n              <div className={\"letterscore\"}>\n                {score}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return(\n        <div className={classname}>\n          <div className={\"letter\" + letterStyle}>\n            {value}\n            <div className={\"letterscore\"}>\n              {score}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n}\n\nexport default App;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 268;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","(function(exports) {\n  exports.BloomFilter = BloomFilter;\n  exports.fnv_1a = fnv_1a;\n\n  var typedArrays = typeof ArrayBuffer !== \"undefined\";\n\n  // Creates a new bloom filter.  If *m* is an array-like object, with a length\n  // property, then the bloom filter is loaded with data from the array, where\n  // each element is a 32-bit integer.  Otherwise, *m* should specify the\n  // number of bits.  Note that *m* is rounded up to the nearest multiple of\n  // 32.  *k* specifies the number of hashing functions.\n  function BloomFilter(m, k) {\n    var a;\n    if (typeof m !== \"number\"){\n      a = m;\n      m = a.length * 32;\n    }\n\n    var n = Math.ceil(m / 32),\n        i = -1;\n    this.m = m = n * 32;\n    this.k = k;\n\n    if (typedArrays) {\n      var kbytes = 1 << Math.ceil(Math.log(Math.ceil(Math.log(m) / Math.LN2 / 8)) / Math.LN2),\n          array = kbytes === 1 ? Uint8Array : kbytes === 2 ? Uint16Array : Uint32Array,\n          kbuffer = new ArrayBuffer(kbytes * k),\n          buckets = this.buckets = new Int32Array(n);\n      if (a) while (++i < n) buckets[i] = a[i];\n      this._locations = new array(kbuffer);\n    } else {\n      var buckets = this.buckets = [];\n      if (a) while (++i < n) buckets[i] = a[i];\n      else while (++i < n) buckets[i] = 0;\n      this._locations = [];\n    }\n  }\n\n  // See http://willwhim.wpengine.com/2011/09/03/producing-n-hash-functions-by-hashing-only-once/\n  BloomFilter.prototype.locations = function(v) {\n    var k = this.k,\n        m = this.m,\n        r = this._locations,\n        a = fnv_1a(v),\n        b = fnv_1a(v, 1576284489), // The seed value is chosen randomly\n        x = a % m;\n    for (var i = 0; i < k; ++i) {\n      r[i] = x < 0 ? (x + m) : x;\n      x = (x + b) % m;\n    }\n    return r;\n  };\n\n  BloomFilter.prototype.add = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) buckets[Math.floor(l[i] / 32)] |= 1 << (l[i] % 32);\n  };\n\n  BloomFilter.prototype.test = function(v) {\n    var l = this.locations(v + \"\"),\n        k = this.k,\n        buckets = this.buckets;\n    for (var i = 0; i < k; ++i) {\n      var b = l[i];\n      if ((buckets[Math.floor(b / 32)] & (1 << (b % 32))) === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Estimated cardinality.\n  BloomFilter.prototype.size = function() {\n    var buckets = this.buckets,\n        bits = 0;\n    for (var i = 0, n = buckets.length; i < n; ++i) bits += popcnt(buckets[i]);\n    return -this.m * Math.log(1 - bits / this.m) / this.k;\n  };\n\n  // Turns the bloom filter into a buffer for later storage.\n  BloomFilter.prototype.serialize = function() {\n    // The format is the number of hashes as a uint16, followed by the buckets\n    // data as big endian int32's\n    var bucketLen = this.buckets.length,\n      target = new Buffer((bucketLen << 2) + 2);\n    target.writeUInt16BE(this.k, 0);\n\n    for (var i = 0; i < bucketLen; ++i) {\n      target.writeInt32BE(this.buckets[i], (i << 2) + 2);\n    }\n\n    return target;\n  };\n\n  // Parses a buffer created by a previous call to .serialize into a BloomFilter\n  BloomFilter.deserialize = function(data) {\n    var hashes = data.readUInt16BE(0),\n      count = (data.length - 2) >> 2,\n      buckets = typedArrays ? new Int32Array(count) : new Array(count);\n\n    for (var i = 0; i < count; ++i) {\n      buckets[i] = data.readInt32BE((i << 2) + 2);\n    }\n\n    return new BloomFilter(buckets, hashes);\n  };\n\n  BloomFilter.bytesToString = function(arr) {\n  var out = '';\n  for (let i = 0; i < arr.length; i += 2) {\n    out += String.fromCharCode((arr[i] << 8) | arr[i + 1]);\n  }\n  return out;\n}\n\n  BloomFilter.stringToBytes = function(str) {\n    const arr = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      let code = String.fromCharCode(str[i]);\n      arr[i * 2 + 0] = code >> 8;\n      arr[i * 2 + 1] = code;\n    }\n    return arr;\n  }\n\n  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\n  function popcnt(v) {\n    v -= (v >> 1) & 0x55555555;\n    v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\n    return ((v + (v >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\n  }\n\n  // Fowler/Noll/Vo hashing.\n  // Nonstandard variation: this function optionally takes a seed value that is incorporated\n  // into the offset basis. According to http://www.isthe.com/chongo/tech/comp/fnv/index.html\n  // \"almost any offset_basis will serve so long as it is non-zero\".\n  function fnv_1a(v, seed) {\n    var a = 2166136261 ^ (seed || 0);\n    for (var i = 0, n = v.length; i < n; ++i) {\n      var c = v.charCodeAt(i),\n          d = c & 0xff00;\n      if (d) a = fnv_multiply(a ^ d >> 8);\n      a = fnv_multiply(a ^ c & 0xff);\n    }\n    return fnv_mix(a);\n  }\n\n  // a * 16777619 mod 2**32\n  function fnv_multiply(a) {\n    return a + (a << 1) + (a << 4) + (a << 7) + (a << 8) + (a << 24);\n  }\n\n  // See https://web.archive.org/web/20131019013225/http://home.comcast.net/~bretm/hash/6.html\n  function fnv_mix(a) {\n    a += a << 13;\n    a ^= a >>> 7;\n    a += a << 3;\n    a ^= a >>> 17;\n    a += a << 5;\n    return a & 0xffffffff;\n  }\n})(typeof exports !== \"undefined\" ? exports : this);\n","module.exports = __webpack_public_path__ + \"static/media/wordcastlogo_white.c4dcc4ed.svg\";"],"sourceRoot":""}